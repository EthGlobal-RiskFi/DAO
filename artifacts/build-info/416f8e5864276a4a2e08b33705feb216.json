{"id":"416f8e5864276a4a2e08b33705feb216","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"},"contracts/MetricChallengeDAO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\n\n/**\n * @title MetricChallengeDAO\n * @dev A decentralized prediction market for metrics with staking mechanisms\n * @notice Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing\n */\ncontract MetricChallengeDAO is ReentrancyGuard, Ownable {\n    \n    // --- Data Structures ---\n    \n    struct Stake {\n        address staker;\n        uint256 timestamp;\n    }\n    \n    enum MetricStatus {\n        Pending,\n        Resolved\n    }\n    \n    struct Metric {\n        uint256 id;\n        address coinAddress; // Token contract address for the prediction\n        uint256 expectedLossPercent; // Stored as basis points (e.g., 1000 = 10%)\n        uint256 duration;\n        uint256 startTime;\n        MetricStatus status;\n        uint256 bountyCollateral;\n        Stake[] stakesInFavor;\n        Stake[] stakesAgainst;\n    }\n    \n    // --- State Variables ---\n    \n    mapping(uint256 => Metric) public metrics;\n    uint256 public nextMetricID;\n    uint256 public fixedStakeAmount; // Fixed stake amount in wei\n    \n    // Contract balance tracking\n    uint256 public totalContractBalance;\n    \n    // Pyth Network integration\n    IPyth public immutable pyth;\n    \n    // Mapping of coin addresses to their Pyth price feed IDs\n    mapping(address => bytes32) public coinToPriceFeedId;\n    \n    // Pyth Network configuration for Sepolia\n    address constant PYTH_CONTRACT_SEPOLIA = 0xDd24f84D36bF92C65F92307595C6B99D36b6f8c4;\n    \n    // Safety parameters\n    uint256 constant PRICE_STALENESS_THRESHOLD = 300; // 5 minutes\n    \n    // --- Events ---\n    \n    event MetricSubmitted(uint256 indexed metricID, address indexed submitter);\n    event Staked(uint256 indexed metricID, address indexed staker, string side);\n    event MetricResolved(uint256 indexed metricID, string winningSide);\n    event RewardDistributed(address indexed staker, uint256 amount);\n    event StakeAmountUpdated(uint256 newAmount);\n    \n    // --- Errors ---\n    \n    error MetricNotFound();\n    error StakingPeriodOver();\n    error MetricAlreadyResolved();\n    error InsufficientPayment();\n    error TransferFailed();\n    error InvalidParameters();\n    error InvalidPrice();\n    error PriceTooStale();\n    error UnsupportedCoin();\n    error InsufficientUpdateFee();\n    \n    // --- Constructor ---\n    \n    constructor(uint256 _fixedStakeAmount) Ownable(msg.sender) {\n        nextMetricID = 1;\n        fixedStakeAmount = _fixedStakeAmount;\n        pyth = IPyth(PYTH_CONTRACT_SEPOLIA);\n    }\n    \n    // --- Modifiers ---\n    \n    modifier metricExists(uint256 metricID) {\n        if (metricID == 0 || metricID >= nextMetricID) {\n            revert MetricNotFound();\n        }\n        _;\n    }\n    \n    modifier stakingPeriodActive(uint256 metricID) {\n        Metric storage metric = metrics[metricID];\n        if (block.timestamp >= metric.startTime + metric.duration) {\n            revert StakingPeriodOver();\n        }\n        _;\n    }\n    \n    modifier onlyPending(uint256 metricID) {\n        if (metrics[metricID].status != MetricStatus.Pending) {\n            revert MetricAlreadyResolved();\n        }\n        _;\n    }\n    \n    // --- Main Functions ---\n    \n    /**\n     * @dev Submit a new metric for prediction\n     * @param expectedLossPercent Expected loss percentage in basis points (e.g., 1000 = 10%)\n     * @param duration Duration of staking period in seconds\n     * @return metricID The ID of the newly created metric\n     */\n    function submitMetric(\n        uint256 expectedLossPercent,\n        uint256 duration,\n        uint256 bountyCollateral\n    ) external payable nonReentrant returns (uint256) {\n        if (expectedLossPercent > 10000 || duration == 0) {\n            revert InvalidParameters();\n        }\n        \n        uint256 metricID = nextMetricID;\n        \n        // Create new metric\n        Metric storage newMetric = metrics[metricID];\n        newMetric.id = metricID;\n        newMetric.expectedLossPercent = expectedLossPercent;\n        newMetric.duration = duration;\n        newMetric.startTime = block.timestamp;\n        newMetric.status = MetricStatus.Pending;\n        newMetric.bountyCollateral = bountyCollateral;\n        \n        // Update contract state\n        nextMetricID++;\n        totalContractBalance += bountyCollateral;\n        \n        emit MetricSubmitted(metricID, msg.sender);\n        return metricID;\n    }\n    \n    /**\n     * @dev Stake in favor of a metric's prediction\n     * @param metricID The ID of the metric to stake on\n     */\n    function stakeInFavor(uint256 metricID) \n        external \n        nonReentrant \n        metricExists(metricID) \n        stakingPeriodActive(metricID) \n        onlyPending(metricID) \n    {\n        \n        Metric storage metric = metrics[metricID];\n        metric.stakesInFavor.push(Stake({\n            staker: msg.sender,\n            timestamp: block.timestamp\n        }));\n        emit Staked(metricID, msg.sender, \"InFavor\");\n    }\n    \n    /**\n     * @dev Stake against a metric's prediction\n     * @param metricID The ID of the metric to stake on\n     */\n    function stakeAgainst(uint256 metricID) \n        external \n        nonReentrant \n        metricExists(metricID) \n        stakingPeriodActive(metricID) \n        onlyPending(metricID) \n    {\n        \n        Metric storage metric = metrics[metricID];\n        metric.stakesAgainst.push(Stake({\n            staker: msg.sender,\n            timestamp: block.timestamp\n        }));        \n        emit Staked(metricID, msg.sender, \"Against\");\n    }\n    \n    /**\n     * @dev Resolve a metric using Pyth price data and distribute rewards\n     * @param metricID The ID of the metric to resolve\n     */\n    function resolveMetric(uint256 metricID) \n        external \n        nonReentrant \n        metricExists(metricID) \n        onlyPending(metricID) \n    {\n        Metric storage metric = metrics[metricID];\n        \n        // Check if staking period is over\n        if (block.timestamp < metric.startTime + metric.duration) {\n            revert StakingPeriodOver();\n        }\n        \n        // Get price feed ID for this coin\n        bytes32 priceFeedId = coinToPriceFeedId[metric.coinAddress];\n        if (priceFeedId == bytes32(0)) {\n            revert UnsupportedCoin();\n        }\n        \n        // Get current price from Pyth\n        PythStructs.Price memory currentPriceData = pyth.getPriceUnsafe(priceFeedId);\n        if (currentPriceData.price <= 0) {\n            revert InvalidPrice();\n        }\n        if (block.timestamp - currentPriceData.publishTime > PRICE_STALENESS_THRESHOLD) {\n            revert PriceTooStale();\n        }\n        \n        // Get baseline price from Pyth (price at metric start time)\n        // Note: In a real implementation, you'd need to store baseline price or use historical data\n        // For now, we'll assume the baseline price was stored when metric was created\n        // This is a simplified version - you'd need to modify submitMetric to store baseline price\n        \n        // For demonstration, let's assume we have a way to get historical price\n        // In practice, you'd store the baseline price when the metric is submitted\n        int64 baselinePrice = currentPriceData.price; // This should be the actual baseline price\n        int64 currentPrice = currentPriceData.price;\n        \n        // Calculate actual loss percentage\n        // actualLoss = (baselinePrice - currentPrice) / baselinePrice * 10000\n        uint256 actualLossPercent;\n        if (currentPrice >= baselinePrice) {\n            actualLossPercent = 0; // No loss, actually a gain\n        } else {\n            uint256 priceDiff = uint256(uint64(baselinePrice - currentPrice));\n            uint256 baseline = uint256(uint64(baselinePrice));\n            actualLossPercent = (priceDiff * 10000) / baseline;\n        }\n        \n        // Ensure actualLossPercent doesn't exceed 10000 (100%)\n        if (actualLossPercent > 10000) {\n            actualLossPercent = 10000;\n        }\n        \n        // Determine winning side\n        bool inFavorWins = actualLossPercent >= metric.expectedLossPercent;\n        Stake[] storage winningStakes = inFavorWins ? metric.stakesInFavor : metric.stakesAgainst;\n        Stake[] storage losingStakes = inFavorWins ? metric.stakesAgainst : metric.stakesInFavor;\n        string memory winningSide = inFavorWins ? \"InFavor\" : \"Against\";\n        \n        // Calculate reward pool\n        uint256 rewardPool = metric.bountyCollateral + (losingStakes.length * fixedStakeAmount);\n        \n        if (winningStakes.length > 0 && rewardPool > 0) {\n            // Calculate total earlyness for proportional distribution\n            uint256 totalEarlyness = 0;\n            for (uint256 i = 0; i < winningStakes.length; i++) {\n                uint256 stakingTime = winningStakes[i].timestamp - metric.startTime;\n                uint256 earlyness = metric.duration - stakingTime;\n                totalEarlyness += earlyness;\n            }\n            \n            // Distribute rewards based on earlyness\n            if (totalEarlyness > 0) {\n                for (uint256 i = 0; i < winningStakes.length; i++) {\n                    uint256 stakingTime = winningStakes[i].timestamp - metric.startTime;\n                    uint256 earlyness = metric.duration - stakingTime;\n                    uint256 reward = (earlyness * rewardPool) / totalEarlyness;\n                    \n                    if (reward > 0) {\n                        totalContractBalance -= reward;\n                        (bool success, ) = payable(winningStakes[i].staker).call{value: reward}(\"\");\n                        if (!success) {\n                            revert TransferFailed();\n                        }\n                        emit RewardDistributed(winningStakes[i].staker, reward);\n                    }\n                }\n            }\n        }\n        \n        // Mark metric as resolved\n        metric.status = MetricStatus.Resolved;\n        \n        emit MetricResolved(metricID, winningSide);\n    }\n    \n    // --- View Functions ---\n    \n    /**\n     * @dev Get metric details\n     * @param metricID The ID of the metric\n     * @return id The metric ID\n     * @return expectedLossPercent Expected loss percentage in basis points\n     * @return duration Duration of staking period in seconds\n     * @return startTime Start timestamp of the metric\n     * @return status Current status of the metric\n     * @return bountyCollateral Bounty collateral amount\n     * @return stakesInFavorCount Number of stakes in favor\n     * @return stakesAgainstCount Number of stakes against\n     */\n    function getMetric(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (\n            uint256 id,\n            uint256 expectedLossPercent,\n            uint256 duration,\n            uint256 startTime,\n            MetricStatus status,\n            uint256 bountyCollateral,\n            uint256 stakesInFavorCount,\n            uint256 stakesAgainstCount\n        ) \n    {\n        Metric storage metric = metrics[metricID];\n        return (\n            metric.id,\n            metric.expectedLossPercent,\n            metric.duration,\n            metric.startTime,\n            metric.status,\n            metric.bountyCollateral,\n            metric.stakesInFavor.length,\n            metric.stakesAgainst.length\n        );\n    }\n    \n    /**\n     * @dev Get stakes in favor of a metric\n     * @param metricID The ID of the metric\n     * @return Array of stakes in favor\n     */\n    function getStakesInFavor(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (Stake[] memory) \n    {\n        return metrics[metricID].stakesInFavor;\n    }\n    \n    /**\n     * @dev Get stakes against a metric\n     * @param metricID The ID of the metric\n     * @return Array of stakes against\n     */\n    function getStakesAgainst(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (Stake[] memory) \n    {\n        return metrics[metricID].stakesAgainst;\n    }\n    \n    /**\n     * @dev Check if staking period is active for a metric\n     * @param metricID The ID of the metric\n     * @return True if staking period is active\n     */\n    function isStakingActive(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (bool) \n    {\n        Metric storage metric = metrics[metricID];\n        return block.timestamp < metric.startTime + metric.duration && \n               metric.status == MetricStatus.Pending;\n    }\n    \n    // --- Admin Functions ---\n    \n    /**\n     * @dev Add or update a supported coin with its Pyth price feed ID\n     * @param coinAddress Token contract address\n     * @param priceFeedId Pyth price feed ID for this coin\n     */\n    function setSupportedCoin(address coinAddress, bytes32 priceFeedId) external onlyOwner {\n        if (coinAddress == address(0) || priceFeedId == bytes32(0)) {\n            revert InvalidParameters();\n        }\n        coinToPriceFeedId[coinAddress] = priceFeedId;\n    }\n\n    /**\n     * @dev Remove a supported coin\n     * @param coinAddress Token contract address to remove\n     */\n    function removeSupportedCoin(address coinAddress) external onlyOwner {\n        delete coinToPriceFeedId[coinAddress];\n    }\n\n    /**\n     * @dev Update the fixed stake amount (only owner)\n     * @param newAmount New stake amount in wei\n     */\n    function updateFixedStakeAmount(uint256 newAmount) external onlyOwner {\n        if (newAmount == 0) {\n            revert InvalidParameters();\n        }\n        fixedStakeAmount = newAmount;\n        emit StakeAmountUpdated(newAmount);\n    }\n    \n    /**\n     * @dev Emergency withdraw function (only owner)\n     * @param amount Amount to withdraw in wei\n     */\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        if (amount > address(this).balance) {\n            revert InsufficientPayment();\n        }\n        \n        (bool success, ) = payable(owner()).call{value: amount}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n    \n    /**\n     * @dev Get contract balance\n     * @return Contract balance in wei\n     */\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n    \n    // --- Fallback Functions ---\n    \n    receive() external payable {\n        totalContractBalance += msg.value;\n    }\n    \n    fallback() external payable {\n        totalContractBalance += msg.value;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"135:894:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"ReentrancyGuard","nameLocation":"1048:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":183,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:2","nodeType":"VariableDeclaration","scope":246,"src":"1818:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":186,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1864:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_status","nameLocation":"1923:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1907:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1937:52:2","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":191,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2028:2:2"},"src":"1994:37:2"},{"body":{"id":198,"nodeType":"Block","src":"2051:38:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2071:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":197,"nodeType":"ExpressionStatement","src":"2061:21:2"}]},"id":199,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2048:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2051:0:2"},"scope":246,"src":"2037:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2490:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2500:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2500:21:2"},{"id":205,"nodeType":"PlaceholderStatement","src":"2531:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2542:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2542:20:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2095:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":210,"name":"nonReentrant","nameLocation":"2475:12:2","nodeType":"ModifierDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2487:2:2"},"src":"2466:103:2","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2614:268:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":214,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"IfStatement","src":"2698:86:2","trueBody":{"id":219,"nodeType":"Block","src":"2722:62:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2743:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"RevertStatement","src":"2736:37:2"}]}},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"2858:17:2"}]},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2614:0:2"},"scope":246,"src":"2575:307:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"2926:170:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3078:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"3068:21:2"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2915:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2926:0:2"},"scope":246,"src":"2888:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":244,"nodeType":"Block","src":"3339:42:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":241,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":239,"id":243,"nodeType":"Return","src":"3349:25:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3102:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3307:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"3333:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:2"},"scope":246,"src":"3275:106:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"1030:2353:2","usedErrors":[191],"usedEvents":[]}],"src":"109:3275:2"},"id":2},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","exportedSymbols":{"IPyth":[409],"IPythEvents":[439],"PythStructs":[487]},"id":410,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:3"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"./PythStructs.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":488,"src":"64:27:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","file":"./IPythEvents.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":440,"src":"92:27:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"IPythEvents","nameLocations":["397:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"397:11:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"397:11:3"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"121:257:3","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":409,"linearizedBaseContracts":[409,439],"name":"IPyth","nameLocation":"388:5:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"415:669:3","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":262,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"1098:14:3","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"id","nameLocation":"1130:2:3","nodeType":"VariableDeclaration","scope":262,"src":"1122:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1122:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1112:26:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"price","nameLocation":"1187:5:3","nodeType":"VariableDeclaration","scope":262,"src":"1162:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"PythStructs.Price","nameLocations":["1162:11:3","1174:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1162:17:3"},"referencedDeclaration":450,"src":"1162:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1161:32:3"},"scope":409,"src":"1089:105:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"1200:423:3","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":273,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"1637:19:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"id","nameLocation":"1674:2:3","nodeType":"VariableDeclaration","scope":273,"src":"1666:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"age","nameLocation":"1691:3:3","nodeType":"VariableDeclaration","scope":273,"src":"1686:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:44:3"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"price","nameLocation":"1749:5:3","nodeType":"VariableDeclaration","scope":273,"src":"1724:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":270,"nodeType":"UserDefinedTypeName","pathNode":{"id":269,"name":"PythStructs.Price","nameLocations":["1724:11:3","1736:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1724:17:3"},"referencedDeclaration":450,"src":"1724:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1723:32:3"},"scope":409,"src":"1628:128:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1762:925:3","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"2701:17:3","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"id","nameLocation":"2736:2:3","nodeType":"VariableDeclaration","scope":282,"src":"2728:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2728:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2718:26:3"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"price","nameLocation":"2793:5:3","nodeType":"VariableDeclaration","scope":282,"src":"2768:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"PythStructs.Price","nameLocations":["2768:11:3","2780:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"2768:17:3"},"referencedDeclaration":450,"src":"2768:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2767:32:3"},"scope":409,"src":"2692:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"2806:472:3","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":293,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"3292:22:3","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"id","nameLocation":"3332:2:3","nodeType":"VariableDeclaration","scope":293,"src":"3324:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"age","nameLocation":"3349:3:3","nodeType":"VariableDeclaration","scope":293,"src":"3344:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3314:44:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"price","nameLocation":"3407:5:3","nodeType":"VariableDeclaration","scope":293,"src":"3382:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":290,"nodeType":"UserDefinedTypeName","pathNode":{"id":289,"name":"PythStructs.Price","nameLocations":["3382:11:3","3394:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"3382:17:3"},"referencedDeclaration":450,"src":"3382:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3381:32:3"},"scope":409,"src":"3283:131:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"3420:535:3","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":300,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"3969:16:3","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"updateData","nameLocation":"4003:10:3","nodeType":"VariableDeclaration","scope":300,"src":"3986:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3986:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":296,"nodeType":"ArrayTypeName","src":"3986:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3985:29:3"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"4031:0:3"},"scope":409,"src":"3960:72:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"4038:1299:3","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"5351:27:3","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"updateData","nameLocation":"5405:10:3","nodeType":"VariableDeclaration","scope":313,"src":"5388:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5388:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":303,"nodeType":"ArrayTypeName","src":"5388:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"priceIds","nameLocation":"5444:8:3","nodeType":"VariableDeclaration","scope":313,"src":"5425:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5425:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":306,"nodeType":"ArrayTypeName","src":"5425:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"publishTimes","nameLocation":"5480:12:3","nodeType":"VariableDeclaration","scope":313,"src":"5462:30:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":308,"name":"uint64","nodeType":"ElementaryTypeName","src":"5462:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":309,"nodeType":"ArrayTypeName","src":"5462:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"5378:120:3"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"5515:0:3"},"scope":409,"src":"5342:174:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"5522:178:3","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":322,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"5714:12:3","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"updateData","nameLocation":"5753:10:3","nodeType":"VariableDeclaration","scope":322,"src":"5736:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":316,"nodeType":"ArrayTypeName","src":"5736:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5726:43:3"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"feeAmount","nameLocation":"5798:9:3","nodeType":"VariableDeclaration","scope":322,"src":"5793:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint","nodeType":"ElementaryTypeName","src":"5793:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5792:16:3"},"scope":409,"src":"5705:104:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"5815:165:3","text":"@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"5f674e35","id":331,"implemented":false,"kind":"function","modifiers":[],"name":"getTwapUpdateFee","nameLocation":"5994:16:3","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"updateData","nameLocation":"6037:10:3","nodeType":"VariableDeclaration","scope":331,"src":"6020:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":324,"name":"bytes","nodeType":"ElementaryTypeName","src":"6020:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":325,"nodeType":"ArrayTypeName","src":"6020:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6010:43:3"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"feeAmount","nameLocation":"6082:9:3","nodeType":"VariableDeclaration","scope":331,"src":"6077:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6076:16:3"},"scope":409,"src":"5985:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"6099:1213:3","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":349,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"7326:21:3","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"updateData","nameLocation":"7374:10:3","nodeType":"VariableDeclaration","scope":349,"src":"7357:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":334,"nodeType":"ArrayTypeName","src":"7357:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"priceIds","nameLocation":"7413:8:3","nodeType":"VariableDeclaration","scope":349,"src":"7394:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7394:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":337,"nodeType":"ArrayTypeName","src":"7394:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"minPublishTime","nameLocation":"7438:14:3","nodeType":"VariableDeclaration","scope":349,"src":"7431:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":339,"name":"uint64","nodeType":"ElementaryTypeName","src":"7431:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"maxPublishTime","nameLocation":"7469:14:3","nodeType":"VariableDeclaration","scope":349,"src":"7462:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":341,"name":"uint64","nodeType":"ElementaryTypeName","src":"7462:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7347:142:3"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"priceFeeds","nameLocation":"7547:10:3","nodeType":"VariableDeclaration","scope":349,"src":"7516:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":345,"nodeType":"UserDefinedTypeName","pathNode":{"id":344,"name":"PythStructs.PriceFeed","nameLocations":["7516:11:3","7528:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"7516:21:3"},"referencedDeclaration":459,"src":"7516:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":346,"nodeType":"ArrayTypeName","src":"7516:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"7515:43:3"},"scope":409,"src":"7317:242:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"7565:1495:3","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"3a229d18","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesWithConfig","nameLocation":"9074:31:3","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"updateData","nameLocation":"9132:10:3","nodeType":"VariableDeclaration","scope":376,"src":"9115:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"9115:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":352,"nodeType":"ArrayTypeName","src":"9115:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"priceIds","nameLocation":"9171:8:3","nodeType":"VariableDeclaration","scope":376,"src":"9152:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9152:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":355,"nodeType":"ArrayTypeName","src":"9152:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"minAllowedPublishTime","nameLocation":"9196:21:3","nodeType":"VariableDeclaration","scope":376,"src":"9189:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"9189:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"maxAllowedPublishTime","nameLocation":"9234:21:3","nodeType":"VariableDeclaration","scope":376,"src":"9227:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":359,"name":"uint64","nodeType":"ElementaryTypeName","src":"9227:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"checkUniqueness","nameLocation":"9270:15:3","nodeType":"VariableDeclaration","scope":376,"src":"9265:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"9265:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"checkUpdateDataIsMinimal","nameLocation":"9300:24:3","nodeType":"VariableDeclaration","scope":376,"src":"9295:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"9295:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"storeUpdatesIfFresh","nameLocation":"9339:19:3","nodeType":"VariableDeclaration","scope":376,"src":"9334:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"9334:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9105:259:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"priceFeeds","nameLocation":"9459:10:3","nodeType":"VariableDeclaration","scope":376,"src":"9428:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":369,"nodeType":"UserDefinedTypeName","pathNode":{"id":368,"name":"PythStructs.PriceFeed","nameLocations":["9428:11:3","9440:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"9428:21:3"},"referencedDeclaration":459,"src":"9428:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":370,"nodeType":"ArrayTypeName","src":"9428:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"slots","nameLocation":"9499:5:3","nodeType":"VariableDeclaration","scope":376,"src":"9483:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":372,"name":"uint64","nodeType":"ElementaryTypeName","src":"9483:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":373,"nodeType":"ArrayTypeName","src":"9483:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9414:100:3"},"scope":409,"src":"9065:450:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"9521:1194:3","text":"@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"},"functionSelector":"eb942158","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"parseTwapPriceFeedUpdates","nameLocation":"10729:25:3","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"updateData","nameLocation":"10781:10:3","nodeType":"VariableDeclaration","scope":390,"src":"10764:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":378,"name":"bytes","nodeType":"ElementaryTypeName","src":"10764:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":379,"nodeType":"ArrayTypeName","src":"10764:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"priceIds","nameLocation":"10820:8:3","nodeType":"VariableDeclaration","scope":390,"src":"10801:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10801:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":382,"nodeType":"ArrayTypeName","src":"10801:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10754:80:3"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"twapPriceFeeds","nameLocation":"10920:14:3","nodeType":"VariableDeclaration","scope":390,"src":"10885:49:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$471_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"},"typeName":{"baseType":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"PythStructs.TwapPriceFeed","nameLocations":["10885:11:3","10897:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":471,"src":"10885:25:3"},"referencedDeclaration":471,"src":"10885:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_TwapPriceFeed_$471_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed"}},"id":387,"nodeType":"ArrayTypeName","src":"10885:27:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$471_storage_$dyn_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"}},"visibility":"internal"}],"src":"10884:51:3"},"scope":409,"src":"10720:216:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"10942:972:3","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"11928:27:3","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"updateData","nameLocation":"11982:10:3","nodeType":"VariableDeclaration","scope":408,"src":"11965:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":392,"name":"bytes","nodeType":"ElementaryTypeName","src":"11965:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":393,"nodeType":"ArrayTypeName","src":"11965:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"priceIds","nameLocation":"12021:8:3","nodeType":"VariableDeclaration","scope":408,"src":"12002:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12002:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":396,"nodeType":"ArrayTypeName","src":"12002:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"minPublishTime","nameLocation":"12046:14:3","nodeType":"VariableDeclaration","scope":408,"src":"12039:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":398,"name":"uint64","nodeType":"ElementaryTypeName","src":"12039:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"maxPublishTime","nameLocation":"12077:14:3","nodeType":"VariableDeclaration","scope":408,"src":"12070:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":400,"name":"uint64","nodeType":"ElementaryTypeName","src":"12070:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11955:142:3"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"priceFeeds","nameLocation":"12155:10:3","nodeType":"VariableDeclaration","scope":408,"src":"12124:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":404,"nodeType":"UserDefinedTypeName","pathNode":{"id":403,"name":"PythStructs.PriceFeed","nameLocations":["12124:11:3","12136:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"12124:21:3"},"referencedDeclaration":459,"src":"12124:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":405,"nodeType":"ArrayTypeName","src":"12124:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"12123:43:3"},"scope":409,"src":"11919:248:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":410,"src":"378:11791:3","usedErrors":[],"usedEvents":[423,438]}],"src":"39:12131:3"},"id":3},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","exportedSymbols":{"IPythEvents":[439]},"id":440,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"64:170:4","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":439,"linearizedBaseContracts":[439],"name":"IPythEvents","nameLocation":"244:11:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"262:305:4","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":423,"name":"PriceFeedUpdate","nameLocation":"578:15:4","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"619:2:4","nodeType":"VariableDeclaration","scope":423,"src":"603:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"603:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":417,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"638:11:4","nodeType":"VariableDeclaration","scope":423,"src":"631:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":416,"name":"uint64","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":419,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"665:5:4","nodeType":"VariableDeclaration","scope":423,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":418,"name":"int64","nodeType":"ElementaryTypeName","src":"659:5:4","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"687:4:4","nodeType":"VariableDeclaration","scope":423,"src":"680:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":420,"name":"uint64","nodeType":"ElementaryTypeName","src":"680:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"593:104:4"},"src":"572:126:4"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"704:376:4","text":"@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."},"eventSelector":"d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977","id":438,"name":"TwapPriceFeedUpdate","nameLocation":"1091:19:4","nodeType":"EventDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1136:2:4","nodeType":"VariableDeclaration","scope":438,"src":"1120:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":428,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1155:9:4","nodeType":"VariableDeclaration","scope":438,"src":"1148:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":427,"name":"uint64","nodeType":"ElementaryTypeName","src":"1148:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":430,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1181:7:4","nodeType":"VariableDeclaration","scope":438,"src":"1174:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":429,"name":"uint64","nodeType":"ElementaryTypeName","src":"1174:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":false,"mutability":"mutable","name":"twapPrice","nameLocation":"1204:9:4","nodeType":"VariableDeclaration","scope":438,"src":"1198:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":431,"name":"int64","nodeType":"ElementaryTypeName","src":"1198:5:4","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":434,"indexed":false,"mutability":"mutable","name":"twapConf","nameLocation":"1230:8:4","nodeType":"VariableDeclaration","scope":438,"src":"1223:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":433,"name":"uint64","nodeType":"ElementaryTypeName","src":"1223:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":436,"indexed":false,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"1255:14:4","nodeType":"VariableDeclaration","scope":438,"src":"1248:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":435,"name":"uint32","nodeType":"ElementaryTypeName","src":"1248:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1110:165:4"},"src":"1085:191:4"}],"scope":440,"src":"234:1044:4","usedErrors":[],"usedEvents":[423,438]}],"src":"39:1240:4"},"id":4},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","exportedSymbols":{"PythStructs":[487]},"id":488,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":441,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":487,"linearizedBaseContracts":[487],"name":"PythStructs","nameLocation":"73:11:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":450,"members":[{"constant":false,"id":443,"mutability":"mutable","name":"price","nameLocation":"647:5:5","nodeType":"VariableDeclaration","scope":450,"src":"641:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":442,"name":"int64","nodeType":"ElementaryTypeName","src":"641:5:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"conf","nameLocation":"717:4:5","nodeType":"VariableDeclaration","scope":450,"src":"710:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":444,"name":"uint64","nodeType":"ElementaryTypeName","src":"710:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"expo","nameLocation":"763:4:5","nodeType":"VariableDeclaration","scope":450,"src":"757:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":446,"name":"int32","nodeType":"ElementaryTypeName","src":"757:5:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"publishTime","nameLocation":"848:11:5","nodeType":"VariableDeclaration","scope":450,"src":"843:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"608:5:5","nodeType":"StructDefinition","scope":487,"src":"601:265:5","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":459,"members":[{"constant":false,"id":452,"mutability":"mutable","name":"id","nameLocation":"1013:2:5","nodeType":"VariableDeclaration","scope":459,"src":"1005:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"price","nameLocation":"1065:5:5","nodeType":"VariableDeclaration","scope":459,"src":"1059:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":454,"nodeType":"UserDefinedTypeName","pathNode":{"id":453,"name":"Price","nameLocations":["1059:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1059:5:5"},"referencedDeclaration":450,"src":"1059:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"emaPrice","nameLocation":"1158:8:5","nodeType":"VariableDeclaration","scope":459,"src":"1152:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":457,"nodeType":"UserDefinedTypeName","pathNode":{"id":456,"name":"Price","nameLocations":["1152:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1152:5:5"},"referencedDeclaration":450,"src":"1152:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"960:9:5","nodeType":"StructDefinition","scope":487,"src":"953:220:5","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceFeed","id":471,"members":[{"constant":false,"id":461,"mutability":"mutable","name":"id","nameLocation":"1243:2:5","nodeType":"VariableDeclaration","scope":471,"src":"1235:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"startTime","nameLocation":"1296:9:5","nodeType":"VariableDeclaration","scope":471,"src":"1289:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":462,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"endTime","nameLocation":"1354:7:5","nodeType":"VariableDeclaration","scope":471,"src":"1347:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":464,"name":"uint64","nodeType":"ElementaryTypeName","src":"1347:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"twap","nameLocation":"1399:4:5","nodeType":"VariableDeclaration","scope":471,"src":"1393:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":467,"nodeType":"UserDefinedTypeName","pathNode":{"id":466,"name":"Price","nameLocations":["1393:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1393:5:5"},"referencedDeclaration":450,"src":"1393:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"2034:14:5","nodeType":"VariableDeclaration","scope":471,"src":"2027:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":469,"name":"uint32","nodeType":"ElementaryTypeName","src":"2027:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"TwapPriceFeed","nameLocation":"1186:13:5","nodeType":"StructDefinition","scope":487,"src":"1179:876:5","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceInfo","id":486,"members":[{"constant":false,"id":473,"mutability":"mutable","name":"cumulativePrice","nameLocation":"2190:15:5","nodeType":"VariableDeclaration","scope":486,"src":"2183:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":472,"name":"int128","nodeType":"ElementaryTypeName","src":"2183:6:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"cumulativeConf","nameLocation":"2223:14:5","nodeType":"VariableDeclaration","scope":486,"src":"2215:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":474,"name":"uint128","nodeType":"ElementaryTypeName","src":"2215:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"numDownSlots","nameLocation":"2272:12:5","nodeType":"VariableDeclaration","scope":486,"src":"2265:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":476,"name":"uint64","nodeType":"ElementaryTypeName","src":"2265:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"publishSlot","nameLocation":"2301:11:5","nodeType":"VariableDeclaration","scope":486,"src":"2294:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":478,"name":"uint64","nodeType":"ElementaryTypeName","src":"2294:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"publishTime","nameLocation":"2329:11:5","nodeType":"VariableDeclaration","scope":486,"src":"2322:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"2322:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"prevPublishTime","nameLocation":"2357:15:5","nodeType":"VariableDeclaration","scope":486,"src":"2350:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":482,"name":"uint64","nodeType":"ElementaryTypeName","src":"2350:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"expo","nameLocation":"2406:4:5","nodeType":"VariableDeclaration","scope":486,"src":"2400:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":484,"name":"int32","nodeType":"ElementaryTypeName","src":"2400:5:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"TwapPriceInfo","nameLocation":"2141:13:5","nodeType":"StructDefinition","scope":487,"src":"2134:283:5","visibility":"public"}],"scope":488,"src":"64:2355:5","usedErrors":[],"usedEvents":[]}],"src":"39:2381:5"},"id":5},"contracts/MetricChallengeDAO.sol":{"ast":{"absolutePath":"contracts/MetricChallengeDAO.sol","exportedSymbols":{"Context":[177],"IPyth":[409],"IPythEvents":[439],"MetricChallengeDAO":[1483],"Ownable":[147],"PythStructs":[487],"ReentrancyGuard":[246]},"id":1484,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":489,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1484,"sourceUnit":247,"src":"58:59:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1484,"sourceUnit":148,"src":"118:52:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","file":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","id":492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1484,"sourceUnit":410,"src":"171:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","id":493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1484,"sourceUnit":488,"src":"222:56:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":495,"name":"ReentrancyGuard","nameLocations":["528:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"528:15:6"},"id":496,"nodeType":"InheritanceSpecifier","src":"528:15:6"},{"baseName":{"id":497,"name":"Ownable","nameLocations":["545:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"545:7:6"},"id":498,"nodeType":"InheritanceSpecifier","src":"545:7:6"}],"canonicalName":"MetricChallengeDAO","contractDependencies":[],"contractKind":"contract","documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"280:216:6","text":" @title MetricChallengeDAO\n @dev A decentralized prediction market for metrics with staking mechanisms\n @notice Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing"},"fullyImplemented":true,"id":1483,"linearizedBaseContracts":[1483,147,177,246],"name":"MetricChallengeDAO","nameLocation":"506:18:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MetricChallengeDAO.Stake","id":503,"members":[{"constant":false,"id":500,"mutability":"mutable","name":"staker","nameLocation":"631:6:6","nodeType":"VariableDeclaration","scope":503,"src":"623:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"timestamp","nameLocation":"655:9:6","nodeType":"VariableDeclaration","scope":503,"src":"647:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Stake","nameLocation":"607:5:6","nodeType":"StructDefinition","scope":1483,"src":"600:71:6","visibility":"public"},{"canonicalName":"MetricChallengeDAO.MetricStatus","id":506,"members":[{"id":504,"name":"Pending","nameLocation":"709:7:6","nodeType":"EnumValue","src":"709:7:6"},{"id":505,"name":"Resolved","nameLocation":"726:8:6","nodeType":"EnumValue","src":"726:8:6"}],"name":"MetricStatus","nameLocation":"686:12:6","nodeType":"EnumDefinition","src":"681:59:6"},{"canonicalName":"MetricChallengeDAO.Metric","id":530,"members":[{"constant":false,"id":508,"mutability":"mutable","name":"id","nameLocation":"782:2:6","nodeType":"VariableDeclaration","scope":530,"src":"774:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"coinAddress","nameLocation":"802:11:6","nodeType":"VariableDeclaration","scope":530,"src":"794:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"876:19:6","nodeType":"VariableDeclaration","scope":530,"src":"868:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"duration","nameLocation":"958:8:6","nodeType":"VariableDeclaration","scope":530,"src":"950:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"startTime","nameLocation":"984:9:6","nodeType":"VariableDeclaration","scope":530,"src":"976:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"status","nameLocation":"1016:6:6","nodeType":"VariableDeclaration","scope":530,"src":"1003:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"},"typeName":{"id":518,"nodeType":"UserDefinedTypeName","pathNode":{"id":517,"name":"MetricStatus","nameLocations":["1003:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":506,"src":"1003:12:6"},"referencedDeclaration":506,"src":"1003:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"bountyCollateral","nameLocation":"1040:16:6","nodeType":"VariableDeclaration","scope":530,"src":"1032:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1032:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"stakesInFavor","nameLocation":"1074:13:6","nodeType":"VariableDeclaration","scope":530,"src":"1066:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"Stake","nameLocations":["1066:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"1066:5:6"},"referencedDeclaration":503,"src":"1066:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":524,"nodeType":"ArrayTypeName","src":"1066:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"stakesAgainst","nameLocation":"1105:13:6","nodeType":"VariableDeclaration","scope":530,"src":"1097:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"Stake","nameLocations":["1097:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"1097:5:6"},"referencedDeclaration":503,"src":"1097:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":528,"nodeType":"ArrayTypeName","src":"1097:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"name":"Metric","nameLocation":"757:6:6","nodeType":"StructDefinition","scope":1483,"src":"750:375:6","visibility":"public"},{"constant":false,"functionSelector":"6d9aac62","id":535,"mutability":"mutable","name":"metrics","nameLocation":"1205:7:6","nodeType":"VariableDeclaration","scope":1483,"src":"1171:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric)"},"typeName":{"id":534,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1171:26:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":533,"nodeType":"UserDefinedTypeName","pathNode":{"id":532,"name":"Metric","nameLocations":["1190:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"1190:6:6"},"referencedDeclaration":530,"src":"1190:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}}},"visibility":"public"},{"constant":false,"functionSelector":"3937066c","id":537,"mutability":"mutable","name":"nextMetricID","nameLocation":"1233:12:6","nodeType":"VariableDeclaration","scope":1483,"src":"1218:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5af01b91","id":539,"mutability":"mutable","name":"fixedStakeAmount","nameLocation":"1266:16:6","nodeType":"VariableDeclaration","scope":1483,"src":"1251:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bac03cd7","id":541,"mutability":"mutable","name":"totalContractBalance","nameLocation":"1370:20:6","nodeType":"VariableDeclaration","scope":1483,"src":"1355:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f98d06f0","id":544,"mutability":"immutable","name":"pyth","nameLocation":"1456:4:6","nodeType":"VariableDeclaration","scope":1483,"src":"1433:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"IPyth","nameLocations":["1433:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":409,"src":"1433:5:6"},"referencedDeclaration":409,"src":"1433:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"visibility":"public"},{"constant":false,"functionSelector":"1547d5c6","id":548,"mutability":"mutable","name":"coinToPriceFeedId","nameLocation":"1568:17:6","nodeType":"VariableDeclaration","scope":1483,"src":"1533:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":547,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"1541:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1533:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1552:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":true,"id":551,"mutability":"constant","name":"PYTH_CONTRACT_SEPOLIA","nameLocation":"1659:21:6","nodeType":"VariableDeclaration","scope":1483,"src":"1642:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307844643234663834443336624639324336354639323330373539354336423939443336623666386334","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDd24f84D36bF92C65F92307595C6B99D36b6f8c4"},"visibility":"internal"},{"constant":true,"id":554,"mutability":"constant","name":"PRICE_STALENESS_THRESHOLD","nameLocation":"1778:25:6","nodeType":"VariableDeclaration","scope":1483,"src":"1761:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"internal"},{"anonymous":false,"eventSelector":"476f7bdb10d30e2de6d06e5d144c76d3963482c10f097a5048c401c84d1a1025","id":560,"name":"MetricSubmitted","nameLocation":"1866:15:6","nodeType":"EventDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"1898:8:6","nodeType":"VariableDeclaration","scope":560,"src":"1882:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1924:9:6","nodeType":"VariableDeclaration","scope":560,"src":"1908:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1881:53:6"},"src":"1860:75:6"},{"anonymous":false,"eventSelector":"245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef","id":568,"name":"Staked","nameLocation":"1946:6:6","nodeType":"EventDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"1969:8:6","nodeType":"VariableDeclaration","scope":568,"src":"1953:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":564,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1995:6:6","nodeType":"VariableDeclaration","scope":568,"src":"1979:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2010:4:6","nodeType":"VariableDeclaration","scope":568,"src":"2003:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":565,"name":"string","nodeType":"ElementaryTypeName","src":"2003:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:63:6"},"src":"1940:76:6"},{"anonymous":false,"eventSelector":"579e7f72f41084c4072560a3d26ffa8c9361debca741683ee5f7f2cf9a461a53","id":574,"name":"MetricResolved","nameLocation":"2027:14:6","nodeType":"EventDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"2058:8:6","nodeType":"VariableDeclaration","scope":574,"src":"2042:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"indexed":false,"mutability":"mutable","name":"winningSide","nameLocation":"2075:11:6","nodeType":"VariableDeclaration","scope":574,"src":"2068:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"2068:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2041:46:6"},"src":"2021:67:6"},{"anonymous":false,"eventSelector":"e34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6","id":580,"name":"RewardDistributed","nameLocation":"2099:17:6","nodeType":"EventDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2133:6:6","nodeType":"VariableDeclaration","scope":580,"src":"2117:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"2117:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2149:6:6","nodeType":"VariableDeclaration","scope":580,"src":"2141:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2116:40:6"},"src":"2093:64:6"},{"anonymous":false,"eventSelector":"c3869fc4914caa4e69064c93dc69ce5b5b73da5a26717b551e7b6b23f2db9b1b","id":584,"name":"StakeAmountUpdated","nameLocation":"2168:18:6","nodeType":"EventDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"2195:9:6","nodeType":"VariableDeclaration","scope":584,"src":"2187:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2186:19:6"},"src":"2162:44:6"},{"errorSelector":"7313c09d","id":586,"name":"MetricNotFound","nameLocation":"2249:14:6","nodeType":"ErrorDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"2263:2:6"},"src":"2243:23:6"},{"errorSelector":"76d3a56d","id":588,"name":"StakingPeriodOver","nameLocation":"2277:17:6","nodeType":"ErrorDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2294:2:6"},"src":"2271:26:6"},{"errorSelector":"5a5b0c1e","id":590,"name":"MetricAlreadyResolved","nameLocation":"2308:21:6","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"2329:2:6"},"src":"2302:30:6"},{"errorSelector":"cd1c8867","id":592,"name":"InsufficientPayment","nameLocation":"2343:19:6","nodeType":"ErrorDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"2362:2:6"},"src":"2337:28:6"},{"errorSelector":"90b8ec18","id":594,"name":"TransferFailed","nameLocation":"2376:14:6","nodeType":"ErrorDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"2390:2:6"},"src":"2370:23:6"},{"errorSelector":"e5239090","id":596,"name":"InvalidParameters","nameLocation":"2404:17:6","nodeType":"ErrorDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"2421:2:6"},"src":"2398:26:6"},{"errorSelector":"00bfc921","id":598,"name":"InvalidPrice","nameLocation":"2435:12:6","nodeType":"ErrorDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"2447:2:6"},"src":"2429:21:6"},{"errorSelector":"b8250b64","id":600,"name":"PriceTooStale","nameLocation":"2461:13:6","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"2474:2:6"},"src":"2455:22:6"},{"errorSelector":"33121279","id":602,"name":"UnsupportedCoin","nameLocation":"2488:15:6","nodeType":"ErrorDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"2503:2:6"},"src":"2482:24:6"},{"errorSelector":"7d7f926b","id":604,"name":"InsufficientUpdateFee","nameLocation":"2517:21:6","nodeType":"ErrorDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"2538:2:6"},"src":"2511:30:6"},{"body":{"id":627,"nodeType":"Block","src":"2642:124:6","statements":[{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":613,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2652:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2667:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2652:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ExpressionStatement","src":"2652:16:6"},{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":617,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2678:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":618,"name":"_fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2697:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2678:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"2678:36:6"},{"expression":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":621,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2724:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":623,"name":"PYTH_CONTRACT_SEPOLIA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"2737:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":622,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2731:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$409_$","typeString":"type(contract IPyth)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2731:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"src":"2724:35:6","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":626,"nodeType":"ExpressionStatement","src":"2724:35:6"}]},"id":628,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":609,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2630:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2634:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2630:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":611,"kind":"baseConstructorSpecifier","modifierName":{"id":608,"name":"Ownable","nameLocations":["2622:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2622:7:6"},"nodeType":"ModifierInvocation","src":"2622:19:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"_fixedStakeAmount","nameLocation":"2603:17:6","nodeType":"VariableDeclaration","scope":628,"src":"2595:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2594:27:6"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2642:0:6"},"scope":1483,"src":"2583:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":645,"nodeType":"Block","src":"2846:122:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"2860:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2860:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"2877:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":636,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2889:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2877:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2860:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":643,"nodeType":"IfStatement","src":"2856:95:6","trueBody":{"id":642,"nodeType":"Block","src":"2903:48:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":639,"name":"MetricNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2924:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"RevertStatement","src":"2917:23:6"}]}},{"id":644,"nodeType":"PlaceholderStatement","src":"2960:1:6"}]},"id":646,"name":"metricExists","nameLocation":"2815:12:6","nodeType":"ModifierDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"metricID","nameLocation":"2836:8:6","nodeType":"VariableDeclaration","scope":646,"src":"2828:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2827:18:6"},"src":"2806:162:6","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"3025:188:6","statements":[{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"metric","nameLocation":"3050:6:6","nodeType":"VariableDeclaration","scope":671,"src":"3035:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":651,"nodeType":"UserDefinedTypeName","pathNode":{"id":650,"name":"Metric","nameLocations":["3035:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"3035:6:6"},"referencedDeclaration":530,"src":"3035:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":656,"initialValue":{"baseExpression":{"id":653,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3059:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":655,"indexExpression":{"id":654,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3067:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3059:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3035:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":657,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3090:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"3090:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":659,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"3109:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3116:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"3109:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":661,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"3128:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3135:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"3128:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3109:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3090:53:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":669,"nodeType":"IfStatement","src":"3086:110:6","trueBody":{"id":668,"nodeType":"Block","src":"3145:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"StakingPeriodOver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3166:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3166:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"RevertStatement","src":"3159:26:6"}]}},{"id":670,"nodeType":"PlaceholderStatement","src":"3205:1:6"}]},"id":672,"name":"stakingPeriodActive","nameLocation":"2987:19:6","nodeType":"ModifierDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"metricID","nameLocation":"3015:8:6","nodeType":"VariableDeclaration","scope":672,"src":"3007:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3007:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3006:18:6"},"src":"2978:235:6","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"3262:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":676,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3276:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":678,"indexExpression":{"id":677,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"3284:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3276:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3294:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":519,"src":"3276:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":680,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3304:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$506_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3317:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":504,"src":"3304:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"3276:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"nodeType":"IfStatement","src":"3272:109:6","trueBody":{"id":686,"nodeType":"Block","src":"3326:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":683,"name":"MetricAlreadyResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3347:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"RevertStatement","src":"3340:30:6"}]}},{"id":688,"nodeType":"PlaceholderStatement","src":"3390:1:6"}]},"id":690,"name":"onlyPending","nameLocation":"3232:11:6","nodeType":"ModifierDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"metricID","nameLocation":"3252:8:6","nodeType":"VariableDeclaration","scope":690,"src":"3244:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3244:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3243:18:6"},"src":"3223:175:6","virtual":false,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"3893:745:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"expectedLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3907:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130303030","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3929:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3907:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3938:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3938:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3907:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"IfStatement","src":"3903:101:6","trueBody":{"id":714,"nodeType":"Block","src":"3953:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":711,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"3974:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"RevertStatement","src":"3967:26:6"}]}},{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"metricID","nameLocation":"4030:8:6","nodeType":"VariableDeclaration","scope":780,"src":"4022:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4022:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":719,"initialValue":{"id":718,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4041:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4022:31:6"},{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"newMetric","nameLocation":"4116:9:6","nodeType":"VariableDeclaration","scope":780,"src":"4101:24:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"Metric","nameLocations":["4101:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"4101:6:6"},"referencedDeclaration":530,"src":"4101:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":726,"initialValue":{"baseExpression":{"id":723,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4128:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":725,"indexExpression":{"id":724,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4136:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4128:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4101:44:6"},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":727,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4155:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4165:2:6","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":508,"src":"4155:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":730,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4170:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4155:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"4155:23:6"},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":733,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4188:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4198:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":512,"src":"4188:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":736,"name":"expectedLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4220:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4188:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":738,"nodeType":"ExpressionStatement","src":"4188:51:6"},{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":739,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4249:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4259:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"4249:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":742,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4270:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4249:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"4249:29:6"},{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":745,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4288:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4298:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"4288:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":748,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4310:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4316:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"4310:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4288:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"nodeType":"ExpressionStatement","src":"4288:37:6"},{"expression":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":752,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4335:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4345:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":519,"src":"4335:16:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":755,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4354:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$506_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4367:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":504,"src":"4354:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"4335:39:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"id":758,"nodeType":"ExpressionStatement","src":"4335:39:6"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":759,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4384:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4394:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":521,"src":"4384:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"bountyCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4413:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4384:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"4384:45:6"},{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4481:14:6","subExpression":{"id":765,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4481:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"nodeType":"ExpressionStatement","src":"4481:14:6"},{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":768,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4505:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":769,"name":"bountyCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4529:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4505:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ExpressionStatement","src":"4505:40:6"},{"eventCall":{"arguments":[{"id":773,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4585:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4595:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4599:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4595:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":772,"name":"MetricSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4569:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"EmitStatement","src":"4564:42:6"},{"expression":{"id":778,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4623:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":703,"id":779,"nodeType":"Return","src":"4616:15:6"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"3443:272:6","text":" @dev Submit a new metric for prediction\n @param expectedLossPercent Expected loss percentage in basis points (e.g., 1000 = 10%)\n @param duration Duration of staking period in seconds\n @return metricID The ID of the newly created metric"},"functionSelector":"312c9e87","id":781,"implemented":true,"kind":"function","modifiers":[{"id":700,"kind":"modifierInvocation","modifierName":{"id":699,"name":"nonReentrant","nameLocations":["3862:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"3862:12:6"},"nodeType":"ModifierInvocation","src":"3862:12:6"}],"name":"submitMetric","nameLocation":"3729:12:6","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"3759:19:6","nodeType":"VariableDeclaration","scope":781,"src":"3751:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"duration","nameLocation":"3796:8:6","nodeType":"VariableDeclaration","scope":781,"src":"3788:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3788:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"bountyCollateral","nameLocation":"3822:16:6","nodeType":"VariableDeclaration","scope":781,"src":"3814:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3741:103:6"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":781,"src":"3884:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3883:9:6"},"scope":1483,"src":"3720:918:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":825,"nodeType":"Block","src":"4959:247:6","statements":[{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"metric","nameLocation":"4993:6:6","nodeType":"VariableDeclaration","scope":825,"src":"4978:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":799,"nodeType":"UserDefinedTypeName","pathNode":{"id":798,"name":"Metric","nameLocations":["4978:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"4978:6:6"},"referencedDeclaration":530,"src":"4978:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":804,"initialValue":{"baseExpression":{"id":801,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5002:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":803,"indexExpression":{"id":802,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5010:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5002:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4978:41:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5083:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5087:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5083:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":813,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5118:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5124:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"5118:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5055:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$503_storage_ptr_$","typeString":"type(struct MetricChallengeDAO.Stake storage pointer)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5075:6:6","5107:9:6"],"names":["staker","timestamp"],"nodeType":"FunctionCall","src":"5055:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Stake_$503_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}],"expression":{"expression":{"id":805,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"5029:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5036:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":525,"src":"5029:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5050:4:6","memberName":"push","nodeType":"MemberAccess","src":"5029:25:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr_$_t_struct$_Stake_$503_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr_$","typeString":"function (struct MetricChallengeDAO.Stake storage ref[] storage pointer,struct MetricChallengeDAO.Stake storage ref)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:116:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"5029:116:6"},{"eventCall":{"arguments":[{"id":819,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5167:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5177:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5181:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5177:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"496e4661766f72","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""},"value":"InFavor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""}],"id":818,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5160:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"EmitStatement","src":"5155:44:6"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"4648:119:6","text":" @dev Stake in favor of a metric's prediction\n @param metricID The ID of the metric to stake on"},"functionSelector":"6ec1b041","id":826,"implemented":true,"kind":"function","modifiers":[{"id":787,"kind":"modifierInvocation","modifierName":{"id":786,"name":"nonReentrant","nameLocations":["4839:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4839:12:6"},"nodeType":"ModifierInvocation","src":"4839:12:6"},{"arguments":[{"id":789,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4874:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":790,"kind":"modifierInvocation","modifierName":{"id":788,"name":"metricExists","nameLocations":["4861:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"4861:12:6"},"nodeType":"ModifierInvocation","src":"4861:22:6"},{"arguments":[{"id":792,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4913:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":793,"kind":"modifierInvocation","modifierName":{"id":791,"name":"stakingPeriodActive","nameLocations":["4893:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4893:19:6"},"nodeType":"ModifierInvocation","src":"4893:29:6"},{"arguments":[{"id":795,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4944:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":796,"kind":"modifierInvocation","modifierName":{"id":794,"name":"onlyPending","nameLocations":["4932:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":690,"src":"4932:11:6"},"nodeType":"ModifierInvocation","src":"4932:21:6"}],"name":"stakeInFavor","nameLocation":"4781:12:6","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"metricID","nameLocation":"4802:8:6","nodeType":"VariableDeclaration","scope":826,"src":"4794:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4794:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4793:18:6"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"4959:0:6"},"scope":1483,"src":"4772:434:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":870,"nodeType":"Block","src":"5523:255:6","statements":[{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"metric","nameLocation":"5557:6:6","nodeType":"VariableDeclaration","scope":870,"src":"5542:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":844,"nodeType":"UserDefinedTypeName","pathNode":{"id":843,"name":"Metric","nameLocations":["5542:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"5542:6:6"},"referencedDeclaration":530,"src":"5542:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":849,"initialValue":{"baseExpression":{"id":846,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5566:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":848,"indexExpression":{"id":847,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5574:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5566:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5542:41:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5647:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5651:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5647:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":858,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5682:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5688:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"5682:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5619:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$503_storage_ptr_$","typeString":"type(struct MetricChallengeDAO.Stake storage pointer)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5639:6:6","5671:9:6"],"names":["staker","timestamp"],"nodeType":"FunctionCall","src":"5619:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Stake_$503_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}],"expression":{"expression":{"id":850,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"5593:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5600:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":529,"src":"5593:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5614:4:6","memberName":"push","nodeType":"MemberAccess","src":"5593:25:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr_$_t_struct$_Stake_$503_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr_$","typeString":"function (struct MetricChallengeDAO.Stake storage ref[] storage pointer,struct MetricChallengeDAO.Stake storage ref)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5593:116:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"5593:116:6"},{"eventCall":{"arguments":[{"id":864,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5739:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5749:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5753:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5749:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"416761696e7374","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5761:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""},"value":"Against"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""}],"id":863,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5732:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5732:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"5727:44:6"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"5216:115:6","text":" @dev Stake against a metric's prediction\n @param metricID The ID of the metric to stake on"},"functionSelector":"7776eab6","id":871,"implemented":true,"kind":"function","modifiers":[{"id":832,"kind":"modifierInvocation","modifierName":{"id":831,"name":"nonReentrant","nameLocations":["5403:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"5403:12:6"},"nodeType":"ModifierInvocation","src":"5403:12:6"},{"arguments":[{"id":834,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5438:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":835,"kind":"modifierInvocation","modifierName":{"id":833,"name":"metricExists","nameLocations":["5425:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"5425:12:6"},"nodeType":"ModifierInvocation","src":"5425:22:6"},{"arguments":[{"id":837,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5477:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":838,"kind":"modifierInvocation","modifierName":{"id":836,"name":"stakingPeriodActive","nameLocations":["5457:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"5457:19:6"},"nodeType":"ModifierInvocation","src":"5457:29:6"},{"arguments":[{"id":840,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5508:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":841,"kind":"modifierInvocation","modifierName":{"id":839,"name":"onlyPending","nameLocations":["5496:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":690,"src":"5496:11:6"},"nodeType":"ModifierInvocation","src":"5496:21:6"}],"name":"stakeAgainst","nameLocation":"5345:12:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"metricID","nameLocation":"5366:8:6","nodeType":"VariableDeclaration","scope":871,"src":"5358:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5358:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5357:18:6"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"5523:0:6"},"scope":1483,"src":"5336:442:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1209,"nodeType":"Block","src":"6082:4185:6","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"metric","nameLocation":"6107:6:6","nodeType":"VariableDeclaration","scope":1209,"src":"6092:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":886,"nodeType":"UserDefinedTypeName","pathNode":{"id":885,"name":"Metric","nameLocations":["6092:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"6092:6:6"},"referencedDeclaration":530,"src":"6092:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":891,"initialValue":{"baseExpression":{"id":888,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6116:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":890,"indexExpression":{"id":889,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6124:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6116:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6092:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":892,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6199:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6205:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"6199:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":894,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6217:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6224:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"6217:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":896,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6236:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6243:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"6236:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6217:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6199:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":904,"nodeType":"IfStatement","src":"6195:109:6","trueBody":{"id":903,"nodeType":"Block","src":"6253:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":900,"name":"StakingPeriodOver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6274:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6274:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"RevertStatement","src":"6267:26:6"}]}},{"assignments":[906],"declarations":[{"constant":false,"id":906,"mutability":"mutable","name":"priceFeedId","nameLocation":"6373:11:6","nodeType":"VariableDeclaration","scope":1209,"src":"6365:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6365:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":911,"initialValue":{"baseExpression":{"id":907,"name":"coinToPriceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6387:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":910,"indexExpression":{"expression":{"id":908,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6405:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6412:11:6","memberName":"coinAddress","nodeType":"MemberAccess","referencedDeclaration":510,"src":"6405:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6387:37:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6365:59:6"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"priceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6438:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6461:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6453:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6453:7:6","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6453:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6438:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":922,"nodeType":"IfStatement","src":"6434:80:6","trueBody":{"id":921,"nodeType":"Block","src":"6465:49:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":918,"name":"UnsupportedCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6486:15:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6486:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"RevertStatement","src":"6479:24:6"}]}},{"assignments":[927],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"currentPriceData","nameLocation":"6596:16:6","nodeType":"VariableDeclaration","scope":1209,"src":"6571:41:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":926,"nodeType":"UserDefinedTypeName","pathNode":{"id":925,"name":"PythStructs.Price","nameLocations":["6571:11:6","6583:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"6571:17:6"},"referencedDeclaration":450,"src":"6571:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":932,"initialValue":{"arguments":[{"id":930,"name":"priceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6635:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":928,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6615:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6620:14:6","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":262,"src":"6615:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$450_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6615:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"6571:76:6"},{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":933,"name":"currentPriceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6661:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:5:6","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":443,"src":"6661:22:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6687:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6661:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"6657:79:6","trueBody":{"id":940,"nodeType":"Block","src":"6690:46:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"InvalidPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6711:12:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6711:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"6704:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":942,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6749:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6755:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"6749:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":944,"name":"currentPriceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6767:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6784:11:6","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":449,"src":"6767:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6749:46:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":947,"name":"PRICE_STALENESS_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6798:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6749:74:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"nodeType":"IfStatement","src":"6745:127:6","trueBody":{"id":952,"nodeType":"Block","src":"6825:47:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":949,"name":"PriceTooStale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6846:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6846:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"RevertStatement","src":"6839:22:6"}]}},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"baselinePrice","nameLocation":"7427:13:6","nodeType":"VariableDeclaration","scope":1209,"src":"7421:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":954,"name":"int64","nodeType":"ElementaryTypeName","src":"7421:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"id":958,"initialValue":{"expression":{"id":956,"name":"currentPriceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7443:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7460:5:6","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":443,"src":"7443:22:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"VariableDeclarationStatement","src":"7421:44:6"},{"assignments":[960],"declarations":[{"constant":false,"id":960,"mutability":"mutable","name":"currentPrice","nameLocation":"7525:12:6","nodeType":"VariableDeclaration","scope":1209,"src":"7519:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":959,"name":"int64","nodeType":"ElementaryTypeName","src":"7519:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"id":963,"initialValue":{"expression":{"id":961,"name":"currentPriceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7540:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7557:5:6","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":443,"src":"7540:22:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"VariableDeclarationStatement","src":"7519:43:6"},{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"actualLossPercent","nameLocation":"7712:17:6","nodeType":"VariableDeclaration","scope":1209,"src":"7704:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"7704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":966,"nodeType":"VariableDeclarationStatement","src":"7704:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"7743:12:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":968,"name":"baselinePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"7759:13:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"7743:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1006,"nodeType":"Block","src":"7854:217:6","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"priceDiff","nameLocation":"7876:9:6","nodeType":"VariableDeclaration","scope":1006,"src":"7868:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"7868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"baselinePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"7903:13:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":982,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"7919:12:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"7903:28:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7896:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":979,"name":"uint64","nodeType":"ElementaryTypeName","src":"7896:6:6","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7896:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7888:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"7888:7:6","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7888:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7868:65:6"},{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"baseline","nameLocation":"7955:8:6","nodeType":"VariableDeclaration","scope":1006,"src":"7947:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7947:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":996,"initialValue":{"arguments":[{"arguments":[{"id":993,"name":"baselinePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"7981:13:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7974:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":991,"name":"uint64","nodeType":"ElementaryTypeName","src":"7974:6:6","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7974:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7966:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"7966:7:6","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7966:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7947:49:6"},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":997,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"8010:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"priceDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"8031:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8031:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8030:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1002,"name":"baseline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"8052:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8030:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8010:50:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"8010:50:6"}]},"id":1007,"nodeType":"IfStatement","src":"7739:332:6","trueBody":{"id":974,"nodeType":"Block","src":"7774:74:6","statements":[{"expression":{"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":970,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"7788:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7808:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7788:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":973,"nodeType":"ExpressionStatement","src":"7788:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"8157:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130303030","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8177:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8157:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1016,"nodeType":"IfStatement","src":"8153:81:6","trueBody":{"id":1015,"nodeType":"Block","src":"8184:50:6","statements":[{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1011,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"8198:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130303030","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8218:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8198:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"8198:25:6"}]}},{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"inFavorWins","nameLocation":"8291:11:6","nodeType":"VariableDeclaration","scope":1209,"src":"8286:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1017,"name":"bool","nodeType":"ElementaryTypeName","src":"8286:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1023,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"8305:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1020,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8326:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8333:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":512,"src":"8326:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8305:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8286:66:6"},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"winningStakes","nameLocation":"8378:13:6","nodeType":"VariableDeclaration","scope":1209,"src":"8362:29:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1026,"nodeType":"UserDefinedTypeName","pathNode":{"id":1025,"name":"Stake","nameLocations":["8362:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"8362:5:6"},"referencedDeclaration":503,"src":"8362:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1027,"nodeType":"ArrayTypeName","src":"8362:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"id":1035,"initialValue":{"condition":{"id":1029,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8394:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1032,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8431:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8438:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":529,"src":"8431:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8394:57:6","trueExpression":{"expression":{"id":1030,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8408:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8415:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":525,"src":"8408:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8362:89:6"},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"losingStakes","nameLocation":"8477:12:6","nodeType":"VariableDeclaration","scope":1209,"src":"8461:28:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1038,"nodeType":"UserDefinedTypeName","pathNode":{"id":1037,"name":"Stake","nameLocations":["8461:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"8461:5:6"},"referencedDeclaration":503,"src":"8461:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1039,"nodeType":"ArrayTypeName","src":"8461:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"id":1047,"initialValue":{"condition":{"id":1041,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8492:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1044,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8529:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8536:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":525,"src":"8529:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8492:57:6","trueExpression":{"expression":{"id":1042,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8506:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8513:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":529,"src":"8506:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8461:88:6"},{"assignments":[1049],"declarations":[{"constant":false,"id":1049,"mutability":"mutable","name":"winningSide","nameLocation":"8573:11:6","nodeType":"VariableDeclaration","scope":1209,"src":"8559:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1048,"name":"string","nodeType":"ElementaryTypeName","src":"8559:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1054,"initialValue":{"condition":{"id":1050,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8587:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"416761696e7374","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8613:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""},"value":"Against"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8587:35:6","trueExpression":{"hexValue":"496e4661766f72","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8601:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""},"value":"InFavor"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8559:63:6"},{"assignments":[1056],"declarations":[{"constant":false,"id":1056,"mutability":"mutable","name":"rewardPool","nameLocation":"8682:10:6","nodeType":"VariableDeclaration","scope":1209,"src":"8674:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"8674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1057,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"8695:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8702:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":521,"src":"8695:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"losingStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"8722:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8735:6:6","memberName":"length","nodeType":"MemberAccess","src":"8722:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1061,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"8744:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8722:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8721:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8695:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8674:87:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1066,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"8784:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8798:6:6","memberName":"length","nodeType":"MemberAccess","src":"8784:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8807:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8784:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"8812:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8825:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8812:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8784:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"8780:1329:6","trueBody":{"id":1195,"nodeType":"Block","src":"8828:1281:6","statements":[{"assignments":[1075],"declarations":[{"constant":false,"id":1075,"mutability":"mutable","name":"totalEarlyness","nameLocation":"8921:14:6","nodeType":"VariableDeclaration","scope":1195,"src":"8913:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1077,"initialValue":{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8913:26:6"},{"body":{"id":1110,"nodeType":"Block","src":"9004:212:6","statements":[{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"stakingTime","nameLocation":"9030:11:6","nodeType":"VariableDeclaration","scope":1110,"src":"9022:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1091,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"9044:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1093,"indexExpression":{"id":1092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"9058:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9044:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9061:9:6","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":502,"src":"9044:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1095,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9073:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9080:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"9073:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9044:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9022:67:6"},{"assignments":[1100],"declarations":[{"constant":false,"id":1100,"mutability":"mutable","name":"earlyness","nameLocation":"9115:9:6","nodeType":"VariableDeclaration","scope":1110,"src":"9107:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1105,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1101,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9127:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9134:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"9127:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1103,"name":"stakingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"9145:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9127:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9107:49:6"},{"expression":{"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1106,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9174:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1107,"name":"earlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9192:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9174:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ExpressionStatement","src":"9174:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8973:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1083,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"8977:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:6","memberName":"length","nodeType":"MemberAccess","src":"8977:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8973:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1111,"initializationExpression":{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"i","nameLocation":"8966:1:6","nodeType":"VariableDeclaration","scope":1111,"src":"8958:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"8958:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1081,"initialValue":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8970:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8958:13:6"},"loopExpression":{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8999:3:6","subExpression":{"id":1086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8999:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"8999:3:6"},"nodeType":"ForStatement","src":"8953:263:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9299:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9299:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1194,"nodeType":"IfStatement","src":"9295:804:6","trueBody":{"id":1193,"nodeType":"Block","src":"9319:780:6","statements":[{"body":{"id":1191,"nodeType":"Block","src":"9388:697:6","statements":[{"assignments":[1127],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"stakingTime","nameLocation":"9418:11:6","nodeType":"VariableDeclaration","scope":1191,"src":"9410:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"9410:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1135,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1128,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"9432:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1130,"indexExpression":{"id":1129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9446:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9432:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9449:9:6","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":502,"src":"9432:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1132,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9461:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9468:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"9461:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9432:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9410:67:6"},{"assignments":[1137],"declarations":[{"constant":false,"id":1137,"mutability":"mutable","name":"earlyness","nameLocation":"9507:9:6","nodeType":"VariableDeclaration","scope":1191,"src":"9499:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9499:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1142,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1138,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9519:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9526:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"9519:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1140,"name":"stakingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"9537:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9519:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9499:49:6"},{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"reward","nameLocation":"9578:6:6","nodeType":"VariableDeclaration","scope":1191,"src":"9570:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"9570:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1151,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"earlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"9588:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1146,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"9600:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9588:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9587:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1149,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9614:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9587:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9570:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9675:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9684:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9675:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"9671:396:6","trueBody":{"id":1189,"nodeType":"Block","src":"9687:380:6","statements":[{"expression":{"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1155,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9713:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1156,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9737:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9713:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ExpressionStatement","src":"9713:30:6"},{"assignments":[1160,null],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"success","nameLocation":"9775:7:6","nodeType":"VariableDeclaration","scope":1189,"src":"9770:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1159,"name":"bool","nodeType":"ElementaryTypeName","src":"9770:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1173,"initialValue":{"arguments":[{"hexValue":"","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9841:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1163,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"9796:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1165,"indexExpression":{"id":1164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9810:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9796:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9813:6:6","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":500,"src":"9796:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9788:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"9788:8:6","stateMutability":"payable","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9788:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9821:4:6","memberName":"call","nodeType":"MemberAccess","src":"9788:37:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1169,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9833:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9788:52:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9788:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9769:75:6"},{"condition":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9874:8:6","subExpression":{"id":1174,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"9875:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"9870:94:6","trueBody":{"id":1179,"nodeType":"Block","src":"9884:80:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"9921:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9921:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"RevertStatement","src":"9914:23:6"}]}},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1182,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"10012:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1184,"indexExpression":{"id":1183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"10026:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10012:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10029:6:6","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":500,"src":"10012:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"10037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9994:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9994:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"EmitStatement","src":"9989:55:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9357:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1120,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"9361:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9375:6:6","memberName":"length","nodeType":"MemberAccess","src":"9361:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9357:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1192,"initializationExpression":{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"i","nameLocation":"9350:1:6","nodeType":"VariableDeclaration","scope":1192,"src":"9342:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"9342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1118,"initialValue":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9354:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9342:13:6"},"loopExpression":{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9383:3:6","subExpression":{"id":1123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9383:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ExpressionStatement","src":"9383:3:6"},"nodeType":"ForStatement","src":"9337:748:6"}]}}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1197,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"10162:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10169:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":519,"src":"10162:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1200,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"10178:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$506_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10191:8:6","memberName":"Resolved","nodeType":"MemberAccess","referencedDeclaration":505,"src":"10178:21:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"10162:37:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"id":1203,"nodeType":"ExpressionStatement","src":"10162:37:6"},{"eventCall":{"arguments":[{"id":1205,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"10238:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1206,"name":"winningSide","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"10248:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1204,"name":"MetricResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10223:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1208,"nodeType":"EmitStatement","src":"10218:42:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"5788:140:6","text":" @dev Resolve a metric using Pyth price data and distribute rewards\n @param metricID The ID of the metric to resolve"},"functionSelector":"b8141810","id":1210,"implemented":true,"kind":"function","modifiers":[{"id":877,"kind":"modifierInvocation","modifierName":{"id":876,"name":"nonReentrant","nameLocations":["6001:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"6001:12:6"},"nodeType":"ModifierInvocation","src":"6001:12:6"},{"arguments":[{"id":879,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6036:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":880,"kind":"modifierInvocation","modifierName":{"id":878,"name":"metricExists","nameLocations":["6023:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"6023:12:6"},"nodeType":"ModifierInvocation","src":"6023:22:6"},{"arguments":[{"id":882,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6067:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":883,"kind":"modifierInvocation","modifierName":{"id":881,"name":"onlyPending","nameLocations":["6055:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":690,"src":"6055:11:6"},"nodeType":"ModifierInvocation","src":"6055:21:6"}],"name":"resolveMetric","nameLocation":"5942:13:6","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"metricID","nameLocation":"5964:8:6","nodeType":"VariableDeclaration","scope":1210,"src":"5956:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"5956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5955:18:6"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"6082:0:6"},"scope":1483,"src":"5933:4334:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1263,"nodeType":"Block","src":"11266:353:6","statements":[{"assignments":[1238],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"metric","nameLocation":"11291:6:6","nodeType":"VariableDeclaration","scope":1263,"src":"11276:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":1237,"nodeType":"UserDefinedTypeName","pathNode":{"id":1236,"name":"Metric","nameLocations":["11276:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"11276:6:6"},"referencedDeclaration":530,"src":"11276:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":1242,"initialValue":{"baseExpression":{"id":1239,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"11300:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1241,"indexExpression":{"id":1240,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"11308:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11300:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11276:41:6"},{"expression":{"components":[{"expression":{"id":1243,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11348:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11355:2:6","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":508,"src":"11348:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1245,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11371:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11378:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":512,"src":"11371:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1247,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11411:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11418:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"11411:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1249,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11440:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11447:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"11440:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1251,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11470:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11477:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":519,"src":"11470:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},{"expression":{"id":1253,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11497:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11504:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":521,"src":"11497:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1255,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11534:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11541:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":525,"src":"11534:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11555:6:6","memberName":"length","nodeType":"MemberAccess","src":"11534:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1258,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"11575:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11582:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":529,"src":"11575:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11596:6:6","memberName":"length","nodeType":"MemberAccess","src":"11575:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11334:278:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_MetricStatus_$506_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,enum MetricChallengeDAO.MetricStatus,uint256,uint256,uint256)"}},"functionReturnParameters":1235,"id":1262,"nodeType":"Return","src":"11327:285:6"}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"10312:538:6","text":" @dev Get metric details\n @param metricID The ID of the metric\n @return id The metric ID\n @return expectedLossPercent Expected loss percentage in basis points\n @return duration Duration of staking period in seconds\n @return startTime Start timestamp of the metric\n @return status Current status of the metric\n @return bountyCollateral Bounty collateral amount\n @return stakesInFavorCount Number of stakes in favor\n @return stakesAgainstCount Number of stakes against"},"functionSelector":"582bd8f1","id":1264,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1216,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"10946:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1217,"kind":"modifierInvocation","modifierName":{"id":1215,"name":"metricExists","nameLocations":["10933:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"10933:12:6"},"nodeType":"ModifierInvocation","src":"10933:22:6"}],"name":"getMetric","nameLocation":"10864:9:6","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"metricID","nameLocation":"10882:8:6","nodeType":"VariableDeclaration","scope":1264,"src":"10874:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"10874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10873:18:6"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"id","nameLocation":"10995:2:6","nodeType":"VariableDeclaration","scope":1264,"src":"10987:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"10987:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"11019:19:6","nodeType":"VariableDeclaration","scope":1264,"src":"11011:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"duration","nameLocation":"11060:8:6","nodeType":"VariableDeclaration","scope":1264,"src":"11052:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"11052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"startTime","nameLocation":"11090:9:6","nodeType":"VariableDeclaration","scope":1264,"src":"11082:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"status","nameLocation":"11126:6:6","nodeType":"VariableDeclaration","scope":1264,"src":"11113:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"},"typeName":{"id":1227,"nodeType":"UserDefinedTypeName","pathNode":{"id":1226,"name":"MetricStatus","nameLocations":["11113:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":506,"src":"11113:12:6"},"referencedDeclaration":506,"src":"11113:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"bountyCollateral","nameLocation":"11154:16:6","nodeType":"VariableDeclaration","scope":1264,"src":"11146:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11146:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"stakesInFavorCount","nameLocation":"11192:18:6","nodeType":"VariableDeclaration","scope":1264,"src":"11184:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"11184:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"stakesAgainstCount","nameLocation":"11232:18:6","nodeType":"VariableDeclaration","scope":1264,"src":"11224:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10973:287:6"},"scope":1483,"src":"10855:764:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1282,"nodeType":"Block","src":"11920:55:6","statements":[{"expression":{"expression":{"baseExpression":{"id":1277,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"11937:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1279,"indexExpression":{"id":1278,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"11945:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11937:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":1280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11955:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":525,"src":"11937:31:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"functionReturnParameters":1276,"id":1281,"nodeType":"Return","src":"11930:38:6"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"11629:139:6","text":" @dev Get stakes in favor of a metric\n @param metricID The ID of the metric\n @return Array of stakes in favor"},"functionSelector":"04b8ba5b","id":1283,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1270,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"11871:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1271,"kind":"modifierInvocation","modifierName":{"id":1269,"name":"metricExists","nameLocations":["11858:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"11858:12:6"},"nodeType":"ModifierInvocation","src":"11858:22:6"}],"name":"getStakesInFavor","nameLocation":"11782:16:6","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"metricID","nameLocation":"11807:8:6","nodeType":"VariableDeclaration","scope":1283,"src":"11799:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"11799:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11798:18:6"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1283,"src":"11899:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"Stake","nameLocations":["11899:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"11899:5:6"},"referencedDeclaration":503,"src":"11899:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1274,"nodeType":"ArrayTypeName","src":"11899:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"src":"11898:16:6"},"scope":1483,"src":"11773:202:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1301,"nodeType":"Block","src":"12271:55:6","statements":[{"expression":{"expression":{"baseExpression":{"id":1296,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"12288:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1298,"indexExpression":{"id":1297,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"12296:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12288:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":1299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12306:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":529,"src":"12288:31:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"functionReturnParameters":1295,"id":1300,"nodeType":"Return","src":"12281:38:6"}]},"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"11985:134:6","text":" @dev Get stakes against a metric\n @param metricID The ID of the metric\n @return Array of stakes against"},"functionSelector":"dc6e4495","id":1302,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1289,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"12222:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1290,"kind":"modifierInvocation","modifierName":{"id":1288,"name":"metricExists","nameLocations":["12209:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"12209:12:6"},"nodeType":"ModifierInvocation","src":"12209:22:6"}],"name":"getStakesAgainst","nameLocation":"12133:16:6","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"metricID","nameLocation":"12158:8:6","nodeType":"VariableDeclaration","scope":1302,"src":"12150:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"12150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12149:18:6"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"12250:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1292,"nodeType":"UserDefinedTypeName","pathNode":{"id":1291,"name":"Stake","nameLocations":["12250:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"12250:5:6"},"referencedDeclaration":503,"src":"12250:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$503_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1293,"nodeType":"ArrayTypeName","src":"12250:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$503_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"src":"12249:16:6"},"scope":1483,"src":"12124:202:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1335,"nodeType":"Block","src":"12639:184:6","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"metric","nameLocation":"12664:6:6","nodeType":"VariableDeclaration","scope":1335,"src":"12649:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"Metric","nameLocations":["12649:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"12649:6:6"},"referencedDeclaration":530,"src":"12649:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":1319,"initialValue":{"baseExpression":{"id":1316,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"12673:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$530_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1318,"indexExpression":{"id":1317,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"12681:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12673:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12649:41:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1320,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12707:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12713:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"12707:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1322,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12725:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12732:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":516,"src":"12725:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1324,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12744:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12751:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":514,"src":"12744:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12725:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12707:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1328,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12779:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$530_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12786:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":519,"src":"12779:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1330,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"12796:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$506_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12809:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":504,"src":"12796:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$506","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"12779:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12707:109:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1312,"id":1334,"nodeType":"Return","src":"12700:116:6"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"12336:162:6","text":" @dev Check if staking period is active for a metric\n @param metricID The ID of the metric\n @return True if staking period is active"},"functionSelector":"09eea131","id":1336,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1308,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"12600:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1309,"kind":"modifierInvocation","modifierName":{"id":1307,"name":"metricExists","nameLocations":["12587:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":646,"src":"12587:12:6"},"nodeType":"ModifierInvocation","src":"12587:22:6"}],"name":"isStakingActive","nameLocation":"12512:15:6","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"metricID","nameLocation":"12536:8:6","nodeType":"VariableDeclaration","scope":1336,"src":"12528:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12527:18:6"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"12628:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"12628:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12627:6:6"},"scope":1483,"src":"12503:320:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1370,"nodeType":"Block","src":"13151:181:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"coinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"13165:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13188:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13180:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"13180:7:6","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13180:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13165:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"priceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"13194:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13209:7:6","typeDescriptions":{}}},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13194:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13165:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1363,"nodeType":"IfStatement","src":"13161:111:6","trueBody":{"id":1362,"nodeType":"Block","src":"13221:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1359,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"13242:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13242:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"RevertStatement","src":"13235:26:6"}]}},{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1364,"name":"coinToPriceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"13281:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":1366,"indexExpression":{"id":1365,"name":"coinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"13299:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13281:30:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1367,"name":"priceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"13314:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13281:44:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1369,"nodeType":"ExpressionStatement","src":"13281:44:6"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"12869:190:6","text":" @dev Add or update a supported coin with its Pyth price feed ID\n @param coinAddress Token contract address\n @param priceFeedId Pyth price feed ID for this coin"},"functionSelector":"7fe09c7d","id":1371,"implemented":true,"kind":"function","modifiers":[{"id":1344,"kind":"modifierInvocation","modifierName":{"id":1343,"name":"onlyOwner","nameLocations":["13141:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13141:9:6"},"nodeType":"ModifierInvocation","src":"13141:9:6"}],"name":"setSupportedCoin","nameLocation":"13073:16:6","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"coinAddress","nameLocation":"13098:11:6","nodeType":"VariableDeclaration","scope":1371,"src":"13090:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"13090:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"priceFeedId","nameLocation":"13119:11:6","nodeType":"VariableDeclaration","scope":1371,"src":"13111:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13111:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13089:42:6"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"13151:0:6"},"scope":1483,"src":"13064:268:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1384,"nodeType":"Block","src":"13518:54:6","statements":[{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13528:37:6","subExpression":{"baseExpression":{"id":1379,"name":"coinToPriceFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"13535:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":1381,"indexExpression":{"id":1380,"name":"coinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"13553:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13535:30:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"13528:37:6"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"13338:106:6","text":" @dev Remove a supported coin\n @param coinAddress Token contract address to remove"},"functionSelector":"13f2721b","id":1385,"implemented":true,"kind":"function","modifiers":[{"id":1377,"kind":"modifierInvocation","modifierName":{"id":1376,"name":"onlyOwner","nameLocations":["13508:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13508:9:6"},"nodeType":"ModifierInvocation","src":"13508:9:6"}],"name":"removeSupportedCoin","nameLocation":"13458:19:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"coinAddress","nameLocation":"13486:11:6","nodeType":"VariableDeclaration","scope":1385,"src":"13478:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13477:21:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"13518:0:6"},"scope":1483,"src":"13449:123:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1409,"nodeType":"Block","src":"13767:169:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"13781:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13781:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1400,"nodeType":"IfStatement","src":"13777:71:6","trueBody":{"id":1399,"nodeType":"Block","src":"13797:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1396,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"13818:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13818:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"RevertStatement","src":"13811:26:6"}]}},{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"13857:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1402,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"13876:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13857:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ExpressionStatement","src":"13857:28:6"},{"eventCall":{"arguments":[{"id":1406,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"13919:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1405,"name":"StakeAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"13900:18:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13900:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"EmitStatement","src":"13895:34:6"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"13578:114:6","text":" @dev Update the fixed stake amount (only owner)\n @param newAmount New stake amount in wei"},"functionSelector":"7cabd293","id":1410,"implemented":true,"kind":"function","modifiers":[{"id":1391,"kind":"modifierInvocation","modifierName":{"id":1390,"name":"onlyOwner","nameLocations":["13757:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13757:9:6"},"nodeType":"ModifierInvocation","src":"13757:9:6"}],"name":"updateFixedStakeAmount","nameLocation":"13706:22:6","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"newAmount","nameLocation":"13737:9:6","nodeType":"VariableDeclaration","scope":1410,"src":"13729:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"13729:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13728:19:6"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"13767:0:6"},"scope":1483,"src":"13697:239:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1450,"nodeType":"Block","src":"14124:254:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"14138:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1421,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14155:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1483","typeString":"contract MetricChallengeDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1483","typeString":"contract MetricChallengeDAO"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14147:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"14147:7:6","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14147:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14161:7:6","memberName":"balance","nodeType":"MemberAccess","src":"14147:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14138:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"IfStatement","src":"14134:89:6","trueBody":{"id":1428,"nodeType":"Block","src":"14170:53:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1425,"name":"InsufficientPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"14191:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14191:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"RevertStatement","src":"14184:28:6"}]}},{"assignments":[1431,null],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"success","nameLocation":"14247:7:6","nodeType":"VariableDeclaration","scope":1450,"src":"14242:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1430,"name":"bool","nodeType":"ElementaryTypeName","src":"14242:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1442,"initialValue":{"arguments":[{"hexValue":"","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14297:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14268:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14268:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14260:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"14260:8:6","stateMutability":"payable","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14260:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14277:4:6","memberName":"call","nodeType":"MemberAccess","src":"14260:21:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"14289:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"14260:36:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14260:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14241:59:6"},{"condition":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14314:8:6","subExpression":{"id":1443,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"14315:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"nodeType":"IfStatement","src":"14310:62:6","trueBody":{"id":1448,"nodeType":"Block","src":"14324:48:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1445,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14345:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14345:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"RevertStatement","src":"14338:23:6"}]}}]},"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"13946:111:6","text":" @dev Emergency withdraw function (only owner)\n @param amount Amount to withdraw in wei"},"functionSelector":"5312ea8e","id":1451,"implemented":true,"kind":"function","modifiers":[{"id":1416,"kind":"modifierInvocation","modifierName":{"id":1415,"name":"onlyOwner","nameLocations":["14114:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14114:9:6"},"nodeType":"ModifierInvocation","src":"14114:9:6"}],"name":"emergencyWithdraw","nameLocation":"14071:17:6","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"amount","nameLocation":"14097:6:6","nodeType":"VariableDeclaration","scope":1451,"src":"14089:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"14089:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14088:16:6"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"14124:0:6"},"scope":1483,"src":"14062:316:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1463,"nodeType":"Block","src":"14538:45:6","statements":[{"expression":{"expression":{"arguments":[{"id":1459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14563:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1483","typeString":"contract MetricChallengeDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1483","typeString":"contract MetricChallengeDAO"}],"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14555:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"14555:7:6","typeDescriptions":{}}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14555:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14569:7:6","memberName":"balance","nodeType":"MemberAccess","src":"14555:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1462,"nodeType":"Return","src":"14548:28:6"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"14388:83:6","text":" @dev Get contract balance\n @return Contract balance in wei"},"functionSelector":"6f9fb98a","id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"14485:18:6","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"14503:2:6"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"14529:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"14529:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14528:9:6"},"scope":1483,"src":"14476:107:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1472,"nodeType":"Block","src":"14659:50:6","statements":[{"expression":{"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"14669:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14693:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14697:5:6","memberName":"value","nodeType":"MemberAccess","src":"14693:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14669:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ExpressionStatement","src":"14669:33:6"}]},"id":1473,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"14639:2:6"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[],"src":"14659:0:6"},"scope":1483,"src":"14632:77:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1481,"nodeType":"Block","src":"14747:50:6","statements":[{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"14757:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14781:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14785:5:6","memberName":"value","nodeType":"MemberAccess","src":"14781:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14757:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1480,"nodeType":"ExpressionStatement","src":"14757:33:6"}]},"id":1482,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"14727:2:6"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[],"src":"14747:0:6"},"scope":1483,"src":"14719:78:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1484,"src":"497:14302:6","usedErrors":[13,18,191,586,588,590,592,594,596,598,600,602,604],"usedEvents":[24,560,568,574,580,584]}],"src":"32:14768:6"},"id":6}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getTwapUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minAllowedPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxAllowedPublishTime","type":"uint64"},{"internalType":"bool","name":"checkUniqueness","type":"bool"},{"internalType":"bool","name":"checkUpdateDataIsMinimal","type":"bool"},{"internalType":"bool","name":"storeUpdatesIfFresh","type":"bool"}],"name":"parsePriceFeedUpdatesWithConfig","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"},{"internalType":"uint64[]","name":"slots","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"}],"name":"parseTwapPriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"twap","type":"tuple"},{"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"internalType":"struct PythStructs.TwapPriceFeed[]","name":"twapPriceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getTwapUpdateFee(bytes[])":"5f674e35","getUpdateFee(bytes[])":"d47eed45","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)":"3a229d18","parseTwapPriceFeedUpdates(bytes[],bytes32[])":"eb942158","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"PythStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d1655f82bf7019db0de2b79c4aac6b4a3176eb55bfd29c84ae9a3f11212580b664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH6 0x5F82BF7019DB 0xD 0xE2 0xB7 SWAP13 0x4A 0xAC PUSH12 0x4A3176EB55BFD29C84AE9A3F GT 0x21 0x25 DUP1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"64:2355:5:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220d1655f82bf7019db0de2b79c4aac6b4a3176eb55bfd29c84ae9a3f11212580b664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH6 0x5F82BF7019DB 0xD 0xE2 0xB7 SWAP13 0x4A 0xAC PUSH12 0x4A3176EB55BFD29C84AE9A3F GT 0x21 0x25 DUP1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"64:2355:5:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"contracts/MetricChallengeDAO.sol":{"MetricChallengeDAO":{"abi":[{"inputs":[{"internalType":"uint256","name":"_fixedStakeAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InsufficientUpdateFee","type":"error"},{"inputs":[],"name":"InvalidParameters","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[],"name":"MetricAlreadyResolved","type":"error"},{"inputs":[],"name":"MetricNotFound","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PriceTooStale","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"StakingPeriodOver","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"UnsupportedCoin","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":false,"internalType":"string","name":"winningSide","type":"string"}],"name":"MetricResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"}],"name":"MetricSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"StakeAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"string","name":"side","type":"string"}],"name":"Staked","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"coinToPriceFeedId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fixedStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getMetric","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"enum MetricChallengeDAO.MetricStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"},{"internalType":"uint256","name":"stakesInFavorCount","type":"uint256"},{"internalType":"uint256","name":"stakesAgainstCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getStakesAgainst","outputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct MetricChallengeDAO.Stake[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getStakesInFavor","outputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct MetricChallengeDAO.Stake[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"isStakingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"metrics","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"coinAddress","type":"address"},{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"enum MetricChallengeDAO.MetricStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextMetricID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pyth","outputs":[{"internalType":"contract IPyth","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"coinAddress","type":"address"}],"name":"removeSupportedCoin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"resolveMetric","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"coinAddress","type":"address"},{"internalType":"bytes32","name":"priceFeedId","type":"bytes32"}],"name":"setSupportedCoin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"stakeAgainst","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"stakeInFavor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"}],"name":"submitMetric","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"updateFixedStakeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_199":{"entryPoint":null,"id":199,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_628":{"entryPoint":null,"id":628,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":137,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:408:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:103:7","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:7"},"nodeType":"YulFunctionCall","src":"143:12:7"},"nodeType":"YulExpressionStatement","src":"143:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:7"},"nodeType":"YulFunctionCall","src":"112:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:7"},"nodeType":"YulFunctionCall","src":"108:32:7"},"nodeType":"YulIf","src":"105:52:7"},{"nodeType":"YulAssignment","src":"166:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"182:9:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"176:5:7"},"nodeType":"YulFunctionCall","src":"176:16:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"166:6:7"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:7","type":""}],"src":"14:184:7"},{"body":{"nodeType":"YulBlock","src":"304:102:7","statements":[{"nodeType":"YulAssignment","src":"314:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"326:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"337:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"322:3:7"},"nodeType":"YulFunctionCall","src":"322:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"314:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"356:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"371:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"387:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"392:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"383:3:7"},"nodeType":"YulFunctionCall","src":"383:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"396:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"379:3:7"},"nodeType":"YulFunctionCall","src":"379:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"367:3:7"},"nodeType":"YulFunctionCall","src":"367:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"349:6:7"},"nodeType":"YulFunctionCall","src":"349:51:7"},"nodeType":"YulExpressionStatement","src":"349:51:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"273:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"284:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"295:4:7","type":""}],"src":"203:203:7"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161175d38038061175d83398101604081905261002f916100db565b6001600055338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610089565b50600160035560045573dd24f84d36bf92c65f92307595c6b99d36b6f8c46080526100f4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100ed57600080fd5b5051919050565b6080516116476101166000396000818161049c0152610cf901526116476000f3fe6080604052600436106101395760003560e01c80636f9fb98a116100ab5780638da5cb5b1161006f5780638da5cb5b146103e2578063b814181014610414578063bac03cd714610434578063dc6e44951461044a578063f2fde38b1461046a578063f98d06f01461048a57610158565b80636f9fb98a1461035a578063715018a61461036d5780637776eab6146103825780637cabd293146103a25780637fe09c7d146103c257610158565b80633937066c116100fd5780633937066c146102405780635312ea8e14610256578063582bd8f1146102765780635af01b91146102aa5780636d9aac62146102c05780636ec1b0411461033a57610158565b806304b8ba5b1461016a57806309eea131146101a057806313f2721b146101d05780631547d5c6146101f2578063312c9e871461022d57610158565b3661015857346005600082825461015091906112ab565b925050819055005b346005600082825461015091906112ab565b34801561017657600080fd5b5061018a6101853660046112c4565b6104be565b60405161019791906112dd565b60405180910390f35b3480156101ac57600080fd5b506101c06101bb3660046112c4565b61056e565b6040519015158152602001610197565b3480156101dc57600080fd5b506101f06101eb366004611351565b6105ee565b005b3480156101fe57600080fd5b5061021f61020d366004611351565b60066020526000908152604090205481565b604051908152602001610197565b61021f61023b36600461136c565b610610565b34801561024c57600080fd5b5061021f60035481565b34801561026257600080fd5b506101f06102713660046112c4565b6106ef565b34801561028257600080fd5b506102966102913660046112c4565b6107a1565b6040516101979897969594939291906113d0565b3480156102b657600080fd5b5061021f60045481565b3480156102cc57600080fd5b506103276102db3660046112c4565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460069095015493956001600160a01b03169492939192909160ff9091169087565b604051610197979695949392919061141a565b34801561034657600080fd5b506101f06103553660046112c4565b610827565b34801561036657600080fd5b504761021f565b34801561037957600080fd5b506101f06109aa565b34801561038e57600080fd5b506101f061039d3660046112c4565b6109be565b3480156103ae57600080fd5b506101f06103bd3660046112c4565b610b2d565b3480156103ce57600080fd5b506101f06103dd366004611464565b610b91565b3480156103ee57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610197565b34801561042057600080fd5b506101f061042f3660046112c4565b610be7565b34801561044057600080fd5b5061021f60055481565b34801561045657600080fd5b5061018a6104653660046112c4565b61110b565b34801561047657600080fd5b506101f0610485366004611351565b6111ac565b34801561049657600080fd5b506103fc7f000000000000000000000000000000000000000000000000000000000000000081565b6060818015806104d057506003548110155b156104ee57604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060070180548251818502810185019093528083529193909284015b82821015610562576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161051a565b50505050915050919050565b60008180158061058057506003548110155b1561059e57604051637313c09d60e01b815260040160405180910390fd5b6000838152600260205260409020600381015460048201546105c091906112ab565b421080156105e657506000600582015460ff1660018111156105e4576105e4611398565b145b949350505050565b6105f66111ec565b6001600160a01b0316600090815260066020526040812055565b600061061a611219565b612710841180610628575082155b1561064657604051630e52390960e41b815260040160405180910390fd5b600380546000818152600260208190526040822083815590810188905580840187905542600482015560058101805460ff1916905560068101869055835492939092916106928361148e565b919050555083600560008282546106a991906112ab565b9091555050604051339083907f476f7bdb10d30e2de6d06e5d144c76d3963482c10f097a5048c401c84d1a102590600090a35090506106e86001600055565b9392505050565b6106f76111ec565b478111156107185760405163cd1c886760e01b815260040160405180910390fd5b600061072c6001546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114610776576040519150601f19603f3d011682016040523d82523d6000602084013e61077b565b606091505b505090508061079d576040516312171d8360e31b815260040160405180910390fd5b5050565b600080808080808080888015806107ba57506003548110155b156107d857604051637313c09d60e01b815260040160405180910390fd5b50505060009687525050600260208190526040909520805495810154600382015460048301546005840154600685015460078601546008909601549a9b949a93995091975060ff169550935090565b61082f611219565b8080158061083f57506003548110155b1561085d57604051637313c09d60e01b815260040160405180910390fd5b600082815260026020526040902060038101546004820154849291610881916112ab565b42106108a0576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206005015460ff1660018111156108c8576108c8611398565b146108e657604051632d2d860f60e11b815260040160405180910390fd5b60008581526002602081815260408084208151808301835233808252428286019081526007808501805460018082018355918b529988902094519990980290930180546001600160a01b0319166001600160a01b039099169890981788555196909501959095558151838152928301949094526624b72330bb37b960c91b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef906060015b60405180910390a350505050506109a76001600055565b50565b6109b26111ec565b6109bc6000611243565b565b6109c6611219565b808015806109d657506003548110155b156109f457604051637313c09d60e01b815260040160405180910390fd5b600082815260026020526040902060038101546004820154849291610a18916112ab565b4210610a37576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206005015460ff166001811115610a5f57610a5f611398565b14610a7d57604051632d2d860f60e11b815260040160405180910390fd5b600085815260026020818152604080842081518083018352338082524282860190815260088401805460018082018355918a529887902093519890970290920180546001600160a01b0319166001600160a01b03909816979097178755905195909401949094558051828152600792810192909252661059d85a5b9cdd60ca1b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef90606001610990565b610b356111ec565b80600003610b5657604051630e52390960e41b815260040160405180910390fd5b60048190556040518181527fc3869fc4914caa4e69064c93dc69ce5b5b73da5a26717b551e7b6b23f2db9b1b9060200160405180910390a150565b610b996111ec565b6001600160a01b0382161580610bad575080155b15610bcb57604051630e52390960e41b815260040160405180910390fd5b6001600160a01b03909116600090815260066020526040902055565b610bef611219565b80801580610bff57506003548110155b15610c1d57604051637313c09d60e01b815260040160405180910390fd5b816000808281526002602052604090206005015460ff166001811115610c4557610c45611398565b14610c6357604051632d2d860f60e11b815260040160405180910390fd5b600083815260026020526040902060038101546004820154610c8591906112ab565b421015610ca5576040516376d3a56d60e01b815260040160405180910390fd5b60018101546001600160a01b031660009081526006602052604090205480610ce057604051633312127960e01b815260040160405180910390fd5b6040516396834ad360e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396834ad390602401608060405180830381865afa158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c91906114d1565b90506000816000015160070b13610d955760405162bfc92160e01b815260040160405180910390fd5b61012c816060015142610da89190611561565b1115610dc757604051632e0942d960e21b815260040160405180910390fd5b80518060006002860154811015600081610de45787600801610de9565b876007015b9050600082610dfb5788600701610e00565b886008015b9050600083610e2e57604051806040016040528060078152602001661059d85a5b9cdd60ca1b815250610e4f565b6040518060400160405280600781526020016624b72330bb37b960c91b8152505b6004548354919250600091610e649190611574565b8b60060154610e7391906112ab565b845490915015801590610e865750600081115b156110ab576000805b8554811015610f045760008d60040154878381548110610eb157610eb16115ad565b906000526020600020906002020160010154610ecd9190611561565b90506000818f60030154610ee19190611561565b9050610eed81856112ab565b935050508080610efc9061148e565b915050610e8f565b5080156110a95760005b85548110156110a75760008d60040154878381548110610f3057610f306115ad565b906000526020600020906002020160010154610f4c9190611561565b90506000818f60030154610f609190611561565b9050600084610f6f8784611574565b610f79919061158b565b90508015611091578060056000828254610f939190611561565b925050819055506000898581548110610fae57610fae6115ad565b600091825260208220600290910201546040516001600160a01b039091169184919081818185875af1925050503d8060008114611007576040519150601f19603f3d011682016040523d82523d6000602084013e61100c565b606091505b505090508061102e576040516312171d8360e31b815260040160405180910390fd5b898581548110611040576110406115ad565b6000918252602091829020600290910201546040518481526001600160a01b03909116917fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6910160405180910390a2505b505050808061109f9061148e565b915050610f0e565b505b505b60058b01805460ff191660011790556040518e907f579e7f72f41084c4072560a3d26ffa8c9361debca741683ee5f7f2cf9a461a53906110ec9085906115c3565b60405180910390a2505050505050505050505050506109a76001600055565b60608180158061111d57506003548110155b1561113b57604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060080180548251818502810185019093528083529193909284018215610562576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161051a565b6111b46111ec565b6001600160a01b0381166111e357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6109a781611243565b6001546001600160a01b031633146109bc5760405163118cdaa760e01b81523360048201526024016111da565b60026000540361123c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b808201808211156112be576112be611295565b92915050565b6000602082840312156112d657600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561132857815180516001600160a01b031685528601518685015292840192908501906001016112fa565b5091979650505050505050565b80356001600160a01b038116811461134c57600080fd5b919050565b60006020828403121561136357600080fd5b6106e882611335565b60008060006060848603121561138157600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b600281106113cc57634e487b7160e01b600052602160045260246000fd5b9052565b6000610100820190508982528860208301528760408301528660608301526113fb60808301876113ae565b8460a08301528360c08301528260e08301529998505050505050505050565b8781526001600160a01b038716602082015260408101869052606081018590526080810184905260e0810161145260a08301856113ae565b8260c083015298975050505050505050565b6000806040838503121561147757600080fd5b61148083611335565b946020939093013593505050565b6000600182016114a0576114a0611295565b5060010190565b805167ffffffffffffffff8116811461134c57600080fd5b8051600381900b811461134c57600080fd5b6000608082840312156114e357600080fd5b6040516080810181811067ffffffffffffffff8211171561151457634e487b7160e01b600052604160045260246000fd5b6040528251600781900b811461152957600080fd5b8152611537602084016114a7565b6020820152611548604084016114bf565b6040820152606083015160608201528091505092915050565b818103818111156112be576112be611295565b80820281158282048414176112be576112be611295565b6000826115a857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208083528351808285015260005b818110156115f0578581018301518582016040015282016115d4565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220db198e87ba06224e37598f83f5175be8e9d2a2ea5b3cbc9e2cd6afe480f66e2b64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x175D CODESIZE SUB DUP1 PUSH2 0x175D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE CALLER DUP1 PUSH2 0x5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63 DUP2 PUSH2 0x89 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE PUSH20 0xDD24F84D36BF92C65F92307595C6B99D36B6F8C4 PUSH1 0x80 MSTORE PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1647 PUSH2 0x116 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x49C ADD MSTORE PUSH2 0xCF9 ADD MSTORE PUSH2 0x1647 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xB8141810 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xBAC03CD7 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xDC6E4495 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x48A JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x7776EAB6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7CABD293 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x7FE09C7D EQ PUSH2 0x3C2 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3937066C GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x3937066C EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x582BD8F1 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5AF01B91 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x6D9AAC62 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x6EC1B041 EQ PUSH2 0x33A JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4B8BA5B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9EEA131 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x13F2721B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1547D5C6 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x312C9E87 EQ PUSH2 0x22D JUMPI PUSH2 0x158 JUMP JUMPDEST CALLDATASIZE PUSH2 0x158 JUMPI CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x4D0 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x51A JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 ISZERO DUP1 PUSH2 0x580 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x5E6 JUMPI POP PUSH1 0x0 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E4 PUSH2 0x1398 JUMP JUMPDEST EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x2710 DUP5 GT DUP1 PUSH2 0x628 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE SWAP1 DUP2 ADD DUP9 SWAP1 SSTORE DUP1 DUP5 ADD DUP8 SWAP1 SSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP7 SWAP1 SSTORE DUP4 SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x692 DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x476F7BDB10D30E2DE6D06E5D144C76D3963482C10F097A5048C401C84D1A1025 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 POP PUSH2 0x6E8 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x11EC JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD1C8867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72C PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x77B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 ISZERO DUP1 PUSH2 0x7BA JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP7 DUP8 MSTORE POP POP PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 DUP1 SLOAD SWAP6 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 SWAP1 SWAP7 ADD SLOAD SWAP11 SWAP12 SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP2 SWAP8 POP PUSH1 0xFF AND SWAP6 POP SWAP4 POP SWAP1 JUMP JUMPDEST PUSH2 0x82F PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x83F JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x881 SWAP2 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 SWAP5 MLOAD SWAP10 SWAP1 SWAP9 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND SWAP9 SWAP1 SWAP9 OR DUP9 SSTORE MLOAD SWAP7 SWAP1 SWAP6 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x9A7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x9BC PUSH1 0x0 PUSH2 0x1243 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x9D6 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0xA18 SWAP2 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5F PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE SWAP9 DUP8 SWAP1 KECCAK256 SWAP4 MLOAD SWAP9 SWAP1 SWAP8 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP8 SSTORE SWAP1 MLOAD SWAP6 SWAP1 SWAP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x11EC JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC3869FC4914CAA4E69064C93DC69CE5B5B73DA5A26717B551E7B6B23F2DB9B1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB99 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0xBAD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0xBFF JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33121279 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x96834AD3 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND SGT PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST GT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E0942D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH1 0x0 DUP2 PUSH2 0xDE4 JUMPI DUP8 PUSH1 0x8 ADD PUSH2 0xDE9 JUMP JUMPDEST DUP8 PUSH1 0x7 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xDFB JUMPI DUP9 PUSH1 0x7 ADD PUSH2 0xE00 JUMP JUMPDEST DUP9 PUSH1 0x8 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL DUP2 MSTORE POP PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x4 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST DUP12 PUSH1 0x6 ADD SLOAD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE86 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xF04 JUMPI PUSH1 0x0 DUP14 PUSH1 0x4 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP16 PUSH1 0x3 ADD SLOAD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH2 0xEED DUP2 DUP6 PUSH2 0x12AB JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xEFC SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE8F JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 DUP14 PUSH1 0x4 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF30 JUMPI PUSH2 0xF30 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP16 PUSH1 0x3 ADD SLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH2 0xF6F DUP8 DUP5 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1091 JUMPI DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAE PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1040 JUMPI PUSH2 0x1040 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x109F SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x5 DUP12 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP15 SWAP1 PUSH32 0x579E7F72F41084C4072560A3D26FFA8C9361DEBCA741683EE5F7F2CF9A461A53 SWAP1 PUSH2 0x10EC SWAP1 DUP6 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x9A7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x111D JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD DUP3 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x51A JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12FA JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x13CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP DUP10 DUP3 MSTORE DUP9 PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP7 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13FB PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x13AE JUMP JUMPDEST DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP3 PUSH1 0xE0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD PUSH2 0x1452 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x13AE JUMP JUMPDEST DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1480 DUP4 PUSH2 0x1335 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14A0 JUMPI PUSH2 0x14A0 PUSH2 0x1295 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1514 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x1537 PUSH1 0x20 DUP5 ADD PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1548 PUSH1 0x40 DUP5 ADD PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15D4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB NOT DUP15 DUP8 0xBA MOD 0x22 0x4E CALLDATACOPY MSIZE DUP16 DUP4 CREATE2 OR JUMPDEST 0xE8 0xE9 0xD2 LOG2 0xEA JUMPDEST EXTCODECOPY 0xBC SWAP15 0x2C 0xD6 0xAF 0xE4 DUP1 0xF6 PUSH15 0x2B64736F6C63430008140033000000 ","sourceMap":"497:14302:6:-:0;;;2583:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:2;2061:7;:21;2630:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;349:51:7;322:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2667:1:6::1;2652:12;:16:::0;2678::::1;:36:::0;1683:42:::1;2724:35;::::0;497:14302;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:184:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:7;;14:184;-1:-1:-1;14:184:7:o;203:203::-;497:14302:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1473":{"entryPoint":null,"id":1473,"parameterSlots":0,"returnSlots":0},"@_1482":{"entryPoint":null,"id":1482,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4588,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_234":{"entryPoint":null,"id":234,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_226":{"entryPoint":4633,"id":226,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4675,"id":146,"parameterSlots":1,"returnSlots":0},"@coinToPriceFeedId_548":{"entryPoint":null,"id":548,"parameterSlots":0,"returnSlots":0},"@emergencyWithdraw_1451":{"entryPoint":1775,"id":1451,"parameterSlots":1,"returnSlots":0},"@fixedStakeAmount_539":{"entryPoint":null,"id":539,"parameterSlots":0,"returnSlots":0},"@getContractBalance_1464":{"entryPoint":null,"id":1464,"parameterSlots":0,"returnSlots":1},"@getMetric_1264":{"entryPoint":1953,"id":1264,"parameterSlots":1,"returnSlots":8},"@getStakesAgainst_1302":{"entryPoint":4363,"id":1302,"parameterSlots":1,"returnSlots":1},"@getStakesInFavor_1283":{"entryPoint":1214,"id":1283,"parameterSlots":1,"returnSlots":1},"@isStakingActive_1336":{"entryPoint":1390,"id":1336,"parameterSlots":1,"returnSlots":1},"@metrics_535":{"entryPoint":null,"id":535,"parameterSlots":0,"returnSlots":0},"@nextMetricID_537":{"entryPoint":null,"id":537,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pyth_544":{"entryPoint":null,"id":544,"parameterSlots":0,"returnSlots":0},"@removeSupportedCoin_1385":{"entryPoint":1518,"id":1385,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2474,"id":98,"parameterSlots":0,"returnSlots":0},"@resolveMetric_1210":{"entryPoint":3047,"id":1210,"parameterSlots":1,"returnSlots":0},"@setSupportedCoin_1371":{"entryPoint":2961,"id":1371,"parameterSlots":2,"returnSlots":0},"@stakeAgainst_871":{"entryPoint":2494,"id":871,"parameterSlots":1,"returnSlots":0},"@stakeInFavor_826":{"entryPoint":2087,"id":826,"parameterSlots":1,"returnSlots":0},"@submitMetric_781":{"entryPoint":1552,"id":781,"parameterSlots":3,"returnSlots":1},"@totalContractBalance_541":{"entryPoint":null,"id":541,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4524,"id":126,"parameterSlots":1,"returnSlots":0},"@updateFixedStakeAmount_1410":{"entryPoint":2861,"id":1410,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4917,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int32_fromMemory":{"entryPoint":5311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory":{"entryPoint":5329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":4972,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint64_fromMemory":{"entryPoint":5287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_enum_MetricStatus":{"entryPoint":5038,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":5146,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5072,"id":null,"parameterSlots":9,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4779,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5515,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5492,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5473,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5262,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4757,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5016,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5549,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8637:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:7"},"nodeType":"YulFunctionCall","src":"66:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:7"},"nodeType":"YulFunctionCall","src":"56:31:7"},"nodeType":"YulExpressionStatement","src":"56:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:7"},"nodeType":"YulFunctionCall","src":"96:15:7"},"nodeType":"YulExpressionStatement","src":"96:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:7"},"nodeType":"YulFunctionCall","src":"120:15:7"},"nodeType":"YulExpressionStatement","src":"120:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14:127:7"},{"body":{"nodeType":"YulBlock","src":"194:77:7","statements":[{"nodeType":"YulAssignment","src":"204:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"215:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"218:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"211:3:7"},"nodeType":"YulFunctionCall","src":"211:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"204:3:7"}]},{"body":{"nodeType":"YulBlock","src":"243:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"245:16:7"},"nodeType":"YulFunctionCall","src":"245:18:7"},"nodeType":"YulExpressionStatement","src":"245:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"235:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"238:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"232:2:7"},"nodeType":"YulFunctionCall","src":"232:10:7"},"nodeType":"YulIf","src":"229:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"177:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"180:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"186:3:7","type":""}],"src":"146:125:7"},{"body":{"nodeType":"YulBlock","src":"346:110:7","statements":[{"body":{"nodeType":"YulBlock","src":"392:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"401:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"394:6:7"},"nodeType":"YulFunctionCall","src":"394:12:7"},"nodeType":"YulExpressionStatement","src":"394:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"367:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"363:3:7"},"nodeType":"YulFunctionCall","src":"363:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"359:3:7"},"nodeType":"YulFunctionCall","src":"359:32:7"},"nodeType":"YulIf","src":"356:52:7"},{"nodeType":"YulAssignment","src":"417:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"440:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:7"},"nodeType":"YulFunctionCall","src":"427:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"417:6:7"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"312:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"323:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"335:6:7","type":""}],"src":"276:180:7"},{"body":{"nodeType":"YulBlock","src":"656:613:7","statements":[{"nodeType":"YulVariableDeclaration","src":"666:12:7","value":{"kind":"number","nodeType":"YulLiteral","src":"676:2:7","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"670:2:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"687:32:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"705:9:7"},{"name":"_1","nodeType":"YulIdentifier","src":"716:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"701:3:7"},"nodeType":"YulFunctionCall","src":"701:18:7"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"691:6:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"735:9:7"},{"name":"_1","nodeType":"YulIdentifier","src":"746:2:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"728:6:7"},"nodeType":"YulFunctionCall","src":"728:21:7"},"nodeType":"YulExpressionStatement","src":"728:21:7"},{"nodeType":"YulVariableDeclaration","src":"758:17:7","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"769:6:7"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"762:3:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"784:27:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"804:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"798:5:7"},"nodeType":"YulFunctionCall","src":"798:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"788:6:7","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"827:6:7"},{"name":"length","nodeType":"YulIdentifier","src":"835:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"820:6:7"},"nodeType":"YulFunctionCall","src":"820:22:7"},"nodeType":"YulExpressionStatement","src":"820:22:7"},{"nodeType":"YulVariableDeclaration","src":"851:12:7","value":{"kind":"number","nodeType":"YulLiteral","src":"861:2:7","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"855:2:7","type":""}]},{"nodeType":"YulAssignment","src":"872:25:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"883:9:7"},{"name":"_2","nodeType":"YulIdentifier","src":"894:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"879:3:7"},"nodeType":"YulFunctionCall","src":"879:18:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"906:29:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"924:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"932:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"920:3:7"},"nodeType":"YulFunctionCall","src":"920:15:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"910:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"944:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"953:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"948:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1012:231:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1026:23:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1042:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1036:5:7"},"nodeType":"YulFunctionCall","src":"1036:13:7"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1030:2:7","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1069:3:7"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1084:2:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1078:5:7"},"nodeType":"YulFunctionCall","src":"1078:9:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1097:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1102:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1093:3:7"},"nodeType":"YulFunctionCall","src":"1093:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"1106:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1089:3:7"},"nodeType":"YulFunctionCall","src":"1089:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:7"},"nodeType":"YulFunctionCall","src":"1074:35:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1062:6:7"},"nodeType":"YulFunctionCall","src":"1062:48:7"},"nodeType":"YulExpressionStatement","src":"1062:48:7"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1134:3:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1139:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:7"},"nodeType":"YulFunctionCall","src":"1130:12:7"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1154:2:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1158:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1150:3:7"},"nodeType":"YulFunctionCall","src":"1150:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1144:5:7"},"nodeType":"YulFunctionCall","src":"1144:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1123:6:7"},"nodeType":"YulFunctionCall","src":"1123:40:7"},"nodeType":"YulExpressionStatement","src":"1123:40:7"},{"nodeType":"YulAssignment","src":"1176:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1187:3:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1192:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1183:3:7"},"nodeType":"YulFunctionCall","src":"1183:12:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1176:3:7"}]},{"nodeType":"YulAssignment","src":"1208:25:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1222:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1230:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1218:3:7"},"nodeType":"YulFunctionCall","src":"1218:15:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1208:6:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"974:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"977:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"971:2:7"},"nodeType":"YulFunctionCall","src":"971:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"985:18:7","statements":[{"nodeType":"YulAssignment","src":"987:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"996:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"992:3:7"},"nodeType":"YulFunctionCall","src":"992:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"987:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"967:3:7","statements":[]},"src":"963:280:7"},{"nodeType":"YulAssignment","src":"1252:11:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"1260:3:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1252:4:7"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"625:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"636:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"647:4:7","type":""}],"src":"461:808:7"},{"body":{"nodeType":"YulBlock","src":"1369:92:7","statements":[{"nodeType":"YulAssignment","src":"1379:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1402:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:7"},"nodeType":"YulFunctionCall","src":"1387:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1421:9:7"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1446:6:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1439:6:7"},"nodeType":"YulFunctionCall","src":"1439:14:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1432:6:7"},"nodeType":"YulFunctionCall","src":"1432:22:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:7"},"nodeType":"YulFunctionCall","src":"1414:41:7"},"nodeType":"YulExpressionStatement","src":"1414:41:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1338:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1349:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1360:4:7","type":""}],"src":"1274:187:7"},{"body":{"nodeType":"YulBlock","src":"1515:124:7","statements":[{"nodeType":"YulAssignment","src":"1525:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1547:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1534:12:7"},"nodeType":"YulFunctionCall","src":"1534:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1525:5:7"}]},{"body":{"nodeType":"YulBlock","src":"1617:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1626:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1629:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1619:6:7"},"nodeType":"YulFunctionCall","src":"1619:12:7"},"nodeType":"YulExpressionStatement","src":"1619:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1576:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1587:5:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1602:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1607:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1598:3:7"},"nodeType":"YulFunctionCall","src":"1598:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"1611:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1594:3:7"},"nodeType":"YulFunctionCall","src":"1594:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1583:3:7"},"nodeType":"YulFunctionCall","src":"1583:31:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1573:2:7"},"nodeType":"YulFunctionCall","src":"1573:42:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1566:6:7"},"nodeType":"YulFunctionCall","src":"1566:50:7"},"nodeType":"YulIf","src":"1563:70:7"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1494:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1505:5:7","type":""}],"src":"1466:173:7"},{"body":{"nodeType":"YulBlock","src":"1714:116:7","statements":[{"body":{"nodeType":"YulBlock","src":"1760:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1769:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1772:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1762:6:7"},"nodeType":"YulFunctionCall","src":"1762:12:7"},"nodeType":"YulExpressionStatement","src":"1762:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1735:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1731:3:7"},"nodeType":"YulFunctionCall","src":"1731:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1756:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1727:3:7"},"nodeType":"YulFunctionCall","src":"1727:32:7"},"nodeType":"YulIf","src":"1724:52:7"},{"nodeType":"YulAssignment","src":"1785:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1814:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1795:18:7"},"nodeType":"YulFunctionCall","src":"1795:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1785:6:7"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1680:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1691:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1703:6:7","type":""}],"src":"1644:186:7"},{"body":{"nodeType":"YulBlock","src":"1936:76:7","statements":[{"nodeType":"YulAssignment","src":"1946:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:7"},"nodeType":"YulFunctionCall","src":"1954:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1946:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1988:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"1999:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1981:6:7"},"nodeType":"YulFunctionCall","src":"1981:25:7"},"nodeType":"YulExpressionStatement","src":"1981:25:7"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1905:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1916:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1927:4:7","type":""}],"src":"1835:177:7"},{"body":{"nodeType":"YulBlock","src":"2121:212:7","statements":[{"body":{"nodeType":"YulBlock","src":"2167:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2176:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2179:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2169:6:7"},"nodeType":"YulFunctionCall","src":"2169:12:7"},"nodeType":"YulExpressionStatement","src":"2169:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2142:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2151:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2138:3:7"},"nodeType":"YulFunctionCall","src":"2138:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2134:3:7"},"nodeType":"YulFunctionCall","src":"2134:32:7"},"nodeType":"YulIf","src":"2131:52:7"},{"nodeType":"YulAssignment","src":"2192:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2202:12:7"},"nodeType":"YulFunctionCall","src":"2202:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2192:6:7"}]},{"nodeType":"YulAssignment","src":"2234:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2261:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2272:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2257:3:7"},"nodeType":"YulFunctionCall","src":"2257:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2244:12:7"},"nodeType":"YulFunctionCall","src":"2244:32:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2234:6:7"}]},{"nodeType":"YulAssignment","src":"2285:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2323:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2308:3:7"},"nodeType":"YulFunctionCall","src":"2308:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2295:12:7"},"nodeType":"YulFunctionCall","src":"2295:32:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2285:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2071:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2082:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2094:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2102:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2110:6:7","type":""}],"src":"2017:316:7"},{"body":{"nodeType":"YulBlock","src":"2439:76:7","statements":[{"nodeType":"YulAssignment","src":"2449:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2472:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:7"},"nodeType":"YulFunctionCall","src":"2457:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2449:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2491:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"2502:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2484:6:7"},"nodeType":"YulFunctionCall","src":"2484:25:7"},"nodeType":"YulExpressionStatement","src":"2484:25:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2408:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2419:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2430:4:7","type":""}],"src":"2338:177:7"},{"body":{"nodeType":"YulBlock","src":"2552:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2569:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2576:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2581:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2572:3:7"},"nodeType":"YulFunctionCall","src":"2572:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2562:6:7"},"nodeType":"YulFunctionCall","src":"2562:31:7"},"nodeType":"YulExpressionStatement","src":"2562:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2609:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2612:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2602:6:7"},"nodeType":"YulFunctionCall","src":"2602:15:7"},"nodeType":"YulExpressionStatement","src":"2602:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2633:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2636:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2626:6:7"},"nodeType":"YulFunctionCall","src":"2626:15:7"},"nodeType":"YulExpressionStatement","src":"2626:15:7"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"2520:127:7"},{"body":{"nodeType":"YulBlock","src":"2706:186:7","statements":[{"body":{"nodeType":"YulBlock","src":"2748:111:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2769:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2776:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2781:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2772:3:7"},"nodeType":"YulFunctionCall","src":"2772:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:7"},"nodeType":"YulFunctionCall","src":"2762:31:7"},"nodeType":"YulExpressionStatement","src":"2762:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2813:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2816:4:7","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2806:6:7"},"nodeType":"YulFunctionCall","src":"2806:15:7"},"nodeType":"YulExpressionStatement","src":"2806:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2841:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2844:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2834:6:7"},"nodeType":"YulFunctionCall","src":"2834:15:7"},"nodeType":"YulExpressionStatement","src":"2834:15:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2729:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"2736:1:7","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2726:2:7"},"nodeType":"YulFunctionCall","src":"2726:12:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2719:6:7"},"nodeType":"YulFunctionCall","src":"2719:20:7"},"nodeType":"YulIf","src":"2716:143:7"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2875:3:7"},{"name":"value","nodeType":"YulIdentifier","src":"2880:5:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2868:6:7"},"nodeType":"YulFunctionCall","src":"2868:18:7"},"nodeType":"YulExpressionStatement","src":"2868:18:7"}]},"name":"abi_encode_enum_MetricStatus","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2690:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2697:3:7","type":""}],"src":"2652:240:7"},{"body":{"nodeType":"YulBlock","src":"3208:404:7","statements":[{"nodeType":"YulAssignment","src":"3218:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3230:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3241:3:7","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:7"},"nodeType":"YulFunctionCall","src":"3226:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3218:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3261:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"3272:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3254:6:7"},"nodeType":"YulFunctionCall","src":"3254:25:7"},"nodeType":"YulExpressionStatement","src":"3254:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3299:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3310:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:7"},"nodeType":"YulFunctionCall","src":"3295:18:7"},{"name":"value1","nodeType":"YulIdentifier","src":"3315:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3288:6:7"},"nodeType":"YulFunctionCall","src":"3288:34:7"},"nodeType":"YulExpressionStatement","src":"3288:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3342:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3353:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:7"},"nodeType":"YulFunctionCall","src":"3338:18:7"},{"name":"value2","nodeType":"YulIdentifier","src":"3358:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3331:6:7"},"nodeType":"YulFunctionCall","src":"3331:34:7"},"nodeType":"YulExpressionStatement","src":"3331:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3385:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3396:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3381:3:7"},"nodeType":"YulFunctionCall","src":"3381:18:7"},{"name":"value3","nodeType":"YulIdentifier","src":"3401:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3374:6:7"},"nodeType":"YulFunctionCall","src":"3374:34:7"},"nodeType":"YulExpressionStatement","src":"3374:34:7"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3446:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3469:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:7"},"nodeType":"YulFunctionCall","src":"3454:19:7"}],"functionName":{"name":"abi_encode_enum_MetricStatus","nodeType":"YulIdentifier","src":"3417:28:7"},"nodeType":"YulFunctionCall","src":"3417:57:7"},"nodeType":"YulExpressionStatement","src":"3417:57:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3494:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3505:3:7","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3490:3:7"},"nodeType":"YulFunctionCall","src":"3490:19:7"},{"name":"value5","nodeType":"YulIdentifier","src":"3511:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3483:6:7"},"nodeType":"YulFunctionCall","src":"3483:35:7"},"nodeType":"YulExpressionStatement","src":"3483:35:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3538:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3549:3:7","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3534:3:7"},"nodeType":"YulFunctionCall","src":"3534:19:7"},{"name":"value6","nodeType":"YulIdentifier","src":"3555:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3527:6:7"},"nodeType":"YulFunctionCall","src":"3527:35:7"},"nodeType":"YulExpressionStatement","src":"3527:35:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3582:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3593:3:7","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3578:3:7"},"nodeType":"YulFunctionCall","src":"3578:19:7"},{"name":"value7","nodeType":"YulIdentifier","src":"3599:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3571:6:7"},"nodeType":"YulFunctionCall","src":"3571:35:7"},"nodeType":"YulExpressionStatement","src":"3571:35:7"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3121:9:7","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3132:6:7","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3140:6:7","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3148:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3156:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3164:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3172:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3180:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3188:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3199:4:7","type":""}],"src":"2897:715:7"},{"body":{"nodeType":"YulBlock","src":"3900:386:7","statements":[{"nodeType":"YulAssignment","src":"3910:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3922:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3933:3:7","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3918:3:7"},"nodeType":"YulFunctionCall","src":"3918:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3910:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3953:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"3964:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3946:6:7"},"nodeType":"YulFunctionCall","src":"3946:25:7"},"nodeType":"YulExpressionStatement","src":"3946:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3991:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4002:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3987:3:7"},"nodeType":"YulFunctionCall","src":"3987:18:7"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4011:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4027:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4032:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4023:3:7"},"nodeType":"YulFunctionCall","src":"4023:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"4036:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4019:3:7"},"nodeType":"YulFunctionCall","src":"4019:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4007:3:7"},"nodeType":"YulFunctionCall","src":"4007:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3980:6:7"},"nodeType":"YulFunctionCall","src":"3980:60:7"},"nodeType":"YulExpressionStatement","src":"3980:60:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:7"},"nodeType":"YulFunctionCall","src":"4056:18:7"},{"name":"value2","nodeType":"YulIdentifier","src":"4076:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4049:6:7"},"nodeType":"YulFunctionCall","src":"4049:34:7"},"nodeType":"YulExpressionStatement","src":"4049:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4103:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4114:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4099:3:7"},"nodeType":"YulFunctionCall","src":"4099:18:7"},{"name":"value3","nodeType":"YulIdentifier","src":"4119:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4092:6:7"},"nodeType":"YulFunctionCall","src":"4092:34:7"},"nodeType":"YulExpressionStatement","src":"4092:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4146:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4157:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4142:3:7"},"nodeType":"YulFunctionCall","src":"4142:19:7"},{"name":"value4","nodeType":"YulIdentifier","src":"4163:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4135:6:7"},"nodeType":"YulFunctionCall","src":"4135:35:7"},"nodeType":"YulExpressionStatement","src":"4135:35:7"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"4208:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4220:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4231:3:7","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4216:3:7"},"nodeType":"YulFunctionCall","src":"4216:19:7"}],"functionName":{"name":"abi_encode_enum_MetricStatus","nodeType":"YulIdentifier","src":"4179:28:7"},"nodeType":"YulFunctionCall","src":"4179:57:7"},"nodeType":"YulExpressionStatement","src":"4179:57:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4256:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4267:3:7","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4252:3:7"},"nodeType":"YulFunctionCall","src":"4252:19:7"},{"name":"value6","nodeType":"YulIdentifier","src":"4273:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4245:6:7"},"nodeType":"YulFunctionCall","src":"4245:35:7"},"nodeType":"YulExpressionStatement","src":"4245:35:7"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3821:9:7","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3832:6:7","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3840:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3848:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3856:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3864:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3872:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3880:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3891:4:7","type":""}],"src":"3617:669:7"},{"body":{"nodeType":"YulBlock","src":"4378:167:7","statements":[{"body":{"nodeType":"YulBlock","src":"4424:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4433:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4436:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4426:6:7"},"nodeType":"YulFunctionCall","src":"4426:12:7"},"nodeType":"YulExpressionStatement","src":"4426:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4399:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"4408:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4395:3:7"},"nodeType":"YulFunctionCall","src":"4395:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4420:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4391:3:7"},"nodeType":"YulFunctionCall","src":"4391:32:7"},"nodeType":"YulIf","src":"4388:52:7"},{"nodeType":"YulAssignment","src":"4449:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4478:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4459:18:7"},"nodeType":"YulFunctionCall","src":"4459:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4449:6:7"}]},{"nodeType":"YulAssignment","src":"4497:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:7"},"nodeType":"YulFunctionCall","src":"4520:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4507:12:7"},"nodeType":"YulFunctionCall","src":"4507:32:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4497:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4336:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4347:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4359:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4367:6:7","type":""}],"src":"4291:254:7"},{"body":{"nodeType":"YulBlock","src":"4651:102:7","statements":[{"nodeType":"YulAssignment","src":"4661:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4684:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4669:3:7"},"nodeType":"YulFunctionCall","src":"4669:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4661:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4703:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4718:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4734:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4739:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4730:3:7"},"nodeType":"YulFunctionCall","src":"4730:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"4743:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4726:3:7"},"nodeType":"YulFunctionCall","src":"4726:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4714:3:7"},"nodeType":"YulFunctionCall","src":"4714:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4696:6:7"},"nodeType":"YulFunctionCall","src":"4696:51:7"},"nodeType":"YulExpressionStatement","src":"4696:51:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4620:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4631:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4642:4:7","type":""}],"src":"4550:203:7"},{"body":{"nodeType":"YulBlock","src":"4872:102:7","statements":[{"nodeType":"YulAssignment","src":"4882:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4894:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4905:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4890:3:7"},"nodeType":"YulFunctionCall","src":"4890:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4882:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4924:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4939:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4955:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4960:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4951:3:7"},"nodeType":"YulFunctionCall","src":"4951:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"4964:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4947:3:7"},"nodeType":"YulFunctionCall","src":"4947:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4935:3:7"},"nodeType":"YulFunctionCall","src":"4935:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4917:6:7"},"nodeType":"YulFunctionCall","src":"4917:51:7"},"nodeType":"YulExpressionStatement","src":"4917:51:7"}]},"name":"abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4841:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4852:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4863:4:7","type":""}],"src":"4758:216:7"},{"body":{"nodeType":"YulBlock","src":"5026:88:7","statements":[{"body":{"nodeType":"YulBlock","src":"5057:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5059:16:7"},"nodeType":"YulFunctionCall","src":"5059:18:7"},"nodeType":"YulExpressionStatement","src":"5059:18:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5042:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5053:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5049:3:7"},"nodeType":"YulFunctionCall","src":"5049:6:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5039:2:7"},"nodeType":"YulFunctionCall","src":"5039:17:7"},"nodeType":"YulIf","src":"5036:43:7"},{"nodeType":"YulAssignment","src":"5088:20:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5099:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"5106:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5095:3:7"},"nodeType":"YulFunctionCall","src":"5095:13:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5088:3:7"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5008:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5018:3:7","type":""}],"src":"4979:135:7"},{"body":{"nodeType":"YulBlock","src":"5310:14:7","statements":[{"nodeType":"YulAssignment","src":"5312:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"5319:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5312:3:7"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5294:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5302:3:7","type":""}],"src":"5119:205:7"},{"body":{"nodeType":"YulBlock","src":"5503:156:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5520:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5531:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5513:6:7"},"nodeType":"YulFunctionCall","src":"5513:21:7"},"nodeType":"YulExpressionStatement","src":"5513:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5554:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5565:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5550:3:7"},"nodeType":"YulFunctionCall","src":"5550:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"5570:1:7","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:7"},"nodeType":"YulFunctionCall","src":"5543:29:7"},"nodeType":"YulExpressionStatement","src":"5543:29:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5592:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5603:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5588:3:7"},"nodeType":"YulFunctionCall","src":"5588:18:7"},{"hexValue":"496e4661766f72","kind":"string","nodeType":"YulLiteral","src":"5608:9:7","type":"","value":"InFavor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5581:6:7"},"nodeType":"YulFunctionCall","src":"5581:37:7"},"nodeType":"YulExpressionStatement","src":"5581:37:7"},{"nodeType":"YulAssignment","src":"5627:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5639:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5650:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5635:3:7"},"nodeType":"YulFunctionCall","src":"5635:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5627:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5480:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5494:4:7","type":""}],"src":"5329:330:7"},{"body":{"nodeType":"YulBlock","src":"5838:156:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5855:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5866:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5848:6:7"},"nodeType":"YulFunctionCall","src":"5848:21:7"},"nodeType":"YulExpressionStatement","src":"5848:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5889:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5900:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:7"},"nodeType":"YulFunctionCall","src":"5885:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"5905:1:7","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5878:6:7"},"nodeType":"YulFunctionCall","src":"5878:29:7"},"nodeType":"YulExpressionStatement","src":"5878:29:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5938:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:7"},"nodeType":"YulFunctionCall","src":"5923:18:7"},{"hexValue":"416761696e7374","kind":"string","nodeType":"YulLiteral","src":"5943:9:7","type":"","value":"Against"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5916:6:7"},"nodeType":"YulFunctionCall","src":"5916:37:7"},"nodeType":"YulExpressionStatement","src":"5916:37:7"},{"nodeType":"YulAssignment","src":"5962:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5974:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5985:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5970:3:7"},"nodeType":"YulFunctionCall","src":"5970:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5962:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5815:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5829:4:7","type":""}],"src":"5664:330:7"},{"body":{"nodeType":"YulBlock","src":"6058:116:7","statements":[{"nodeType":"YulAssignment","src":"6068:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6083:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6077:5:7"},"nodeType":"YulFunctionCall","src":"6077:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6068:5:7"}]},{"body":{"nodeType":"YulBlock","src":"6152:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6161:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6164:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6154:6:7"},"nodeType":"YulFunctionCall","src":"6154:12:7"},"nodeType":"YulExpressionStatement","src":"6154:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6112:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6123:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"6130:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6119:3:7"},"nodeType":"YulFunctionCall","src":"6119:30:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6109:2:7"},"nodeType":"YulFunctionCall","src":"6109:41:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6102:6:7"},"nodeType":"YulFunctionCall","src":"6102:49:7"},"nodeType":"YulIf","src":"6099:69:7"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6037:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6048:5:7","type":""}],"src":"5999:175:7"},{"body":{"nodeType":"YulBlock","src":"6237:106:7","statements":[{"nodeType":"YulAssignment","src":"6247:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6262:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6256:5:7"},"nodeType":"YulFunctionCall","src":"6256:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6247:5:7"}]},{"body":{"nodeType":"YulBlock","src":"6321:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6330:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6333:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6323:6:7"},"nodeType":"YulFunctionCall","src":"6323:12:7"},"nodeType":"YulExpressionStatement","src":"6323:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6291:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6309:1:7","type":"","value":"3"},{"name":"value","nodeType":"YulIdentifier","src":"6312:5:7"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6298:10:7"},"nodeType":"YulFunctionCall","src":"6298:20:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6288:2:7"},"nodeType":"YulFunctionCall","src":"6288:31:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6281:6:7"},"nodeType":"YulFunctionCall","src":"6281:39:7"},"nodeType":"YulIf","src":"6278:59:7"}]},"name":"abi_decode_int32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6216:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6227:5:7","type":""}],"src":"6179:164:7"},{"body":{"nodeType":"YulBlock","src":"6451:752:7","statements":[{"body":{"nodeType":"YulBlock","src":"6498:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6507:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6510:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6500:6:7"},"nodeType":"YulFunctionCall","src":"6500:12:7"},"nodeType":"YulExpressionStatement","src":"6500:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6472:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"6481:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6468:3:7"},"nodeType":"YulFunctionCall","src":"6468:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"6493:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6464:3:7"},"nodeType":"YulFunctionCall","src":"6464:33:7"},"nodeType":"YulIf","src":"6461:53:7"},{"nodeType":"YulVariableDeclaration","src":"6523:23:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6543:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6537:5:7"},"nodeType":"YulFunctionCall","src":"6537:9:7"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6527:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6555:34:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6577:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6585:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6573:3:7"},"nodeType":"YulFunctionCall","src":"6573:16:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6559:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6672:111:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6693:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6700:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6705:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6696:3:7"},"nodeType":"YulFunctionCall","src":"6696:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6686:6:7"},"nodeType":"YulFunctionCall","src":"6686:31:7"},"nodeType":"YulExpressionStatement","src":"6686:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6737:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6740:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6730:6:7"},"nodeType":"YulFunctionCall","src":"6730:15:7"},"nodeType":"YulExpressionStatement","src":"6730:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6765:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6768:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6758:6:7"},"nodeType":"YulFunctionCall","src":"6758:15:7"},"nodeType":"YulExpressionStatement","src":"6758:15:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6607:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"6619:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6604:2:7"},"nodeType":"YulFunctionCall","src":"6604:34:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6643:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6655:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6640:2:7"},"nodeType":"YulFunctionCall","src":"6640:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6601:2:7"},"nodeType":"YulFunctionCall","src":"6601:62:7"},"nodeType":"YulIf","src":"6598:185:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6799:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6803:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6792:6:7"},"nodeType":"YulFunctionCall","src":"6792:22:7"},"nodeType":"YulExpressionStatement","src":"6792:22:7"},{"nodeType":"YulVariableDeclaration","src":"6823:29:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6842:9:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6836:5:7"},"nodeType":"YulFunctionCall","src":"6836:16:7"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6827:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6904:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6913:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6916:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6906:6:7"},"nodeType":"YulFunctionCall","src":"6906:12:7"},"nodeType":"YulExpressionStatement","src":"6906:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6874:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6892:1:7","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"6895:5:7"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6881:10:7"},"nodeType":"YulFunctionCall","src":"6881:20:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6871:2:7"},"nodeType":"YulFunctionCall","src":"6871:31:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6864:6:7"},"nodeType":"YulFunctionCall","src":"6864:39:7"},"nodeType":"YulIf","src":"6861:59:7"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6936:6:7"},{"name":"value","nodeType":"YulIdentifier","src":"6944:5:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6929:6:7"},"nodeType":"YulFunctionCall","src":"6929:21:7"},"nodeType":"YulExpressionStatement","src":"6929:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6970:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6978:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6966:3:7"},"nodeType":"YulFunctionCall","src":"6966:15:7"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7016:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7027:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7012:3:7"},"nodeType":"YulFunctionCall","src":"7012:18:7"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"6983:28:7"},"nodeType":"YulFunctionCall","src":"6983:48:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6959:6:7"},"nodeType":"YulFunctionCall","src":"6959:73:7"},"nodeType":"YulExpressionStatement","src":"6959:73:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7052:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7060:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7048:3:7"},"nodeType":"YulFunctionCall","src":"7048:15:7"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7097:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7108:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7093:3:7"},"nodeType":"YulFunctionCall","src":"7093:18:7"}],"functionName":{"name":"abi_decode_int32_fromMemory","nodeType":"YulIdentifier","src":"7065:27:7"},"nodeType":"YulFunctionCall","src":"7065:47:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7041:6:7"},"nodeType":"YulFunctionCall","src":"7041:72:7"},"nodeType":"YulExpressionStatement","src":"7041:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7133:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7141:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7129:3:7"},"nodeType":"YulFunctionCall","src":"7129:15:7"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7156:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7167:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7152:3:7"},"nodeType":"YulFunctionCall","src":"7152:18:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7146:5:7"},"nodeType":"YulFunctionCall","src":"7146:25:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7122:6:7"},"nodeType":"YulFunctionCall","src":"7122:50:7"},"nodeType":"YulExpressionStatement","src":"7122:50:7"},{"nodeType":"YulAssignment","src":"7181:16:7","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7191:6:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7181:6:7"}]}]},"name":"abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6417:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6428:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6440:6:7","type":""}],"src":"6348:855:7"},{"body":{"nodeType":"YulBlock","src":"7257:79:7","statements":[{"nodeType":"YulAssignment","src":"7267:17:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7279:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"7282:1:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7275:3:7"},"nodeType":"YulFunctionCall","src":"7275:9:7"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7267:4:7"}]},{"body":{"nodeType":"YulBlock","src":"7308:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7310:16:7"},"nodeType":"YulFunctionCall","src":"7310:18:7"},"nodeType":"YulExpressionStatement","src":"7310:18:7"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7299:4:7"},{"name":"x","nodeType":"YulIdentifier","src":"7305:1:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7296:2:7"},"nodeType":"YulFunctionCall","src":"7296:11:7"},"nodeType":"YulIf","src":"7293:37:7"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7239:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"7242:1:7","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7248:4:7","type":""}],"src":"7208:128:7"},{"body":{"nodeType":"YulBlock","src":"7388:167:7","statements":[{"nodeType":"YulAssignment","src":"7398:47:7","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7421:1:7","type":"","value":"7"},{"name":"x","nodeType":"YulIdentifier","src":"7424:1:7"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7410:10:7"},"nodeType":"YulFunctionCall","src":"7410:16:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7439:1:7","type":"","value":"7"},{"name":"y","nodeType":"YulIdentifier","src":"7442:1:7"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7428:10:7"},"nodeType":"YulFunctionCall","src":"7428:16:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7406:3:7"},"nodeType":"YulFunctionCall","src":"7406:39:7"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7398:4:7"}]},{"body":{"nodeType":"YulBlock","src":"7527:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7529:16:7"},"nodeType":"YulFunctionCall","src":"7529:18:7"},"nodeType":"YulExpressionStatement","src":"7529:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7464:4:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7474:18:7","type":"","value":"0x7fffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7470:3:7"},"nodeType":"YulFunctionCall","src":"7470:23:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7460:3:7"},"nodeType":"YulFunctionCall","src":"7460:34:7"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7500:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"7506:18:7","type":"","value":"0x7fffffffffffffff"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"7496:3:7"},"nodeType":"YulFunctionCall","src":"7496:29:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7457:2:7"},"nodeType":"YulFunctionCall","src":"7457:69:7"},"nodeType":"YulIf","src":"7454:95:7"}]},"name":"checked_sub_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7370:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"7373:1:7","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7379:4:7","type":""}],"src":"7341:214:7"},{"body":{"nodeType":"YulBlock","src":"7612:116:7","statements":[{"nodeType":"YulAssignment","src":"7622:20:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7637:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"7640:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7633:3:7"},"nodeType":"YulFunctionCall","src":"7633:9:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7622:7:7"}]},{"body":{"nodeType":"YulBlock","src":"7700:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7702:16:7"},"nodeType":"YulFunctionCall","src":"7702:18:7"},"nodeType":"YulExpressionStatement","src":"7702:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7671:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7664:6:7"},"nodeType":"YulFunctionCall","src":"7664:9:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7678:1:7"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7685:7:7"},{"name":"x","nodeType":"YulIdentifier","src":"7694:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7681:3:7"},"nodeType":"YulFunctionCall","src":"7681:15:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7675:2:7"},"nodeType":"YulFunctionCall","src":"7675:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7661:2:7"},"nodeType":"YulFunctionCall","src":"7661:37:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7654:6:7"},"nodeType":"YulFunctionCall","src":"7654:45:7"},"nodeType":"YulIf","src":"7651:71:7"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7591:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"7594:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7600:7:7","type":""}],"src":"7560:168:7"},{"body":{"nodeType":"YulBlock","src":"7779:171:7","statements":[{"body":{"nodeType":"YulBlock","src":"7810:111:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7831:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7838:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7843:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7834:3:7"},"nodeType":"YulFunctionCall","src":"7834:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7824:6:7"},"nodeType":"YulFunctionCall","src":"7824:31:7"},"nodeType":"YulExpressionStatement","src":"7824:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7875:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7878:4:7","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7868:6:7"},"nodeType":"YulFunctionCall","src":"7868:15:7"},"nodeType":"YulExpressionStatement","src":"7868:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7903:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7906:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7896:6:7"},"nodeType":"YulFunctionCall","src":"7896:15:7"},"nodeType":"YulExpressionStatement","src":"7896:15:7"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7799:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7792:6:7"},"nodeType":"YulFunctionCall","src":"7792:9:7"},"nodeType":"YulIf","src":"7789:132:7"},{"nodeType":"YulAssignment","src":"7930:14:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7939:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"7942:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7935:3:7"},"nodeType":"YulFunctionCall","src":"7935:9:7"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7930:1:7"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7764:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"7767:1:7","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7773:1:7","type":""}],"src":"7733:217:7"},{"body":{"nodeType":"YulBlock","src":"7987:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8004:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8011:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8016:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8007:3:7"},"nodeType":"YulFunctionCall","src":"8007:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7997:6:7"},"nodeType":"YulFunctionCall","src":"7997:31:7"},"nodeType":"YulExpressionStatement","src":"7997:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8044:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8047:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8037:6:7"},"nodeType":"YulFunctionCall","src":"8037:15:7"},"nodeType":"YulExpressionStatement","src":"8037:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8068:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8071:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8061:6:7"},"nodeType":"YulFunctionCall","src":"8061:15:7"},"nodeType":"YulExpressionStatement","src":"8061:15:7"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7955:127:7"},{"body":{"nodeType":"YulBlock","src":"8208:427:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8218:12:7","value":{"kind":"number","nodeType":"YulLiteral","src":"8228:2:7","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8222:2:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8246:9:7"},{"name":"_1","nodeType":"YulIdentifier","src":"8257:2:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8239:6:7"},"nodeType":"YulFunctionCall","src":"8239:21:7"},"nodeType":"YulExpressionStatement","src":"8239:21:7"},{"nodeType":"YulVariableDeclaration","src":"8269:27:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8289:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8283:5:7"},"nodeType":"YulFunctionCall","src":"8283:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8273:6:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8316:9:7"},{"name":"_1","nodeType":"YulIdentifier","src":"8327:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8312:3:7"},"nodeType":"YulFunctionCall","src":"8312:18:7"},{"name":"length","nodeType":"YulIdentifier","src":"8332:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8305:6:7"},"nodeType":"YulFunctionCall","src":"8305:34:7"},"nodeType":"YulExpressionStatement","src":"8305:34:7"},{"nodeType":"YulVariableDeclaration","src":"8348:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"8357:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8352:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"8417:90:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8446:9:7"},{"name":"i","nodeType":"YulIdentifier","src":"8457:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8442:3:7"},"nodeType":"YulFunctionCall","src":"8442:17:7"},{"kind":"number","nodeType":"YulLiteral","src":"8461:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8438:3:7"},"nodeType":"YulFunctionCall","src":"8438:26:7"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8480:6:7"},{"name":"i","nodeType":"YulIdentifier","src":"8488:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8476:3:7"},"nodeType":"YulFunctionCall","src":"8476:14:7"},{"name":"_1","nodeType":"YulIdentifier","src":"8492:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8472:3:7"},"nodeType":"YulFunctionCall","src":"8472:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8466:5:7"},"nodeType":"YulFunctionCall","src":"8466:30:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8431:6:7"},"nodeType":"YulFunctionCall","src":"8431:66:7"},"nodeType":"YulExpressionStatement","src":"8431:66:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8378:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"8381:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8375:2:7"},"nodeType":"YulFunctionCall","src":"8375:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8389:19:7","statements":[{"nodeType":"YulAssignment","src":"8391:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8400:1:7"},{"name":"_1","nodeType":"YulIdentifier","src":"8403:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8396:3:7"},"nodeType":"YulFunctionCall","src":"8396:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8391:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"8371:3:7","statements":[]},"src":"8367:140:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8531:9:7"},{"name":"length","nodeType":"YulIdentifier","src":"8542:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8527:3:7"},"nodeType":"YulFunctionCall","src":"8527:22:7"},{"kind":"number","nodeType":"YulLiteral","src":"8551:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8523:3:7"},"nodeType":"YulFunctionCall","src":"8523:31:7"},{"kind":"number","nodeType":"YulLiteral","src":"8556:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8516:6:7"},"nodeType":"YulFunctionCall","src":"8516:42:7"},"nodeType":"YulExpressionStatement","src":"8516:42:7"},{"nodeType":"YulAssignment","src":"8567:62:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8583:9:7"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8602:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8610:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8598:3:7"},"nodeType":"YulFunctionCall","src":"8598:15:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8619:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8615:3:7"},"nodeType":"YulFunctionCall","src":"8615:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8594:3:7"},"nodeType":"YulFunctionCall","src":"8594:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8579:3:7"},"nodeType":"YulFunctionCall","src":"8579:45:7"},{"kind":"number","nodeType":"YulLiteral","src":"8626:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8575:3:7"},"nodeType":"YulFunctionCall","src":"8575:54:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8567:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8177:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8188:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8199:4:7","type":""}],"src":"8087:548:7"}]},"contents":"{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$503_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_MetricStatus(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        abi_encode_enum_MetricStatus(value4, add(headStart, 128))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$506_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        abi_encode_enum_MetricStatus(value5, add(headStart, 160))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"InFavor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Against\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_int32_fromMemory(add(headStart, 64)))\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        value0 := memPtr\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_sub_t_int64(x, y) -> diff\n    {\n        diff := sub(signextend(7, x), signextend(7, y))\n        if or(slt(diff, not(0x7fffffffffffffff)), sgt(diff, 0x7fffffffffffffff)) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"544":[{"length":32,"start":1180},{"length":32,"start":3321}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xB8141810 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xBAC03CD7 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xDC6E4495 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x48A JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x7776EAB6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7CABD293 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x7FE09C7D EQ PUSH2 0x3C2 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3937066C GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x3937066C EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x582BD8F1 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5AF01B91 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x6D9AAC62 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x6EC1B041 EQ PUSH2 0x33A JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4B8BA5B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9EEA131 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x13F2721B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1547D5C6 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x312C9E87 EQ PUSH2 0x22D JUMPI PUSH2 0x158 JUMP JUMPDEST CALLDATASIZE PUSH2 0x158 JUMPI CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x4D0 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x51A JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 ISZERO DUP1 PUSH2 0x580 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x5E6 JUMPI POP PUSH1 0x0 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E4 PUSH2 0x1398 JUMP JUMPDEST EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x2710 DUP5 GT DUP1 PUSH2 0x628 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE SWAP1 DUP2 ADD DUP9 SWAP1 SSTORE DUP1 DUP5 ADD DUP8 SWAP1 SSTORE TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP7 SWAP1 SSTORE DUP4 SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x692 DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x476F7BDB10D30E2DE6D06E5D144C76D3963482C10F097A5048C401C84D1A1025 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 POP PUSH2 0x6E8 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x11EC JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD1C8867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72C PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x77B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 ISZERO DUP1 PUSH2 0x7BA JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP7 DUP8 MSTORE POP POP PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 DUP1 SLOAD SWAP6 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 SWAP1 SWAP7 ADD SLOAD SWAP11 SWAP12 SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP2 SWAP8 POP PUSH1 0xFF AND SWAP6 POP SWAP4 POP SWAP1 JUMP JUMPDEST PUSH2 0x82F PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x83F JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x881 SWAP2 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 SWAP5 MLOAD SWAP10 SWAP1 SWAP9 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND SWAP9 SWAP1 SWAP9 OR DUP9 SSTORE MLOAD SWAP7 SWAP1 SWAP6 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x9A7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x9BC PUSH1 0x0 PUSH2 0x1243 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x9D6 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0xA18 SWAP2 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5F PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE SWAP9 DUP8 SWAP1 KECCAK256 SWAP4 MLOAD SWAP9 SWAP1 SWAP8 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP8 SSTORE SWAP1 MLOAD SWAP6 SWAP1 SWAP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x11EC JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC3869FC4914CAA4E69064C93DC69CE5B5B73DA5A26717B551E7B6B23F2DB9B1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB99 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0xBAD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x1219 JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0xBFF JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0x1398 JUMP JUMPDEST EQ PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33121279 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x96834AD3 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND SGT PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST GT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E0942D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH1 0x0 DUP2 PUSH2 0xDE4 JUMPI DUP8 PUSH1 0x8 ADD PUSH2 0xDE9 JUMP JUMPDEST DUP8 PUSH1 0x7 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xDFB JUMPI DUP9 PUSH1 0x7 ADD PUSH2 0xE00 JUMP JUMPDEST DUP9 PUSH1 0x8 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL DUP2 MSTORE POP PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x4 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST DUP12 PUSH1 0x6 ADD SLOAD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE86 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xF04 JUMPI PUSH1 0x0 DUP14 PUSH1 0x4 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP16 PUSH1 0x3 ADD SLOAD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH2 0xEED DUP2 DUP6 PUSH2 0x12AB JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xEFC SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE8F JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 DUP14 PUSH1 0x4 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF30 JUMPI PUSH2 0xF30 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP16 PUSH1 0x3 ADD SLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH2 0xF6F DUP8 DUP5 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1091 JUMPI DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAE PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1040 JUMPI PUSH2 0x1040 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x109F SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x5 DUP12 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP15 SWAP1 PUSH32 0x579E7F72F41084C4072560A3D26FFA8C9361DEBCA741683EE5F7F2CF9A461A53 SWAP1 PUSH2 0x10EC SWAP1 DUP6 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x9A7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x111D JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD DUP3 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x51A JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12FA JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x13CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP DUP10 DUP3 MSTORE DUP9 PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP7 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13FB PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x13AE JUMP JUMPDEST DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP3 PUSH1 0xE0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD PUSH2 0x1452 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x13AE JUMP JUMPDEST DUP3 PUSH1 0xC0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1480 DUP4 PUSH2 0x1335 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14A0 JUMPI PUSH2 0x14A0 PUSH2 0x1295 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1514 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x1537 PUSH1 0x20 DUP5 ADD PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1548 PUSH1 0x40 DUP5 ADD PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15D4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB NOT DUP15 DUP8 0xBA MOD 0x22 0x4E CALLDATACOPY MSIZE DUP16 DUP4 CREATE2 OR JUMPDEST 0xE8 0xE9 0xD2 LOG2 0xEA JUMPDEST EXTCODECOPY 0xBC SWAP15 0x2C 0xD6 0xAF 0xE4 DUP1 0xF6 PUSH15 0x2B64736F6C63430008140033000000 ","sourceMap":"497:14302:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14693:9;14669:20;;:33;;;;;;;:::i;:::-;;;;;;;;497:14302;14781:9;14757:20;;:33;;;;;;;:::i;11773:202::-;;;;;;;;;;-1:-1:-1;11773:202:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12503:320;;;;;;;;;;-1:-1:-1;12503:320:6;;;;;:::i;:::-;;:::i;:::-;;;1439:14:7;;1432:22;1414:41;;1402:2;1387:18;12503:320:6;1274:187:7;13449:123:6;;;;;;;;;;-1:-1:-1;13449:123:6;;;;;:::i;:::-;;:::i;:::-;;1533:52;;;;;;;;;;-1:-1:-1;1533:52:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1981:25:7;;;1969:2;1954:18;1533:52:6;1835:177:7;3720:918:6;;;;;;:::i;:::-;;:::i;1218:27::-;;;;;;;;;;;;;;;;14062:316;;;;;;;;;;-1:-1:-1;14062:316:6;;;;;:::i;:::-;;:::i;10855:764::-;;;;;;;;;;-1:-1:-1;10855:764:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;1251:31::-;;;;;;;;;;;;;;;;1171:41;;;;;;;;;;-1:-1:-1;1171:41:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1171:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4772:434::-;;;;;;;;;;-1:-1:-1;4772:434:6;;;;;:::i;:::-;;:::i;14476:107::-;;;;;;;;;;-1:-1:-1;14555:21:6;14476:107;;2293:101:0;;;;;;;;;;;;;:::i;5336:442:6:-;;;;;;;;;;-1:-1:-1;5336:442:6;;;;;:::i;:::-;;:::i;13697:239::-;;;;;;;;;;-1:-1:-1;13697:239:6;;;;;:::i;:::-;;:::i;13064:268::-;;;;;;;;;;-1:-1:-1;13064:268:6;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;4714:32:7;;;4696:51;;4684:2;4669:18;1638:85:0;4550:203:7;5933:4334:6;;;;;;;;;;-1:-1:-1;5933:4334:6;;;;;:::i;:::-;;:::i;1355:35::-;;;;;;;;;;;;;;;;12124:202;;;;;;;;;;-1:-1:-1;12124:202:6;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1433:27:6:-;;;;;;;;;;;;;;;11773:202;11899:14;11871:8;2860:13;;;:41;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1;;;2924:16:6;;;;;;;;;;;2856:95;11937:17:::1;::::0;;;:7:::1;:17;::::0;;;;;;;:31:::1;;11930:38:::0;;;;;;::::1;::::0;;;;;;;;;;;;11937:31;;11930:38;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;11930:38:6::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;11773:202:::0;;;;:::o;12503:320::-;12628:4;12600:8;2860:13;;;:41;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1;;;2924:16:6;;;;;;;;;;;2856:95;12649:21:::1;12673:17:::0;;;:7:::1;:17;::::0;;;;12744:15:::1;::::0;::::1;::::0;12725:16:::1;::::0;::::1;::::0;:34:::1;::::0;12744:15;12725:34:::1;:::i;:::-;12707:15;:52;:109;;;;-1:-1:-1::0;12796:20:6::1;12779:13;::::0;::::1;::::0;::::1;;::::0;:37;::::1;;;;;;:::i;:::-;;12707:109;12700:116:::0;12503:320;-1:-1:-1;;;;12503:320:6:o;13449:123::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;13535:30:6::1;;::::0;;;:17:::1;:30;::::0;;;;13528:37;13449:123::o;3720:918::-;3884:7;2500:21:2;:19;:21::i;:::-;3929:5:6::1;3907:19;:27;:44;;;-1:-1:-1::0;3938:13:6;;3907:44:::1;3903:101;;;3974:19;;-1:-1:-1::0;;;3974:19:6::1;;;;;;;;;;;3903:101;4041:12;::::0;;4022:16:::1;4128:17:::0;;;:7:::1;:17;::::0;;;;;;4155:23;;;4188:29;;::::1;:51:::0;;;4249:18;;::::1;:29:::0;;;4310:15:::1;4288:19;::::0;::::1;:37:::0;4335:16:::1;::::0;::::1;:39:::0;;-1:-1:-1;;4335:39:6::1;::::0;;4384:26:::1;::::0;::::1;:45:::0;;;4481:14;;4041:12;;4128:17;;4481:14;::::1;::::0;::::1;:::i;:::-;;;;;;4529:16;4505:20;;:40;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4569:37:6::1;::::0;4595:10:::1;::::0;4585:8;;4569:37:::1;::::0;;;::::1;-1:-1:-1::0;4623:8:6;-1:-1:-1;2542:20:2;1857:1;3068:7;:21;2888:208;2542:20;3720:918:6;;;;;:::o;14062:316::-;1531:13:0;:11;:13::i;:::-;14147:21:6::1;14138:6;:30;14134:89;;;14191:21;;-1:-1:-1::0;;;14191:21:6::1;;;;;;;;;;;14134:89;14242:12;14268:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;14268:7:6::1;-1:-1:-1::0;;;;;14260:21:6::1;14289:6;14260:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14241:59;;;14315:7;14310:62;;14345:16;;-1:-1:-1::0;;;14345:16:6::1;;;;;;;;;;;14310:62;14124:254;14062:316:::0;:::o;10855:764::-;10987:10;;;;;;;;10946:8;2860:13;;;:41;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1;;;2924:16:6;;;;;;;;;;;2856:95;-1:-1:-1;;;11276:21:6::1;11300:17:::0;;;-1:-1:-1;;11300:7:6::1;:17;::::0;;;;;;;11348:9;;11371:26;;::::1;::::0;11411:15:::1;::::0;::::1;::::0;11440:16:::1;::::0;::::1;::::0;11470:13:::1;::::0;::::1;::::0;11497:23:::1;::::0;::::1;::::0;11534:20:::1;::::0;::::1;:27:::0;11575:20:::1;::::0;;::::1;:27:::0;11348:9;;11371:26;;11411:15;;-1:-1:-1;11440:16:6;;-1:-1:-1;11470:13:6::1;;::::0;-1:-1:-1;11497:23:6;-1:-1:-1;11575:27:6;10855:764::o;4772:434::-;2500:21:2;:19;:21::i;:::-;4874:8:6;2860:13;;;:41:::1;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1::0;;;2924:16:6::1;;;;;;;;;;;2856:95;3035:21:::2;3059:17:::0;;;:7:::2;:17;::::0;;;;3128:15:::2;::::0;::::2;::::0;3109:16:::2;::::0;::::2;::::0;4913:8;;3059:17;3109:34:::2;::::0;::::2;:::i;:::-;3090:15;:53;3086:110;;3166:19;;-1:-1:-1::0;;;3166:19:6::2;;;;;;;;;;;3086:110;4944:8:::0;3304:20:::3;3276:17:::0;;;;:7:::3;:17;::::0;;;;:24:::3;;::::0;::::3;;::::0;:48;::::3;;;;;;:::i;:::-;;3272:109;;3347:23;;-1:-1:-1::0;;;3347:23:6::3;;;;;;;;;;;3272:109;4978:21:::4;5002:17:::0;;;:7:::4;:17;::::0;;;;;;;5055:89;;;;::::4;::::0;;5083:10:::4;5055:89:::0;;;5118:15:::4;5055:89:::0;;::::4;::::0;;;5029:20:::4;::::0;;::::4;:116:::0;;::::4;::::0;;::::4;::::0;;;;;;;;;;;;;;::::4;::::0;;::::4;::::0;;-1:-1:-1;;;;;;5029:116:6::4;-1:-1:-1::0;;;;;5029:116:6;;::::4;::::0;;;::::4;::::0;;;;;;::::4;::::0;;;;5160:39;;5513:21:7;;;5550:18;;;5543:29;;;;-1:-1:-1;;;5588:18:7;;;5581:37;5002:17:6;;5160:39:::4;::::0;5650:2:7;5635:18;5160:39:6::4;;;;;;;;4959:247;3205:1:::3;3025:188:::2;2960:1;2531::2::1;2542:20:::0;1857:1;3068:7;:21;2888:208;2542:20;4772:434:6;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5336:442:6:-;2500:21:2;:19;:21::i;:::-;5438:8:6;2860:13;;;:41:::1;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1::0;;;2924:16:6::1;;;;;;;;;;;2856:95;3035:21:::2;3059:17:::0;;;:7:::2;:17;::::0;;;;3128:15:::2;::::0;::::2;::::0;3109:16:::2;::::0;::::2;::::0;5477:8;;3059:17;3109:34:::2;::::0;::::2;:::i;:::-;3090:15;:53;3086:110;;3166:19;;-1:-1:-1::0;;;3166:19:6::2;;;;;;;;;;;3086:110;5508:8:::0;3304:20:::3;3276:17:::0;;;;:7:::3;:17;::::0;;;;:24:::3;;::::0;::::3;;::::0;:48;::::3;;;;;;:::i;:::-;;3272:109;;3347:23;;-1:-1:-1::0;;;3347:23:6::3;;;;;;;;;;;3272:109;5542:21:::4;5566:17:::0;;;:7:::4;:17;::::0;;;;;;;5619:89;;;;::::4;::::0;;5647:10:::4;5619:89:::0;;;5682:15:::4;5619:89:::0;;::::4;::::0;;;5593:20:::4;::::0;::::4;:116:::0;;::::4;::::0;;::::4;::::0;;;;;;;;;;;;;;::::4;::::0;;::::4;::::0;;-1:-1:-1;;;;;;5593:116:6::4;-1:-1:-1::0;;;;;5593:116:6;;::::4;::::0;;;::::4;::::0;;;;;;;::::4;::::0;;;;5732:39;;5848:21:7;;;5905:1;5885:18;;;5878:29;;;;-1:-1:-1;;;5923:18:7;;;5916:37;5566:17:6;;5732:39:::4;::::0;5985:2:7;5970:18;5732:39:6::4;5664:330:7::0;13697:239:6;1531:13:0;:11;:13::i;:::-;13781:9:6::1;13794:1;13781:14:::0;13777:71:::1;;13818:19;;-1:-1:-1::0;;;13818:19:6::1;;;;;;;;;;;13777:71;13857:16;:28:::0;;;13900:29:::1;::::0;1981:25:7;;;13900:29:6::1;::::0;1969:2:7;1954:18;13900:29:6::1;;;;;;;13697:239:::0;:::o;13064:268::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;13165:25:6;::::1;::::0;;:54:::1;;-1:-1:-1::0;13194:25:6;;13165:54:::1;13161:111;;;13242:19;;-1:-1:-1::0;;;13242:19:6::1;;;;;;;;;;;13161:111;-1:-1:-1::0;;;;;13281:30:6;;::::1;;::::0;;;:17:::1;:30;::::0;;;;:44;13064:268::o;5933:4334::-;2500:21:2;:19;:21::i;:::-;6036:8:6;2860:13;;;:41:::1;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1::0;;;2924:16:6::1;;;;;;;;;;;2856:95;6067:8:::0;3304:20:::2;3276:17:::0;;;;:7:::2;:17;::::0;;;;:24:::2;;::::0;::::2;;::::0;:48;::::2;;;;;;:::i;:::-;;3272:109;;3347:23;;-1:-1:-1::0;;;3347:23:6::2;;;;;;;;;;;3272:109;6092:21:::3;6116:17:::0;;;:7:::3;:17;::::0;;;;6236:15:::3;::::0;::::3;::::0;6217:16:::3;::::0;::::3;::::0;:34:::3;::::0;6236:15;6217:34:::3;:::i;:::-;6199:15;:52;6195:109;;;6274:19;;-1:-1:-1::0;;;6274:19:6::3;;;;;;;;;;;6195:109;6405:18;::::0;::::3;::::0;-1:-1:-1;;;;;6405:18:6::3;6365:19;6387:37:::0;;;:17:::3;:37;::::0;;;;;;6434:80:::3;;6486:17;;-1:-1:-1::0;;;6486:17:6::3;;;;;;;;;;;6434:80;6615:32;::::0;-1:-1:-1;;;6615:32:6;;::::3;::::0;::::3;1981:25:7::0;;;6571:41:6::3;::::0;6615:4:::3;-1:-1:-1::0;;;;;6615:19:6::3;::::0;::::3;::::0;1954:18:7;;6615:32:6::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6571:76;;6687:1;6661:16;:22;;;:27;;;6657:79;;6711:14;;-1:-1:-1::0;;;6711:14:6::3;;;;;;;;;;;6657:79;1806:3;6767:16;:28;;;6749:15;:46;;;;:::i;:::-;:74;6745:127;;;6846:15;;-1:-1:-1::0;;;6846:15:6::3;;;;;;;;;;;6745:127;7443:22:::0;;;7808:1:::3;8326:26;::::0;::::3;::::0;8305:47;::::3;;8286:16;8305:47:::0;8394:57:::3;;8431:6;:20;;8394:57;;;8408:6;:20;;8394:57;8362:89;;8461:28;8492:11;:57;;8529:6;:20;;8492:57;;;8506:6;:20;;8492:57;8461:88;;8559:25;8587:11;:35;;;;;;;;;;;;;;;-1:-1:-1::0;;;8587:35:6::3;;::::0;::::3;;;;;;;;;;;;;;;;-1:-1:-1::0;;;8587:35:6::3;;::::0;::::3;8744:16;::::0;8722:19;;8559:63;;-1:-1:-1;8674:18:6::3;::::0;8722:38:::3;::::0;8744:16;8722:38:::3;:::i;:::-;8695:6;:23;;;:66;;;;:::i;:::-;8784:20:::0;;8674:87;;-1:-1:-1;8784:24:6;;;;:42:::3;;;8825:1;8812:10;:14;8784:42;8780:1329;;;8913:22;8958:9:::0;8953:263:::3;8977:20:::0;;8973:24;::::3;8953:263;;;9022:19;9073:6;:16;;;9044:13;9058:1;9044:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:45;;;;:::i;:::-;9022:67;;9107:17;9145:11;9127:6;:15;;;:29;;;;:::i;:::-;9107:49:::0;-1:-1:-1;9174:27:6::3;9107:49:::0;9174:27;::::3;:::i;:::-;;;9004:212;;8999:3;;;;;:::i;:::-;;;;8953:263;;;-1:-1:-1::0;9299:18:6;;9295:804:::3;;9342:9;9337:748;9361:20:::0;;9357:24;::::3;9337:748;;;9410:19;9461:6;:16;;;9432:13;9446:1;9432:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:45;;;;:::i;:::-;9410:67;;9499:17;9537:11;9519:6;:15;;;:29;;;;:::i;:::-;9499:49:::0;-1:-1:-1;9570:14:6::3;9614::::0;9588:22:::3;9600:10:::0;9499:49;9588:22:::3;:::i;:::-;9587:41;;;;:::i;:::-;9570:58:::0;-1:-1:-1;9675:10:6;;9671:396:::3;;9737:6;9713:20;;:30;;;;;;;:::i;:::-;;;;;;;;9770:12;9796:13;9810:1;9796:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;::::3;::::0;;::::3;;:23:::0;9788:56:::3;::::0;-1:-1:-1;;;;;9796:23:6;;::::3;::::0;9833:6;;9788:56;;9796:16;9788:56;9833:6;9796:23;9788:56:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9769:75;;;9875:7;9870:94;;9921:16;;-1:-1:-1::0;;;9921:16:6::3;;;;;;;;;;;9870:94;10012:13;10026:1;10012:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;::::3;::::0;;::::3;;:23:::0;9994:50:::3;::::0;1981:25:7;;;-1:-1:-1;;;;;10012:23:6;;::::3;::::0;9994:50:::3;::::0;1954:18:7;9994:50:6::3;;;;;;;9687:380;9671:396;9388:697;;;9383:3;;;;;:::i;:::-;;;;9337:748;;;;9295:804;8828:1281;8780:1329;10162:13;::::0;::::3;:37:::0;;-1:-1:-1;;10162:37:6::3;10178:21;10162:37;::::0;;10223::::3;::::0;10238:8;;10223:37:::3;::::0;::::3;::::0;10248:11;;10223:37:::3;:::i;:::-;;;;;;;;6082:4185;;;;;;;;;;;2960:1:::2;2531::2::1;2542:20:::0;1857:1;3068:7;:21;2888:208;12124:202:6;12250:14;12222:8;2860:13;;;:41;;;2889:12;;2877:8;:24;;2860:41;2856:95;;;2924:16;;-1:-1:-1;;;2924:16:6;;;;;;;;;;;2856:95;12288:17:::1;::::0;;;:7:::1;:17;::::0;;;;;;;:31:::1;;12281:38:::0;;;;;;::::1;::::0;;;;;;;;;;;;12288:31;;12281:38;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;12281:38:6::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;;2543:215:0::0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4696:51:7::0;4669:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;4696:51:7;4669:18;;1901:40:0;4550:203:7;2575:307:2;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:2;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;:::-;146:125;;;;:::o;276:180::-;335:6;388:2;376:9;367:7;363:23;359:32;356:52;;;404:1;401;394:12;356:52;-1:-1:-1;427:23:7;;276:180;-1:-1:-1;276:180:7:o;461:808::-;676:2;728:21;;;798:13;;701:18;;;820:22;;;647:4;;676:2;861;;879:18;;;;920:15;;;647:4;963:280;977:6;974:1;971:13;963:280;;;1036:13;;1078:9;;-1:-1:-1;;;;;1074:35:7;1062:48;;1150:11;;1144:18;1130:12;;;1123:40;1183:12;;;;1218:15;;;;1106:1;992:9;963:280;;;-1:-1:-1;1260:3:7;;461:808;-1:-1:-1;;;;;;;461:808:7:o;1466:173::-;1534:20;;-1:-1:-1;;;;;1583:31:7;;1573:42;;1563:70;;1629:1;1626;1619:12;1563:70;1466:173;;;:::o;1644:186::-;1703:6;1756:2;1744:9;1735:7;1731:23;1727:32;1724:52;;;1772:1;1769;1762:12;1724:52;1795:29;1814:9;1795:29;:::i;2017:316::-;2094:6;2102;2110;2163:2;2151:9;2142:7;2138:23;2134:32;2131:52;;;2179:1;2176;2169:12;2131:52;-1:-1:-1;;2202:23:7;;;2272:2;2257:18;;2244:32;;-1:-1:-1;2323:2:7;2308:18;;;2295:32;;2017:316;-1:-1:-1;2017:316:7:o;2520:127::-;2581:10;2576:3;2572:20;2569:1;2562:31;2612:4;2609:1;2602:15;2636:4;2633:1;2626:15;2652:240;2736:1;2729:5;2726:12;2716:143;;2781:10;2776:3;2772:20;2769:1;2762:31;2816:4;2813:1;2806:15;2844:4;2841:1;2834:15;2716:143;2868:18;;2652:240::o;2897:715::-;3199:4;3241:3;3230:9;3226:19;3218:27;;3272:6;3261:9;3254:25;3315:6;3310:2;3299:9;3295:18;3288:34;3358:6;3353:2;3342:9;3338:18;3331:34;3401:6;3396:2;3385:9;3381:18;3374:34;3417:57;3469:3;3458:9;3454:19;3446:6;3417:57;:::i;:::-;3511:6;3505:3;3494:9;3490:19;3483:35;3555:6;3549:3;3538:9;3534:19;3527:35;3599:6;3593:3;3582:9;3578:19;3571:35;2897:715;;;;;;;;;;;:::o;3617:669::-;3946:25;;;-1:-1:-1;;;;;4007:32:7;;4002:2;3987:18;;3980:60;4071:2;4056:18;;4049:34;;;4114:2;4099:18;;4092:34;;;4157:3;4142:19;;4135:35;;;3933:3;3918:19;;4179:57;4027:3;4216:19;;4208:6;4179:57;:::i;:::-;4273:6;4267:3;4256:9;4252:19;4245:35;3617:669;;;;;;;;;;:::o;4291:254::-;4359:6;4367;4420:2;4408:9;4399:7;4395:23;4391:32;4388:52;;;4436:1;4433;4426:12;4388:52;4459:29;4478:9;4459:29;:::i;:::-;4449:39;4535:2;4520:18;;;;4507:32;;-1:-1:-1;;;4291:254:7:o;4979:135::-;5018:3;5039:17;;;5036:43;;5059:18;;:::i;:::-;-1:-1:-1;5106:1:7;5095:13;;4979:135::o;5999:175::-;6077:13;;6130:18;6119:30;;6109:41;;6099:69;;6164:1;6161;6154:12;6179:164;6256:13;;6309:1;6298:20;;;6288:31;;6278:59;;6333:1;6330;6323:12;6348:855;6440:6;6493:3;6481:9;6472:7;6468:23;6464:33;6461:53;;;6510:1;6507;6500:12;6461:53;6543:2;6537:9;6585:3;6577:6;6573:16;6655:6;6643:10;6640:22;6619:18;6607:10;6604:34;6601:62;6598:185;;;6705:10;6700:3;6696:20;6693:1;6686:31;6740:4;6737:1;6730:15;6768:4;6765:1;6758:15;6598:185;6799:2;6792:22;6836:16;;6892:1;6881:20;;;6871:31;;6861:59;;6916:1;6913;6906:12;6861:59;6929:21;;6983:48;7027:2;7012:18;;6983:48;:::i;:::-;6978:2;6970:6;6966:15;6959:73;7065:47;7108:2;7097:9;7093:18;7065:47;:::i;:::-;7060:2;7052:6;7048:15;7041:72;7167:2;7156:9;7152:18;7146:25;7141:2;7133:6;7129:15;7122:50;7191:6;7181:16;;;6348:855;;;;:::o;7208:128::-;7275:9;;;7296:11;;;7293:37;;;7310:18;;:::i;7560:168::-;7633:9;;;7664;;7681:15;;;7675:22;;7661:37;7651:71;;7702:18;;:::i;7733:217::-;7773:1;7799;7789:132;;7843:10;7838:3;7834:20;7831:1;7824:31;7878:4;7875:1;7868:15;7906:4;7903:1;7896:15;7789:132;-1:-1:-1;7935:9:7;;7733:217::o;7955:127::-;8016:10;8011:3;8007:20;8004:1;7997:31;8047:4;8044:1;8037:15;8071:4;8068:1;8061:15;8087:548;8199:4;8228:2;8257;8246:9;8239:21;8289:6;8283:13;8332:6;8327:2;8316:9;8312:18;8305:34;8357:1;8367:140;8381:6;8378:1;8375:13;8367:140;;;8476:14;;;8472:23;;8466:30;8442:17;;;8461:2;8438:26;8431:66;8396:10;;8367:140;;;8371:3;8556:1;8551:2;8542:6;8531:9;8527:22;8523:31;8516:42;8626:2;8619;8615:7;8610:2;8602:6;8598:15;8594:29;8583:9;8579:45;8575:54;8567:62;;;;8087:548;;;;:::o"},"methodIdentifiers":{"coinToPriceFeedId(address)":"1547d5c6","emergencyWithdraw(uint256)":"5312ea8e","fixedStakeAmount()":"5af01b91","getContractBalance()":"6f9fb98a","getMetric(uint256)":"582bd8f1","getStakesAgainst(uint256)":"dc6e4495","getStakesInFavor(uint256)":"04b8ba5b","isStakingActive(uint256)":"09eea131","metrics(uint256)":"6d9aac62","nextMetricID()":"3937066c","owner()":"8da5cb5b","pyth()":"f98d06f0","removeSupportedCoin(address)":"13f2721b","renounceOwnership()":"715018a6","resolveMetric(uint256)":"b8141810","setSupportedCoin(address,bytes32)":"7fe09c7d","stakeAgainst(uint256)":"7776eab6","stakeInFavor(uint256)":"6ec1b041","submitMetric(uint256,uint256,uint256)":"312c9e87","totalContractBalance()":"bac03cd7","transferOwnership(address)":"f2fde38b","updateFixedStakeAmount(uint256)":"7cabd293"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fixedStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientUpdateFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MetricAlreadyResolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MetricNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingPeriodOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedCoin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winningSide\",\"type\":\"string\"}],\"name\":\"MetricResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"MetricSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"StakeAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"side\",\"type\":\"string\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinToPriceFeedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getMetric\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum MetricChallengeDAO.MetricStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakesInFavorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakesAgainstCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getStakesAgainst\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MetricChallengeDAO.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getStakesInFavor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MetricChallengeDAO.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"isStakingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metrics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum MetricChallengeDAO.MetricStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMetricID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddress\",\"type\":\"address\"}],\"name\":\"removeSupportedCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"resolveMetric\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceFeedId\",\"type\":\"bytes32\"}],\"name\":\"setSupportedCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"stakeAgainst\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"stakeInFavor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"}],\"name\":\"submitMetric\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateFixedStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A decentralized prediction market for metrics with staking mechanisms\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdraw function (only owner)\",\"params\":{\"amount\":\"Amount to withdraw in wei\"}},\"getContractBalance()\":{\"details\":\"Get contract balance\",\"returns\":{\"_0\":\"Contract balance in wei\"}},\"getMetric(uint256)\":{\"details\":\"Get metric details\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"bountyCollateral\":\"Bounty collateral amount\",\"duration\":\"Duration of staking period in seconds\",\"expectedLossPercent\":\"Expected loss percentage in basis points\",\"id\":\"The metric ID\",\"stakesAgainstCount\":\"Number of stakes against\",\"stakesInFavorCount\":\"Number of stakes in favor\",\"startTime\":\"Start timestamp of the metric\",\"status\":\"Current status of the metric\"}},\"getStakesAgainst(uint256)\":{\"details\":\"Get stakes against a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"Array of stakes against\"}},\"getStakesInFavor(uint256)\":{\"details\":\"Get stakes in favor of a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"Array of stakes in favor\"}},\"isStakingActive(uint256)\":{\"details\":\"Check if staking period is active for a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"True if staking period is active\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeSupportedCoin(address)\":{\"details\":\"Remove a supported coin\",\"params\":{\"coinAddress\":\"Token contract address to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolveMetric(uint256)\":{\"details\":\"Resolve a metric using Pyth price data and distribute rewards\",\"params\":{\"metricID\":\"The ID of the metric to resolve\"}},\"setSupportedCoin(address,bytes32)\":{\"details\":\"Add or update a supported coin with its Pyth price feed ID\",\"params\":{\"coinAddress\":\"Token contract address\",\"priceFeedId\":\"Pyth price feed ID for this coin\"}},\"stakeAgainst(uint256)\":{\"details\":\"Stake against a metric's prediction\",\"params\":{\"metricID\":\"The ID of the metric to stake on\"}},\"stakeInFavor(uint256)\":{\"details\":\"Stake in favor of a metric's prediction\",\"params\":{\"metricID\":\"The ID of the metric to stake on\"}},\"submitMetric(uint256,uint256,uint256)\":{\"details\":\"Submit a new metric for prediction\",\"params\":{\"duration\":\"Duration of staking period in seconds\",\"expectedLossPercent\":\"Expected loss percentage in basis points (e.g., 1000 = 10%)\"},\"returns\":{\"_0\":\"metricID The ID of the newly created metric\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFixedStakeAmount(uint256)\":{\"details\":\"Update the fixed stake amount (only owner)\",\"params\":{\"newAmount\":\"New stake amount in wei\"}}},\"title\":\"MetricChallengeDAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetricChallengeDAO.sol\":\"MetricChallengeDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"contracts/MetricChallengeDAO.sol\":{\"keccak256\":\"0x6ea349dd03738029dd6db0c83795a4c3b5a832b1a04fedcd0c2fd54f64cc76b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4407347666e9b2c49206861f6f593c43aff8d886e4eb2cdaab50e8668954a2\",\"dweb:/ipfs/QmcmRa7Cy7Aym4xWPCVzkuqwTn9rsDt6R65JCzWVCaqN7K\"]}},\"version\":1}"}}}}}