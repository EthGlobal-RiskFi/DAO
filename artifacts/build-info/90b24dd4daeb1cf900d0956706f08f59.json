{"id":"90b24dd4daeb1cf900d0956706f08f59","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"},"contracts/MetricChallengeDAO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title MetricChallengeDAO\n * @dev A decentralized prediction market for metrics with staking mechanisms\n * @notice Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing\n */\ncontract MetricChallengeDAO is ReentrancyGuard, Ownable {\n    \n    // --- Data Structures ---\n    \n    struct Stake {\n        address staker;\n        uint256 timestamp;\n    }\n    \n    enum MetricStatus {\n        Pending,\n        Resolved\n    }\n    \n    struct Metric {\n        uint256 id;\n        uint256 expectedLossPercent; // Stored as basis points (e.g., 1000 = 10%)\n        uint256 duration;\n        uint256 startTime;\n        MetricStatus status;\n        uint256 bountyCollateral;\n        Stake[] stakesInFavor;\n        Stake[] stakesAgainst;\n    }\n    \n    // --- State Variables ---\n    \n    mapping(uint256 => Metric) public metrics;\n    uint256 public nextMetricID;\n    uint256 public fixedStakeAmount; // Fixed stake amount in wei\n    \n    // Contract balance tracking\n    uint256 public totalContractBalance;\n    \n    // --- Events ---\n    \n    event MetricSubmitted(uint256 indexed metricID, address indexed submitter);\n    event Staked(uint256 indexed metricID, address indexed staker, string side);\n    event MetricResolved(uint256 indexed metricID, string winningSide);\n    event RewardDistributed(address indexed staker, uint256 amount);\n    event StakeAmountUpdated(uint256 newAmount);\n    \n    // --- Errors ---\n    \n    error MetricNotFound();\n    error StakingPeriodOver();\n    error MetricAlreadyResolved();\n    error InsufficientPayment();\n    error TransferFailed();\n    error InvalidParameters();\n    \n    // --- Constructor ---\n    \n    constructor(uint256 _fixedStakeAmount) Ownable(msg.sender) {\n        nextMetricID = 1;\n        fixedStakeAmount = _fixedStakeAmount;\n    }\n    \n    // --- Modifiers ---\n    \n    modifier metricExists(uint256 metricID) {\n        if (metricID == 0 || metricID >= nextMetricID) {\n            revert MetricNotFound();\n        }\n        _;\n    }\n    \n    modifier stakingPeriodActive(uint256 metricID) {\n        Metric storage metric = metrics[metricID];\n        if (block.timestamp >= metric.startTime + metric.duration) {\n            revert StakingPeriodOver();\n        }\n        _;\n    }\n    \n    modifier onlyPending(uint256 metricID) {\n        if (metrics[metricID].status != MetricStatus.Pending) {\n            revert MetricAlreadyResolved();\n        }\n        _;\n    }\n    \n    // --- Main Functions ---\n    \n    /**\n     * @dev Submit a new metric for prediction\n     * @param expectedLossPercent Expected loss percentage in basis points (e.g., 1000 = 10%)\n     * @param duration Duration of staking period in seconds\n     * @return metricID The ID of the newly created metric\n     */\n    function submitMetric(\n        uint256 expectedLossPercent,\n        uint256 duration,\n        uint256 bountyCollateral\n    ) external payable nonReentrant returns (uint256) {\n        if (expectedLossPercent > 10000 || duration == 0) {\n            revert InvalidParameters();\n        }\n        \n        uint256 metricID = nextMetricID;\n        \n        // Create new metric\n        Metric storage newMetric = metrics[metricID];\n        newMetric.id = metricID;\n        newMetric.expectedLossPercent = expectedLossPercent;\n        newMetric.duration = duration;\n        newMetric.startTime = block.timestamp;\n        newMetric.status = MetricStatus.Pending;\n        newMetric.bountyCollateral = bountyCollateral;\n        \n        // Update contract state\n        nextMetricID++;\n        totalContractBalance += bountyCollateral;\n        \n        emit MetricSubmitted(metricID, msg.sender);\n        return metricID;\n    }\n    \n    /**\n     * @dev Stake in favor of a metric's prediction\n     * @param metricID The ID of the metric to stake on\n     */\n    function stakeInFavor(uint256 metricID) \n        external \n        nonReentrant \n        metricExists(metricID) \n        stakingPeriodActive(metricID) \n        onlyPending(metricID) \n    {\n        \n        Metric storage metric = metrics[metricID];\n        metric.stakesInFavor.push(Stake({\n            staker: msg.sender,\n            timestamp: block.timestamp\n        }));\n        emit Staked(metricID, msg.sender, \"InFavor\");\n    }\n    \n    /**\n     * @dev Stake against a metric's prediction\n     * @param metricID The ID of the metric to stake on\n     */\n    function stakeAgainst(uint256 metricID) \n        external \n        nonReentrant \n        metricExists(metricID) \n        stakingPeriodActive(metricID) \n        onlyPending(metricID) \n    {\n        \n        Metric storage metric = metrics[metricID];\n        metric.stakesAgainst.push(Stake({\n            staker: msg.sender,\n            timestamp: block.timestamp\n        }));        \n        emit Staked(metricID, msg.sender, \"Against\");\n    }\n    \n    /**\n     * @dev Resolve a metric and distribute rewards\n     * @param metricID The ID of the metric to resolve\n     * @param actualLossPercent The actual loss percentage in basis points\n     */\n    function resolveMetric(uint256 metricID, uint256 actualLossPercent) \n        external \n        onlyOwner \n        nonReentrant \n        metricExists(metricID) \n        onlyPending(metricID) \n    {\n        if (actualLossPercent > 10000) {\n            revert InvalidParameters();\n        }\n        \n        Metric storage metric = metrics[metricID];\n        \n        // Determine winning side\n        bool inFavorWins = actualLossPercent >= metric.expectedLossPercent;\n        Stake[] storage winningStakes = inFavorWins ? metric.stakesInFavor : metric.stakesAgainst;\n        Stake[] storage losingStakes = inFavorWins ? metric.stakesAgainst : metric.stakesInFavor;\n        string memory winningSide = inFavorWins ? \"InFavor\" : \"Against\";\n        \n        // Calculate reward pool\n        uint256 rewardPool = metric.bountyCollateral + (losingStakes.length * fixedStakeAmount);\n        \n        if (winningStakes.length > 0 && rewardPool > 0) {\n            // Calculate total earlyness for proportional distribution\n            uint256 totalEarlyness = 0;\n            for (uint256 i = 0; i < winningStakes.length; i++) {\n                uint256 stakingTime = winningStakes[i].timestamp - metric.startTime;\n                uint256 earlyness = metric.duration - stakingTime;\n                totalEarlyness += earlyness;\n            }\n            \n            // Distribute rewards based on earlyness\n            if (totalEarlyness > 0) {\n                for (uint256 i = 0; i < winningStakes.length; i++) {\n                    uint256 stakingTime = winningStakes[i].timestamp - metric.startTime;\n                    uint256 earlyness = metric.duration - stakingTime;\n                    uint256 reward = (earlyness * rewardPool) / totalEarlyness;\n                    \n                    if (reward > 0) {\n                        totalContractBalance -= reward;\n                        (bool success, ) = payable(winningStakes[i].staker).call{value: reward}(\"\");\n                        if (!success) {\n                            revert TransferFailed();\n                        }\n                        emit RewardDistributed(winningStakes[i].staker, reward);\n                    }\n                }\n            }\n        }\n        \n        // Mark metric as resolved\n        metric.status = MetricStatus.Resolved;\n        \n        emit MetricResolved(metricID, winningSide);\n    }\n    \n    // --- View Functions ---\n    \n    /**\n     * @dev Get metric details\n     * @param metricID The ID of the metric\n     * @return id The metric ID\n     * @return expectedLossPercent Expected loss percentage in basis points\n     * @return duration Duration of staking period in seconds\n     * @return startTime Start timestamp of the metric\n     * @return status Current status of the metric\n     * @return bountyCollateral Bounty collateral amount\n     * @return stakesInFavorCount Number of stakes in favor\n     * @return stakesAgainstCount Number of stakes against\n     */\n    function getMetric(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (\n            uint256 id,\n            uint256 expectedLossPercent,\n            uint256 duration,\n            uint256 startTime,\n            MetricStatus status,\n            uint256 bountyCollateral,\n            uint256 stakesInFavorCount,\n            uint256 stakesAgainstCount\n        ) \n    {\n        Metric storage metric = metrics[metricID];\n        return (\n            metric.id,\n            metric.expectedLossPercent,\n            metric.duration,\n            metric.startTime,\n            metric.status,\n            metric.bountyCollateral,\n            metric.stakesInFavor.length,\n            metric.stakesAgainst.length\n        );\n    }\n    \n    /**\n     * @dev Get stakes in favor of a metric\n     * @param metricID The ID of the metric\n     * @return Array of stakes in favor\n     */\n    function getStakesInFavor(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (Stake[] memory) \n    {\n        return metrics[metricID].stakesInFavor;\n    }\n    \n    /**\n     * @dev Get stakes against a metric\n     * @param metricID The ID of the metric\n     * @return Array of stakes against\n     */\n    function getStakesAgainst(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (Stake[] memory) \n    {\n        return metrics[metricID].stakesAgainst;\n    }\n    \n    /**\n     * @dev Check if staking period is active for a metric\n     * @param metricID The ID of the metric\n     * @return True if staking period is active\n     */\n    function isStakingActive(uint256 metricID) \n        external \n        view \n        metricExists(metricID) \n        returns (bool) \n    {\n        Metric storage metric = metrics[metricID];\n        return block.timestamp < metric.startTime + metric.duration && \n               metric.status == MetricStatus.Pending;\n    }\n    \n    // --- Admin Functions ---\n    \n    /**\n     * @dev Update the fixed stake amount (only owner)\n     * @param newAmount New stake amount in wei\n     */\n    function updateFixedStakeAmount(uint256 newAmount) external onlyOwner {\n        if (newAmount == 0) {\n            revert InvalidParameters();\n        }\n        fixedStakeAmount = newAmount;\n        emit StakeAmountUpdated(newAmount);\n    }\n    \n    /**\n     * @dev Emergency withdraw function (only owner)\n     * @param amount Amount to withdraw in wei\n     */\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        if (amount > address(this).balance) {\n            revert InsufficientPayment();\n        }\n        \n        (bool success, ) = payable(owner()).call{value: amount}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n    \n    /**\n     * @dev Get contract balance\n     * @return Contract balance in wei\n     */\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n    \n    // --- Fallback Functions ---\n    \n    receive() external payable {\n        totalContractBalance += msg.value;\n    }\n    \n    fallback() external payable {\n        totalContractBalance += msg.value;\n    }\n}\n"},"contracts/SimpleShortContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title SimpleShortContract\n * @dev A simple ETH shorting contract using Pyth Network price feeds\n * @notice Users can open short positions on ETH and profit from price decreases\n */\ncontract SimpleShortContract is ReentrancyGuard, Ownable {\n    IPyth public immutable pyth;\n    \n    struct ShortPosition {\n        uint256 collateralAmount;    // ETH collateral provided\n        int64 entryPrice;           // Price when short opened (8 decimals)\n        uint256 timestamp;          // When position opened\n        bool active;               // Position status\n    }\n    \n    mapping(address => ShortPosition) public positions;\n    \n    // Pyth Network configuration for Sepolia\n    address constant PYTH_CONTRACT_SEPOLIA = 0xDd24f84D36bF92C65F92307595C6B99D36b6f8c4;\n    \n    // ETH/USD price feed ID from Pyth Network\n    bytes32 constant ETH_USD_PRICE_ID = 0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace;\n    \n    // Safety parameters\n    uint256 constant PRICE_STALENESS_THRESHOLD = 300; // 5 minutes\n    uint256 constant MAX_PROFIT_PERCENTAGE = 200; // 200% max profit\n    uint256 constant MIN_COLLATERAL = 0.001 ether; // Minimum 0.001 ETH\n    \n    // Events\n    event ShortOpened(address indexed user, uint256 collateral, int64 price, uint256 timestamp);\n    event ShortClosed(address indexed user, int256 pnl, int64 exitPrice, uint256 timestamp);\n    event EmergencyWithdraw(address indexed owner, uint256 amount);\n    \n    // Custom errors\n    error InsufficientCollateral();\n    error PositionAlreadyExists();\n    error NoActivePosition();\n    error InvalidPrice();\n    error PriceTooStale();\n    error TransferFailed();\n    error InsufficientUpdateFee();\n    \n    constructor() Ownable(msg.sender) {\n        pyth = IPyth(PYTH_CONTRACT_SEPOLIA);\n    }\n    \n    /**\n     * @dev Get current ETH price with validation\n     * @return price Current ETH/USD price (8 decimals)\n     * @return timestamp Price publish timestamp\n     */\n    function getCurrentPrice() public view returns (int64 price, uint64 timestamp) {\n        PythStructs.Price memory priceData = pyth.getPriceUnsafe(ETH_USD_PRICE_ID);\n        \n        if (priceData.price <= 0) revert InvalidPrice();\n        if (block.timestamp - priceData.publishTime > PRICE_STALENESS_THRESHOLD) {\n            revert PriceTooStale();\n        }\n        \n        return (priceData.price, uint64(priceData.publishTime));\n    }\n    \n    /**\n     * @dev Open a short position on ETH\n     * @param priceUpdateData Pyth price update data\n     */\n    function openShort(bytes[] calldata priceUpdateData) external payable nonReentrant {\n        if (msg.value < MIN_COLLATERAL) revert InsufficientCollateral();\n        if (positions[msg.sender].active) revert PositionAlreadyExists();\n        \n        // Calculate update fee\n        uint updateFee = pyth.getUpdateFee(priceUpdateData);\n        if (msg.value <= updateFee) revert InsufficientUpdateFee();\n        \n        // Update Pyth price feeds\n        pyth.updatePriceFeeds{value: updateFee}(priceUpdateData);\n        \n        // Get current ETH price with validation\n        (int64 currentPrice, ) = getCurrentPrice();\n        \n        // Calculate actual collateral after update fee\n        uint256 actualCollateral = msg.value - updateFee;\n        \n        // Store position\n        positions[msg.sender] = ShortPosition({\n            collateralAmount: actualCollateral,\n            entryPrice: currentPrice,\n            timestamp: block.timestamp,\n            active: true\n        });\n        \n        emit ShortOpened(msg.sender, actualCollateral, currentPrice, block.timestamp);\n    }\n    \n    /**\n     * @dev Close short position and calculate P&L\n     * @param priceUpdateData Pyth price update data\n     */\n    function closeShort(bytes[] calldata priceUpdateData) external payable nonReentrant {\n        ShortPosition storage position = positions[msg.sender];\n        if (!position.active) revert NoActivePosition();\n        \n        // Calculate update fee\n        uint updateFee = pyth.getUpdateFee(priceUpdateData);\n        if (msg.value < updateFee) revert InsufficientUpdateFee();\n        \n        // Update Pyth price feeds\n        pyth.updatePriceFeeds{value: updateFee}(priceUpdateData);\n        \n        // Get current ETH price with validation\n        (int64 currentPrice, ) = getCurrentPrice();\n        \n        // Calculate P&L: profit if price went down, loss if price went up\n        int256 priceDiff = position.entryPrice - currentPrice;\n        int256 pnlPercentage = (priceDiff * 10000) / position.entryPrice; // Basis points\n        int256 pnl = (int256(position.collateralAmount) * pnlPercentage) / 10000;\n        \n        // Calculate final payout with profit cap\n        uint256 finalPayout = 0;\n        if (pnl > 0) {\n            // Profit: cap at MAX_PROFIT_PERCENTAGE\n            uint256 profit = uint256(pnl);\n            uint256 maxProfit = (position.collateralAmount * MAX_PROFIT_PERCENTAGE) / 100;\n            if (profit > maxProfit) {\n                profit = maxProfit;\n            }\n            finalPayout = position.collateralAmount + profit;\n        } else {\n            // Loss: subtract from collateral\n            uint256 loss = uint256(-pnl);\n            if (loss >= position.collateralAmount) {\n                finalPayout = 0; // Total loss\n            } else {\n                finalPayout = position.collateralAmount - loss;\n            }\n        }\n        \n        // Mark position as closed\n        position.active = false;\n        \n        // Send payout (subtract update fee if any remaining)\n        if (finalPayout > 0) {\n            (bool success, ) = payable(msg.sender).call{value: finalPayout}(\"\");\n            if (!success) revert TransferFailed();\n        }\n        \n        // Refund excess ETH sent for update fee\n        if (msg.value > updateFee) {\n            (bool success, ) = payable(msg.sender).call{value: msg.value - updateFee}(\"\");\n            if (!success) revert TransferFailed();\n        }\n        \n        emit ShortClosed(msg.sender, pnl, currentPrice, block.timestamp);\n    }\n    \n    /**\n     * @dev View current P&L without closing position\n     * @param user Address of the user\n     * @return pnl Current profit/loss in wei\n     * @return currentPrice Current ETH price\n     * @return pnlPercentage P&L as percentage (basis points)\n     */\n    function viewPnL(address user) external view returns (int256 pnl, int64 currentPrice, int256 pnlPercentage) {\n        ShortPosition storage position = positions[user];\n        if (!position.active) revert NoActivePosition();\n        \n        // Get current price (may revert if stale)\n        (currentPrice, ) = getCurrentPrice();\n        \n        // Calculate P&L\n        int256 priceDiff = position.entryPrice - currentPrice;\n        pnlPercentage = (priceDiff * 10000) / position.entryPrice; // Basis points\n        pnl = (int256(position.collateralAmount) * pnlPercentage) / 10000;\n        \n        return (pnl, currentPrice, pnlPercentage);\n    }\n    \n    /**\n     * @dev Get position details for a user\n     * @param user Address of the user\n     * @return position The user's position details\n     */\n    function getPosition(address user) external view returns (ShortPosition memory position) {\n        return positions[user];\n    }\n    \n    /**\n     * @dev Check if user has an active position\n     * @param user Address of the user\n     * @return hasPosition True if user has active position\n     */\n    function hasActivePosition(address user) external view returns (bool hasPosition) {\n        return positions[user].active;\n    }\n    \n    /**\n     * @dev Get the required update fee for price updates\n     * @param priceUpdateData Pyth price update data\n     * @return fee Required fee in wei\n     */\n    function getUpdateFee(bytes[] calldata priceUpdateData) external view returns (uint fee) {\n        return pyth.getUpdateFee(priceUpdateData);\n    }\n    \n    /**\n     * @dev Get contract statistics\n     * @return totalBalance Total ETH balance in contract\n     * @return pythContract Address of Pyth contract\n     * @return priceId ETH/USD price feed ID\n     */\n    function getContractInfo() external view returns (\n        uint256 totalBalance,\n        address pythContract,\n        bytes32 priceId\n    ) {\n        return (\n            address(this).balance,\n            address(pyth),\n            ETH_USD_PRICE_ID\n        );\n    }\n    \n    /**\n     * @dev Emergency withdraw function (owner only)\n     * @param amount Amount to withdraw (0 for all)\n     */\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        uint256 withdrawAmount = amount == 0 ? address(this).balance : amount;\n        require(withdrawAmount <= address(this).balance, \"Insufficient balance\");\n        \n        (bool success, ) = payable(owner()).call{value: withdrawAmount}(\"\");\n        if (!success) revert TransferFailed();\n        \n        emit EmergencyWithdraw(owner(), withdrawAmount);\n    }\n    \n    /**\n     * @dev Receive function to accept ETH\n     */\n    receive() external payable {\n        // Allow contract to receive ETH for price updates and collateral\n    }\n    \n    /**\n     * @dev Fallback function\n     */\n    fallback() external payable {\n        revert(\"Function not found\");\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"135:894:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"ReentrancyGuard","nameLocation":"1048:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":183,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:2","nodeType":"VariableDeclaration","scope":246,"src":"1818:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":186,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1864:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_status","nameLocation":"1923:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1907:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1937:52:2","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":191,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2028:2:2"},"src":"1994:37:2"},{"body":{"id":198,"nodeType":"Block","src":"2051:38:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2071:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":197,"nodeType":"ExpressionStatement","src":"2061:21:2"}]},"id":199,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2048:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2051:0:2"},"scope":246,"src":"2037:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2490:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2500:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2500:21:2"},{"id":205,"nodeType":"PlaceholderStatement","src":"2531:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2542:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2542:20:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2095:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":210,"name":"nonReentrant","nameLocation":"2475:12:2","nodeType":"ModifierDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2487:2:2"},"src":"2466:103:2","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2614:268:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":214,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"IfStatement","src":"2698:86:2","trueBody":{"id":219,"nodeType":"Block","src":"2722:62:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2743:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"RevertStatement","src":"2736:37:2"}]}},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"2858:17:2"}]},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2614:0:2"},"scope":246,"src":"2575:307:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"2926:170:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3078:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"3068:21:2"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2915:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2926:0:2"},"scope":246,"src":"2888:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":244,"nodeType":"Block","src":"3339:42:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":241,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":239,"id":243,"nodeType":"Return","src":"3349:25:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3102:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3307:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"3333:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:2"},"scope":246,"src":"3275:106:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"1030:2353:2","usedErrors":[191],"usedEvents":[]}],"src":"109:3275:2"},"id":2},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","exportedSymbols":{"IPyth":[409],"IPythEvents":[439],"PythStructs":[487]},"id":410,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:3"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"./PythStructs.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":488,"src":"64:27:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","file":"./IPythEvents.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":440,"src":"92:27:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"IPythEvents","nameLocations":["397:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"397:11:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"397:11:3"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"121:257:3","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":409,"linearizedBaseContracts":[409,439],"name":"IPyth","nameLocation":"388:5:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"415:669:3","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":262,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"1098:14:3","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"id","nameLocation":"1130:2:3","nodeType":"VariableDeclaration","scope":262,"src":"1122:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1122:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1112:26:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"price","nameLocation":"1187:5:3","nodeType":"VariableDeclaration","scope":262,"src":"1162:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"PythStructs.Price","nameLocations":["1162:11:3","1174:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1162:17:3"},"referencedDeclaration":450,"src":"1162:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1161:32:3"},"scope":409,"src":"1089:105:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"1200:423:3","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":273,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"1637:19:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"id","nameLocation":"1674:2:3","nodeType":"VariableDeclaration","scope":273,"src":"1666:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"age","nameLocation":"1691:3:3","nodeType":"VariableDeclaration","scope":273,"src":"1686:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:44:3"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"price","nameLocation":"1749:5:3","nodeType":"VariableDeclaration","scope":273,"src":"1724:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":270,"nodeType":"UserDefinedTypeName","pathNode":{"id":269,"name":"PythStructs.Price","nameLocations":["1724:11:3","1736:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1724:17:3"},"referencedDeclaration":450,"src":"1724:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1723:32:3"},"scope":409,"src":"1628:128:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1762:925:3","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"2701:17:3","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"id","nameLocation":"2736:2:3","nodeType":"VariableDeclaration","scope":282,"src":"2728:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2728:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2718:26:3"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"price","nameLocation":"2793:5:3","nodeType":"VariableDeclaration","scope":282,"src":"2768:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"PythStructs.Price","nameLocations":["2768:11:3","2780:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"2768:17:3"},"referencedDeclaration":450,"src":"2768:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2767:32:3"},"scope":409,"src":"2692:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"2806:472:3","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":293,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"3292:22:3","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"id","nameLocation":"3332:2:3","nodeType":"VariableDeclaration","scope":293,"src":"3324:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"age","nameLocation":"3349:3:3","nodeType":"VariableDeclaration","scope":293,"src":"3344:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3314:44:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"price","nameLocation":"3407:5:3","nodeType":"VariableDeclaration","scope":293,"src":"3382:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":290,"nodeType":"UserDefinedTypeName","pathNode":{"id":289,"name":"PythStructs.Price","nameLocations":["3382:11:3","3394:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"3382:17:3"},"referencedDeclaration":450,"src":"3382:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3381:32:3"},"scope":409,"src":"3283:131:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"3420:535:3","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":300,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"3969:16:3","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"updateData","nameLocation":"4003:10:3","nodeType":"VariableDeclaration","scope":300,"src":"3986:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3986:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":296,"nodeType":"ArrayTypeName","src":"3986:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3985:29:3"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"4031:0:3"},"scope":409,"src":"3960:72:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"4038:1299:3","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"5351:27:3","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"updateData","nameLocation":"5405:10:3","nodeType":"VariableDeclaration","scope":313,"src":"5388:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5388:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":303,"nodeType":"ArrayTypeName","src":"5388:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"priceIds","nameLocation":"5444:8:3","nodeType":"VariableDeclaration","scope":313,"src":"5425:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5425:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":306,"nodeType":"ArrayTypeName","src":"5425:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"publishTimes","nameLocation":"5480:12:3","nodeType":"VariableDeclaration","scope":313,"src":"5462:30:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":308,"name":"uint64","nodeType":"ElementaryTypeName","src":"5462:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":309,"nodeType":"ArrayTypeName","src":"5462:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"5378:120:3"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"5515:0:3"},"scope":409,"src":"5342:174:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"5522:178:3","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":322,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"5714:12:3","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"updateData","nameLocation":"5753:10:3","nodeType":"VariableDeclaration","scope":322,"src":"5736:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":316,"nodeType":"ArrayTypeName","src":"5736:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5726:43:3"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"feeAmount","nameLocation":"5798:9:3","nodeType":"VariableDeclaration","scope":322,"src":"5793:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint","nodeType":"ElementaryTypeName","src":"5793:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5792:16:3"},"scope":409,"src":"5705:104:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"5815:165:3","text":"@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"5f674e35","id":331,"implemented":false,"kind":"function","modifiers":[],"name":"getTwapUpdateFee","nameLocation":"5994:16:3","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"updateData","nameLocation":"6037:10:3","nodeType":"VariableDeclaration","scope":331,"src":"6020:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":324,"name":"bytes","nodeType":"ElementaryTypeName","src":"6020:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":325,"nodeType":"ArrayTypeName","src":"6020:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6010:43:3"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"feeAmount","nameLocation":"6082:9:3","nodeType":"VariableDeclaration","scope":331,"src":"6077:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6076:16:3"},"scope":409,"src":"5985:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"6099:1213:3","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":349,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"7326:21:3","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"updateData","nameLocation":"7374:10:3","nodeType":"VariableDeclaration","scope":349,"src":"7357:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":334,"nodeType":"ArrayTypeName","src":"7357:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"priceIds","nameLocation":"7413:8:3","nodeType":"VariableDeclaration","scope":349,"src":"7394:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7394:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":337,"nodeType":"ArrayTypeName","src":"7394:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"minPublishTime","nameLocation":"7438:14:3","nodeType":"VariableDeclaration","scope":349,"src":"7431:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":339,"name":"uint64","nodeType":"ElementaryTypeName","src":"7431:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"maxPublishTime","nameLocation":"7469:14:3","nodeType":"VariableDeclaration","scope":349,"src":"7462:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":341,"name":"uint64","nodeType":"ElementaryTypeName","src":"7462:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7347:142:3"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"priceFeeds","nameLocation":"7547:10:3","nodeType":"VariableDeclaration","scope":349,"src":"7516:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":345,"nodeType":"UserDefinedTypeName","pathNode":{"id":344,"name":"PythStructs.PriceFeed","nameLocations":["7516:11:3","7528:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"7516:21:3"},"referencedDeclaration":459,"src":"7516:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":346,"nodeType":"ArrayTypeName","src":"7516:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"7515:43:3"},"scope":409,"src":"7317:242:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"7565:1495:3","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"3a229d18","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesWithConfig","nameLocation":"9074:31:3","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"updateData","nameLocation":"9132:10:3","nodeType":"VariableDeclaration","scope":376,"src":"9115:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"9115:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":352,"nodeType":"ArrayTypeName","src":"9115:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"priceIds","nameLocation":"9171:8:3","nodeType":"VariableDeclaration","scope":376,"src":"9152:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9152:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":355,"nodeType":"ArrayTypeName","src":"9152:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"minAllowedPublishTime","nameLocation":"9196:21:3","nodeType":"VariableDeclaration","scope":376,"src":"9189:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"9189:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"maxAllowedPublishTime","nameLocation":"9234:21:3","nodeType":"VariableDeclaration","scope":376,"src":"9227:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":359,"name":"uint64","nodeType":"ElementaryTypeName","src":"9227:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"checkUniqueness","nameLocation":"9270:15:3","nodeType":"VariableDeclaration","scope":376,"src":"9265:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"9265:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"checkUpdateDataIsMinimal","nameLocation":"9300:24:3","nodeType":"VariableDeclaration","scope":376,"src":"9295:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"9295:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"storeUpdatesIfFresh","nameLocation":"9339:19:3","nodeType":"VariableDeclaration","scope":376,"src":"9334:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"9334:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9105:259:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"priceFeeds","nameLocation":"9459:10:3","nodeType":"VariableDeclaration","scope":376,"src":"9428:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":369,"nodeType":"UserDefinedTypeName","pathNode":{"id":368,"name":"PythStructs.PriceFeed","nameLocations":["9428:11:3","9440:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"9428:21:3"},"referencedDeclaration":459,"src":"9428:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":370,"nodeType":"ArrayTypeName","src":"9428:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"slots","nameLocation":"9499:5:3","nodeType":"VariableDeclaration","scope":376,"src":"9483:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":372,"name":"uint64","nodeType":"ElementaryTypeName","src":"9483:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":373,"nodeType":"ArrayTypeName","src":"9483:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9414:100:3"},"scope":409,"src":"9065:450:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"9521:1194:3","text":"@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"},"functionSelector":"eb942158","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"parseTwapPriceFeedUpdates","nameLocation":"10729:25:3","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"updateData","nameLocation":"10781:10:3","nodeType":"VariableDeclaration","scope":390,"src":"10764:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":378,"name":"bytes","nodeType":"ElementaryTypeName","src":"10764:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":379,"nodeType":"ArrayTypeName","src":"10764:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"priceIds","nameLocation":"10820:8:3","nodeType":"VariableDeclaration","scope":390,"src":"10801:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10801:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":382,"nodeType":"ArrayTypeName","src":"10801:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10754:80:3"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"twapPriceFeeds","nameLocation":"10920:14:3","nodeType":"VariableDeclaration","scope":390,"src":"10885:49:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$471_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"},"typeName":{"baseType":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"PythStructs.TwapPriceFeed","nameLocations":["10885:11:3","10897:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":471,"src":"10885:25:3"},"referencedDeclaration":471,"src":"10885:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_TwapPriceFeed_$471_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed"}},"id":387,"nodeType":"ArrayTypeName","src":"10885:27:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$471_storage_$dyn_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"}},"visibility":"internal"}],"src":"10884:51:3"},"scope":409,"src":"10720:216:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"10942:972:3","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"11928:27:3","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"updateData","nameLocation":"11982:10:3","nodeType":"VariableDeclaration","scope":408,"src":"11965:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":392,"name":"bytes","nodeType":"ElementaryTypeName","src":"11965:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":393,"nodeType":"ArrayTypeName","src":"11965:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"priceIds","nameLocation":"12021:8:3","nodeType":"VariableDeclaration","scope":408,"src":"12002:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12002:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":396,"nodeType":"ArrayTypeName","src":"12002:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"minPublishTime","nameLocation":"12046:14:3","nodeType":"VariableDeclaration","scope":408,"src":"12039:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":398,"name":"uint64","nodeType":"ElementaryTypeName","src":"12039:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"maxPublishTime","nameLocation":"12077:14:3","nodeType":"VariableDeclaration","scope":408,"src":"12070:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":400,"name":"uint64","nodeType":"ElementaryTypeName","src":"12070:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11955:142:3"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"priceFeeds","nameLocation":"12155:10:3","nodeType":"VariableDeclaration","scope":408,"src":"12124:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":404,"nodeType":"UserDefinedTypeName","pathNode":{"id":403,"name":"PythStructs.PriceFeed","nameLocations":["12124:11:3","12136:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"12124:21:3"},"referencedDeclaration":459,"src":"12124:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$459_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":405,"nodeType":"ArrayTypeName","src":"12124:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$459_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"12123:43:3"},"scope":409,"src":"11919:248:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":410,"src":"378:11791:3","usedErrors":[],"usedEvents":[423,438]}],"src":"39:12131:3"},"id":3},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","exportedSymbols":{"IPythEvents":[439]},"id":440,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"64:170:4","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":439,"linearizedBaseContracts":[439],"name":"IPythEvents","nameLocation":"244:11:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"262:305:4","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":423,"name":"PriceFeedUpdate","nameLocation":"578:15:4","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"619:2:4","nodeType":"VariableDeclaration","scope":423,"src":"603:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"603:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":417,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"638:11:4","nodeType":"VariableDeclaration","scope":423,"src":"631:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":416,"name":"uint64","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":419,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"665:5:4","nodeType":"VariableDeclaration","scope":423,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":418,"name":"int64","nodeType":"ElementaryTypeName","src":"659:5:4","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"687:4:4","nodeType":"VariableDeclaration","scope":423,"src":"680:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":420,"name":"uint64","nodeType":"ElementaryTypeName","src":"680:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"593:104:4"},"src":"572:126:4"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"704:376:4","text":"@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."},"eventSelector":"d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977","id":438,"name":"TwapPriceFeedUpdate","nameLocation":"1091:19:4","nodeType":"EventDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1136:2:4","nodeType":"VariableDeclaration","scope":438,"src":"1120:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":428,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1155:9:4","nodeType":"VariableDeclaration","scope":438,"src":"1148:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":427,"name":"uint64","nodeType":"ElementaryTypeName","src":"1148:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":430,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1181:7:4","nodeType":"VariableDeclaration","scope":438,"src":"1174:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":429,"name":"uint64","nodeType":"ElementaryTypeName","src":"1174:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":false,"mutability":"mutable","name":"twapPrice","nameLocation":"1204:9:4","nodeType":"VariableDeclaration","scope":438,"src":"1198:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":431,"name":"int64","nodeType":"ElementaryTypeName","src":"1198:5:4","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":434,"indexed":false,"mutability":"mutable","name":"twapConf","nameLocation":"1230:8:4","nodeType":"VariableDeclaration","scope":438,"src":"1223:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":433,"name":"uint64","nodeType":"ElementaryTypeName","src":"1223:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":436,"indexed":false,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"1255:14:4","nodeType":"VariableDeclaration","scope":438,"src":"1248:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":435,"name":"uint32","nodeType":"ElementaryTypeName","src":"1248:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1110:165:4"},"src":"1085:191:4"}],"scope":440,"src":"234:1044:4","usedErrors":[],"usedEvents":[423,438]}],"src":"39:1240:4"},"id":4},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","exportedSymbols":{"PythStructs":[487]},"id":488,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":441,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":487,"linearizedBaseContracts":[487],"name":"PythStructs","nameLocation":"73:11:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":450,"members":[{"constant":false,"id":443,"mutability":"mutable","name":"price","nameLocation":"647:5:5","nodeType":"VariableDeclaration","scope":450,"src":"641:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":442,"name":"int64","nodeType":"ElementaryTypeName","src":"641:5:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"conf","nameLocation":"717:4:5","nodeType":"VariableDeclaration","scope":450,"src":"710:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":444,"name":"uint64","nodeType":"ElementaryTypeName","src":"710:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"expo","nameLocation":"763:4:5","nodeType":"VariableDeclaration","scope":450,"src":"757:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":446,"name":"int32","nodeType":"ElementaryTypeName","src":"757:5:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"publishTime","nameLocation":"848:11:5","nodeType":"VariableDeclaration","scope":450,"src":"843:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"608:5:5","nodeType":"StructDefinition","scope":487,"src":"601:265:5","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":459,"members":[{"constant":false,"id":452,"mutability":"mutable","name":"id","nameLocation":"1013:2:5","nodeType":"VariableDeclaration","scope":459,"src":"1005:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"price","nameLocation":"1065:5:5","nodeType":"VariableDeclaration","scope":459,"src":"1059:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":454,"nodeType":"UserDefinedTypeName","pathNode":{"id":453,"name":"Price","nameLocations":["1059:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1059:5:5"},"referencedDeclaration":450,"src":"1059:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"emaPrice","nameLocation":"1158:8:5","nodeType":"VariableDeclaration","scope":459,"src":"1152:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":457,"nodeType":"UserDefinedTypeName","pathNode":{"id":456,"name":"Price","nameLocations":["1152:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1152:5:5"},"referencedDeclaration":450,"src":"1152:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"960:9:5","nodeType":"StructDefinition","scope":487,"src":"953:220:5","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceFeed","id":471,"members":[{"constant":false,"id":461,"mutability":"mutable","name":"id","nameLocation":"1243:2:5","nodeType":"VariableDeclaration","scope":471,"src":"1235:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"startTime","nameLocation":"1296:9:5","nodeType":"VariableDeclaration","scope":471,"src":"1289:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":462,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"endTime","nameLocation":"1354:7:5","nodeType":"VariableDeclaration","scope":471,"src":"1347:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":464,"name":"uint64","nodeType":"ElementaryTypeName","src":"1347:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"twap","nameLocation":"1399:4:5","nodeType":"VariableDeclaration","scope":471,"src":"1393:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":467,"nodeType":"UserDefinedTypeName","pathNode":{"id":466,"name":"Price","nameLocations":["1393:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"1393:5:5"},"referencedDeclaration":450,"src":"1393:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"2034:14:5","nodeType":"VariableDeclaration","scope":471,"src":"2027:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":469,"name":"uint32","nodeType":"ElementaryTypeName","src":"2027:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"TwapPriceFeed","nameLocation":"1186:13:5","nodeType":"StructDefinition","scope":487,"src":"1179:876:5","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceInfo","id":486,"members":[{"constant":false,"id":473,"mutability":"mutable","name":"cumulativePrice","nameLocation":"2190:15:5","nodeType":"VariableDeclaration","scope":486,"src":"2183:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":472,"name":"int128","nodeType":"ElementaryTypeName","src":"2183:6:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"cumulativeConf","nameLocation":"2223:14:5","nodeType":"VariableDeclaration","scope":486,"src":"2215:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":474,"name":"uint128","nodeType":"ElementaryTypeName","src":"2215:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"numDownSlots","nameLocation":"2272:12:5","nodeType":"VariableDeclaration","scope":486,"src":"2265:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":476,"name":"uint64","nodeType":"ElementaryTypeName","src":"2265:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"publishSlot","nameLocation":"2301:11:5","nodeType":"VariableDeclaration","scope":486,"src":"2294:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":478,"name":"uint64","nodeType":"ElementaryTypeName","src":"2294:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"publishTime","nameLocation":"2329:11:5","nodeType":"VariableDeclaration","scope":486,"src":"2322:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"2322:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"prevPublishTime","nameLocation":"2357:15:5","nodeType":"VariableDeclaration","scope":486,"src":"2350:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":482,"name":"uint64","nodeType":"ElementaryTypeName","src":"2350:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"expo","nameLocation":"2406:4:5","nodeType":"VariableDeclaration","scope":486,"src":"2400:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":484,"name":"int32","nodeType":"ElementaryTypeName","src":"2400:5:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"TwapPriceInfo","nameLocation":"2141:13:5","nodeType":"StructDefinition","scope":487,"src":"2134:283:5","visibility":"public"}],"scope":488,"src":"64:2355:5","usedErrors":[],"usedEvents":[]}],"src":"39:2381:5"},"id":5},"contracts/MetricChallengeDAO.sol":{"ast":{"absolutePath":"contracts/MetricChallengeDAO.sol","exportedSymbols":{"Context":[177],"MetricChallengeDAO":[1290],"Ownable":[147],"ReentrancyGuard":[246]},"id":1291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":489,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":247,"src":"58:59:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":148,"src":"118:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":493,"name":"ReentrancyGuard","nameLocations":["420:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"420:15:6"},"id":494,"nodeType":"InheritanceSpecifier","src":"420:15:6"},{"baseName":{"id":495,"name":"Ownable","nameLocations":["437:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"437:7:6"},"id":496,"nodeType":"InheritanceSpecifier","src":"437:7:6"}],"canonicalName":"MetricChallengeDAO","contractDependencies":[],"contractKind":"contract","documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"172:216:6","text":" @title MetricChallengeDAO\n @dev A decentralized prediction market for metrics with staking mechanisms\n @notice Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing"},"fullyImplemented":true,"id":1290,"linearizedBaseContracts":[1290,147,177,246],"name":"MetricChallengeDAO","nameLocation":"398:18:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MetricChallengeDAO.Stake","id":501,"members":[{"constant":false,"id":498,"mutability":"mutable","name":"staker","nameLocation":"523:6:6","nodeType":"VariableDeclaration","scope":501,"src":"515:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"timestamp","nameLocation":"547:9:6","nodeType":"VariableDeclaration","scope":501,"src":"539:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Stake","nameLocation":"499:5:6","nodeType":"StructDefinition","scope":1290,"src":"492:71:6","visibility":"public"},{"canonicalName":"MetricChallengeDAO.MetricStatus","id":504,"members":[{"id":502,"name":"Pending","nameLocation":"601:7:6","nodeType":"EnumValue","src":"601:7:6"},{"id":503,"name":"Resolved","nameLocation":"618:8:6","nodeType":"EnumValue","src":"618:8:6"}],"name":"MetricStatus","nameLocation":"578:12:6","nodeType":"EnumDefinition","src":"573:59:6"},{"canonicalName":"MetricChallengeDAO.Metric","id":526,"members":[{"constant":false,"id":506,"mutability":"mutable","name":"id","nameLocation":"674:2:6","nodeType":"VariableDeclaration","scope":526,"src":"666:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"694:19:6","nodeType":"VariableDeclaration","scope":526,"src":"686:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"duration","nameLocation":"776:8:6","nodeType":"VariableDeclaration","scope":526,"src":"768:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"startTime","nameLocation":"802:9:6","nodeType":"VariableDeclaration","scope":526,"src":"794:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"status","nameLocation":"834:6:6","nodeType":"VariableDeclaration","scope":526,"src":"821:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"},"typeName":{"id":514,"nodeType":"UserDefinedTypeName","pathNode":{"id":513,"name":"MetricStatus","nameLocations":["821:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":504,"src":"821:12:6"},"referencedDeclaration":504,"src":"821:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"bountyCollateral","nameLocation":"858:16:6","nodeType":"VariableDeclaration","scope":526,"src":"850:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"stakesInFavor","nameLocation":"892:13:6","nodeType":"VariableDeclaration","scope":526,"src":"884:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"Stake","nameLocations":["884:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"884:5:6"},"referencedDeclaration":501,"src":"884:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":520,"nodeType":"ArrayTypeName","src":"884:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"stakesAgainst","nameLocation":"923:13:6","nodeType":"VariableDeclaration","scope":526,"src":"915:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"Stake","nameLocations":["915:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"915:5:6"},"referencedDeclaration":501,"src":"915:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":524,"nodeType":"ArrayTypeName","src":"915:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"name":"Metric","nameLocation":"649:6:6","nodeType":"StructDefinition","scope":1290,"src":"642:301:6","visibility":"public"},{"constant":false,"functionSelector":"6d9aac62","id":531,"mutability":"mutable","name":"metrics","nameLocation":"1023:7:6","nodeType":"VariableDeclaration","scope":1290,"src":"989:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric)"},"typeName":{"id":530,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"989:26:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":529,"nodeType":"UserDefinedTypeName","pathNode":{"id":528,"name":"Metric","nameLocations":["1008:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"1008:6:6"},"referencedDeclaration":526,"src":"1008:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}}},"visibility":"public"},{"constant":false,"functionSelector":"3937066c","id":533,"mutability":"mutable","name":"nextMetricID","nameLocation":"1051:12:6","nodeType":"VariableDeclaration","scope":1290,"src":"1036:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5af01b91","id":535,"mutability":"mutable","name":"fixedStakeAmount","nameLocation":"1084:16:6","nodeType":"VariableDeclaration","scope":1290,"src":"1069:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bac03cd7","id":537,"mutability":"mutable","name":"totalContractBalance","nameLocation":"1188:20:6","nodeType":"VariableDeclaration","scope":1290,"src":"1173:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"476f7bdb10d30e2de6d06e5d144c76d3963482c10f097a5048c401c84d1a1025","id":543,"name":"MetricSubmitted","nameLocation":"1252:15:6","nodeType":"EventDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"1284:8:6","nodeType":"VariableDeclaration","scope":543,"src":"1268:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":541,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1310:9:6","nodeType":"VariableDeclaration","scope":543,"src":"1294:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1267:53:6"},"src":"1246:75:6"},{"anonymous":false,"eventSelector":"245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef","id":551,"name":"Staked","nameLocation":"1332:6:6","nodeType":"EventDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"1355:8:6","nodeType":"VariableDeclaration","scope":551,"src":"1339:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":547,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1381:6:6","nodeType":"VariableDeclaration","scope":551,"src":"1365:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"1396:4:6","nodeType":"VariableDeclaration","scope":551,"src":"1389:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":548,"name":"string","nodeType":"ElementaryTypeName","src":"1389:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1338:63:6"},"src":"1326:76:6"},{"anonymous":false,"eventSelector":"579e7f72f41084c4072560a3d26ffa8c9361debca741683ee5f7f2cf9a461a53","id":557,"name":"MetricResolved","nameLocation":"1413:14:6","nodeType":"EventDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"indexed":true,"mutability":"mutable","name":"metricID","nameLocation":"1444:8:6","nodeType":"VariableDeclaration","scope":557,"src":"1428:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"indexed":false,"mutability":"mutable","name":"winningSide","nameLocation":"1461:11:6","nodeType":"VariableDeclaration","scope":557,"src":"1454:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":554,"name":"string","nodeType":"ElementaryTypeName","src":"1454:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1427:46:6"},"src":"1407:67:6"},{"anonymous":false,"eventSelector":"e34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6","id":563,"name":"RewardDistributed","nameLocation":"1485:17:6","nodeType":"EventDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1519:6:6","nodeType":"VariableDeclaration","scope":563,"src":"1503:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1535:6:6","nodeType":"VariableDeclaration","scope":563,"src":"1527:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1502:40:6"},"src":"1479:64:6"},{"anonymous":false,"eventSelector":"c3869fc4914caa4e69064c93dc69ce5b5b73da5a26717b551e7b6b23f2db9b1b","id":567,"name":"StakeAmountUpdated","nameLocation":"1554:18:6","nodeType":"EventDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"1581:9:6","nodeType":"VariableDeclaration","scope":567,"src":"1573:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:19:6"},"src":"1548:44:6"},{"errorSelector":"7313c09d","id":569,"name":"MetricNotFound","nameLocation":"1635:14:6","nodeType":"ErrorDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"1649:2:6"},"src":"1629:23:6"},{"errorSelector":"76d3a56d","id":571,"name":"StakingPeriodOver","nameLocation":"1663:17:6","nodeType":"ErrorDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1680:2:6"},"src":"1657:26:6"},{"errorSelector":"5a5b0c1e","id":573,"name":"MetricAlreadyResolved","nameLocation":"1694:21:6","nodeType":"ErrorDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"1715:2:6"},"src":"1688:30:6"},{"errorSelector":"cd1c8867","id":575,"name":"InsufficientPayment","nameLocation":"1729:19:6","nodeType":"ErrorDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"1748:2:6"},"src":"1723:28:6"},{"errorSelector":"90b8ec18","id":577,"name":"TransferFailed","nameLocation":"1762:14:6","nodeType":"ErrorDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"1776:2:6"},"src":"1756:23:6"},{"errorSelector":"e5239090","id":579,"name":"InvalidParameters","nameLocation":"1790:17:6","nodeType":"ErrorDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"1807:2:6"},"src":"1784:26:6"},{"body":{"id":596,"nodeType":"Block","src":"1911:79:6","statements":[{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":588,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1921:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1936:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1921:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"1921:16:6"},{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":592,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1947:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":593,"name":"_fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1966:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1947:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"1947:36:6"}]},"id":597,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1899:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1903:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1899:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":586,"kind":"baseConstructorSpecifier","modifierName":{"id":583,"name":"Ownable","nameLocations":["1891:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1891:7:6"},"nodeType":"ModifierInvocation","src":"1891:19:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"_fixedStakeAmount","nameLocation":"1872:17:6","nodeType":"VariableDeclaration","scope":597,"src":"1864:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1863:27:6"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"1911:0:6"},"scope":1290,"src":"1852:138:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":614,"nodeType":"Block","src":"2070:122:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"2084:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2096:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2084:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"2101:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":605,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2113:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2101:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2084:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":612,"nodeType":"IfStatement","src":"2080:95:6","trueBody":{"id":611,"nodeType":"Block","src":"2127:48:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":608,"name":"MetricNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"2148:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"RevertStatement","src":"2141:23:6"}]}},{"id":613,"nodeType":"PlaceholderStatement","src":"2184:1:6"}]},"id":615,"name":"metricExists","nameLocation":"2039:12:6","nodeType":"ModifierDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"metricID","nameLocation":"2060:8:6","nodeType":"VariableDeclaration","scope":615,"src":"2052:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2051:18:6"},"src":"2030:162:6","virtual":false,"visibility":"internal"},{"body":{"id":640,"nodeType":"Block","src":"2249:188:6","statements":[{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"metric","nameLocation":"2274:6:6","nodeType":"VariableDeclaration","scope":640,"src":"2259:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":620,"nodeType":"UserDefinedTypeName","pathNode":{"id":619,"name":"Metric","nameLocations":["2259:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"2259:6:6"},"referencedDeclaration":526,"src":"2259:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":625,"initialValue":{"baseExpression":{"id":622,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2283:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":624,"indexExpression":{"id":623,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"2291:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2283:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2259:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2314:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2320:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2314:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":628,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2333:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2340:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"2333:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":630,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2352:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2359:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"2352:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2333:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2314:53:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":638,"nodeType":"IfStatement","src":"2310:110:6","trueBody":{"id":637,"nodeType":"Block","src":"2369:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":634,"name":"StakingPeriodOver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2390:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"RevertStatement","src":"2383:26:6"}]}},{"id":639,"nodeType":"PlaceholderStatement","src":"2429:1:6"}]},"id":641,"name":"stakingPeriodActive","nameLocation":"2211:19:6","nodeType":"ModifierDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"metricID","nameLocation":"2239:8:6","nodeType":"VariableDeclaration","scope":641,"src":"2231:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2230:18:6"},"src":"2202:235:6","virtual":false,"visibility":"internal"},{"body":{"id":658,"nodeType":"Block","src":"2486:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":645,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2500:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":647,"indexExpression":{"id":646,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2508:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2500:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2518:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":515,"src":"2500:24:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":649,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2528:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$504_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2541:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":502,"src":"2528:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"2500:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"2496:109:6","trueBody":{"id":655,"nodeType":"Block","src":"2550:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"MetricAlreadyResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2571:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2571:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"2564:30:6"}]}},{"id":657,"nodeType":"PlaceholderStatement","src":"2614:1:6"}]},"id":659,"name":"onlyPending","nameLocation":"2456:11:6","nodeType":"ModifierDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"metricID","nameLocation":"2476:8:6","nodeType":"VariableDeclaration","scope":659,"src":"2468:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2467:18:6"},"src":"2447:175:6","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"3117:745:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"expectedLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"3131:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130303030","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3131:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3162:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3174:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3162:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3131:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":684,"nodeType":"IfStatement","src":"3127:101:6","trueBody":{"id":683,"nodeType":"Block","src":"3177:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":680,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3198:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"RevertStatement","src":"3191:26:6"}]}},{"assignments":[686],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"metricID","nameLocation":"3254:8:6","nodeType":"VariableDeclaration","scope":749,"src":"3246:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":688,"initialValue":{"id":687,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3265:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3246:31:6"},{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"newMetric","nameLocation":"3340:9:6","nodeType":"VariableDeclaration","scope":749,"src":"3325:24:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"Metric","nameLocations":["3325:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"3325:6:6"},"referencedDeclaration":526,"src":"3325:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":695,"initialValue":{"baseExpression":{"id":692,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3352:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":694,"indexExpression":{"id":693,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3360:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3352:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3325:44:6"},{"expression":{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":696,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3379:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3389:2:6","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":506,"src":"3379:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":699,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3394:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3379:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":701,"nodeType":"ExpressionStatement","src":"3379:23:6"},{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":702,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3412:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3422:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":508,"src":"3412:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":705,"name":"expectedLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"3444:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3412:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"3412:51:6"},{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":708,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3473:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3483:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"3473:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":711,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3494:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3473:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":713,"nodeType":"ExpressionStatement","src":"3473:29:6"},{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":714,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3512:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3522:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"3512:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":717,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3534:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3540:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"3534:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3512:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":720,"nodeType":"ExpressionStatement","src":"3512:37:6"},{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":721,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3559:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3569:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":515,"src":"3559:16:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":724,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3578:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$504_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3591:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":502,"src":"3578:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"3559:39:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"id":727,"nodeType":"ExpressionStatement","src":"3559:39:6"},{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":728,"name":"newMetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3608:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3618:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":517,"src":"3608:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":731,"name":"bountyCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3637:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3608:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"3608:45:6"},{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3705:14:6","subExpression":{"id":734,"name":"nextMetricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3705:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":736,"nodeType":"ExpressionStatement","src":"3705:14:6"},{"expression":{"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":737,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3729:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":738,"name":"bountyCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3753:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3729:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ExpressionStatement","src":"3729:40:6"},{"eventCall":{"arguments":[{"id":742,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3809:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3819:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3823:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3819:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"MetricSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"3793:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"3788:42:6"},{"expression":{"id":747,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3847:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":672,"id":748,"nodeType":"Return","src":"3840:15:6"}]},"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"2667:272:6","text":" @dev Submit a new metric for prediction\n @param expectedLossPercent Expected loss percentage in basis points (e.g., 1000 = 10%)\n @param duration Duration of staking period in seconds\n @return metricID The ID of the newly created metric"},"functionSelector":"312c9e87","id":750,"implemented":true,"kind":"function","modifiers":[{"id":669,"kind":"modifierInvocation","modifierName":{"id":668,"name":"nonReentrant","nameLocations":["3086:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"3086:12:6"},"nodeType":"ModifierInvocation","src":"3086:12:6"}],"name":"submitMetric","nameLocation":"2953:12:6","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"2983:19:6","nodeType":"VariableDeclaration","scope":750,"src":"2975:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"duration","nameLocation":"3020:8:6","nodeType":"VariableDeclaration","scope":750,"src":"3012:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"bountyCollateral","nameLocation":"3046:16:6","nodeType":"VariableDeclaration","scope":750,"src":"3038:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3038:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2965:103:6"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"3108:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3108:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3107:9:6"},"scope":1290,"src":"2944:918:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":794,"nodeType":"Block","src":"4183:247:6","statements":[{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"metric","nameLocation":"4217:6:6","nodeType":"VariableDeclaration","scope":794,"src":"4202:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":768,"nodeType":"UserDefinedTypeName","pathNode":{"id":767,"name":"Metric","nameLocations":["4202:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"4202:6:6"},"referencedDeclaration":526,"src":"4202:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":773,"initialValue":{"baseExpression":{"id":770,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4226:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":772,"indexExpression":{"id":771,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4234:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4226:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4202:41:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4307:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4311:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4307:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":782,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4342:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4348:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"4342:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4279:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$501_storage_ptr_$","typeString":"type(struct MetricChallengeDAO.Stake storage pointer)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4299:6:6","4331:9:6"],"names":["staker","timestamp"],"nodeType":"FunctionCall","src":"4279:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Stake_$501_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}],"expression":{"expression":{"id":774,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"4253:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4260:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":521,"src":"4253:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4274:4:6","memberName":"push","nodeType":"MemberAccess","src":"4253:25:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr_$_t_struct$_Stake_$501_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr_$","typeString":"function (struct MetricChallengeDAO.Stake storage ref[] storage pointer,struct MetricChallengeDAO.Stake storage ref)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:116:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"4253:116:6"},{"eventCall":{"arguments":[{"id":788,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4391:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4401:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4405:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4401:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"496e4661766f72","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4413:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""},"value":"InFavor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""}],"id":787,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4384:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4384:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"EmitStatement","src":"4379:44:6"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"3872:119:6","text":" @dev Stake in favor of a metric's prediction\n @param metricID The ID of the metric to stake on"},"functionSelector":"6ec1b041","id":795,"implemented":true,"kind":"function","modifiers":[{"id":756,"kind":"modifierInvocation","modifierName":{"id":755,"name":"nonReentrant","nameLocations":["4063:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4063:12:6"},"nodeType":"ModifierInvocation","src":"4063:12:6"},{"arguments":[{"id":758,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4098:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":759,"kind":"modifierInvocation","modifierName":{"id":757,"name":"metricExists","nameLocations":["4085:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"4085:12:6"},"nodeType":"ModifierInvocation","src":"4085:22:6"},{"arguments":[{"id":761,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4137:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":762,"kind":"modifierInvocation","modifierName":{"id":760,"name":"stakingPeriodActive","nameLocations":["4117:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":641,"src":"4117:19:6"},"nodeType":"ModifierInvocation","src":"4117:29:6"},{"arguments":[{"id":764,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4168:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":765,"kind":"modifierInvocation","modifierName":{"id":763,"name":"onlyPending","nameLocations":["4156:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":659,"src":"4156:11:6"},"nodeType":"ModifierInvocation","src":"4156:21:6"}],"name":"stakeInFavor","nameLocation":"4005:12:6","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"metricID","nameLocation":"4026:8:6","nodeType":"VariableDeclaration","scope":795,"src":"4018:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4018:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4017:18:6"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[],"src":"4183:0:6"},"scope":1290,"src":"3996:434:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":839,"nodeType":"Block","src":"4747:255:6","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"metric","nameLocation":"4781:6:6","nodeType":"VariableDeclaration","scope":839,"src":"4766:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":813,"nodeType":"UserDefinedTypeName","pathNode":{"id":812,"name":"Metric","nameLocations":["4766:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"4766:6:6"},"referencedDeclaration":526,"src":"4766:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":818,"initialValue":{"baseExpression":{"id":815,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4790:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":817,"indexExpression":{"id":816,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4798:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4790:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4766:41:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4871:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4875:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4871:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":827,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4906:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4912:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"4906:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":824,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4843:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$501_storage_ptr_$","typeString":"type(struct MetricChallengeDAO.Stake storage pointer)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4863:6:6","4895:9:6"],"names":["staker","timestamp"],"nodeType":"FunctionCall","src":"4843:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Stake_$501_memory_ptr","typeString":"struct MetricChallengeDAO.Stake memory"}],"expression":{"expression":{"id":819,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4817:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4824:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":525,"src":"4817:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4838:4:6","memberName":"push","nodeType":"MemberAccess","src":"4817:25:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr_$_t_struct$_Stake_$501_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr_$","typeString":"function (struct MetricChallengeDAO.Stake storage ref[] storage pointer,struct MetricChallengeDAO.Stake storage ref)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4817:116:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"4817:116:6"},{"eventCall":{"arguments":[{"id":833,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4963:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4973:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4977:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4973:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"416761696e7374","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4985:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""},"value":"Against"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""}],"id":832,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4956:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4956:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"4951:44:6"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"4440:115:6","text":" @dev Stake against a metric's prediction\n @param metricID The ID of the metric to stake on"},"functionSelector":"7776eab6","id":840,"implemented":true,"kind":"function","modifiers":[{"id":801,"kind":"modifierInvocation","modifierName":{"id":800,"name":"nonReentrant","nameLocations":["4627:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4627:12:6"},"nodeType":"ModifierInvocation","src":"4627:12:6"},{"arguments":[{"id":803,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4662:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":804,"kind":"modifierInvocation","modifierName":{"id":802,"name":"metricExists","nameLocations":["4649:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"4649:12:6"},"nodeType":"ModifierInvocation","src":"4649:22:6"},{"arguments":[{"id":806,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4701:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":807,"kind":"modifierInvocation","modifierName":{"id":805,"name":"stakingPeriodActive","nameLocations":["4681:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":641,"src":"4681:19:6"},"nodeType":"ModifierInvocation","src":"4681:29:6"},{"arguments":[{"id":809,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4732:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":810,"kind":"modifierInvocation","modifierName":{"id":808,"name":"onlyPending","nameLocations":["4720:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":659,"src":"4720:11:6"},"nodeType":"ModifierInvocation","src":"4720:21:6"}],"name":"stakeAgainst","nameLocation":"4569:12:6","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"metricID","nameLocation":"4590:8:6","nodeType":"VariableDeclaration","scope":840,"src":"4582:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"4582:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4581:18:6"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"4747:0:6"},"scope":1290,"src":"4560:442:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1065,"nodeType":"Block","src":"5405:2185:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"5419:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130303030","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5439:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5419:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"IfStatement","src":"5415:82:6","trueBody":{"id":864,"nodeType":"Block","src":"5446:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":861,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5467:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5467:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"RevertStatement","src":"5460:26:6"}]}},{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"metric","nameLocation":"5530:6:6","nodeType":"VariableDeclaration","scope":1065,"src":"5515:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":867,"nodeType":"UserDefinedTypeName","pathNode":{"id":866,"name":"Metric","nameLocations":["5515:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"5515:6:6"},"referencedDeclaration":526,"src":"5515:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":872,"initialValue":{"baseExpression":{"id":869,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"5539:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":871,"indexExpression":{"id":870,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"5547:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5539:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5515:41:6"},{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"inFavorWins","nameLocation":"5614:11:6","nodeType":"VariableDeclaration","scope":1065,"src":"5609:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"5609:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":879,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"actualLossPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"5628:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":876,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5649:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5656:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":508,"src":"5649:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5628:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5609:66:6"},{"assignments":[884],"declarations":[{"constant":false,"id":884,"mutability":"mutable","name":"winningStakes","nameLocation":"5701:13:6","nodeType":"VariableDeclaration","scope":1065,"src":"5685:29:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":882,"nodeType":"UserDefinedTypeName","pathNode":{"id":881,"name":"Stake","nameLocations":["5685:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"5685:5:6"},"referencedDeclaration":501,"src":"5685:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":883,"nodeType":"ArrayTypeName","src":"5685:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"id":891,"initialValue":{"condition":{"id":885,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5717:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":888,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5754:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5761:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":525,"src":"5754:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5717:57:6","trueExpression":{"expression":{"id":886,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5731:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5738:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":521,"src":"5731:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5685:89:6"},{"assignments":[896],"declarations":[{"constant":false,"id":896,"mutability":"mutable","name":"losingStakes","nameLocation":"5800:12:6","nodeType":"VariableDeclaration","scope":1065,"src":"5784:28:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":894,"nodeType":"UserDefinedTypeName","pathNode":{"id":893,"name":"Stake","nameLocations":["5784:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"5784:5:6"},"referencedDeclaration":501,"src":"5784:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":895,"nodeType":"ArrayTypeName","src":"5784:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"id":903,"initialValue":{"condition":{"id":897,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5815:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":900,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5852:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5859:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":521,"src":"5852:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5815:57:6","trueExpression":{"expression":{"id":898,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5829:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5836:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":525,"src":"5829:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5784:88:6"},{"assignments":[905],"declarations":[{"constant":false,"id":905,"mutability":"mutable","name":"winningSide","nameLocation":"5896:11:6","nodeType":"VariableDeclaration","scope":1065,"src":"5882:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":904,"name":"string","nodeType":"ElementaryTypeName","src":"5882:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":910,"initialValue":{"condition":{"id":906,"name":"inFavorWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5910:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"416761696e7374","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5936:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f","typeString":"literal_string \"Against\""},"value":"Against"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5910:35:6","trueExpression":{"hexValue":"496e4661766f72","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5924:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40","typeString":"literal_string \"InFavor\""},"value":"InFavor"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"5882:63:6"},{"assignments":[912],"declarations":[{"constant":false,"id":912,"mutability":"mutable","name":"rewardPool","nameLocation":"6005:10:6","nodeType":"VariableDeclaration","scope":1065,"src":"5997:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":913,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6018:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6025:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":517,"src":"6018:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":915,"name":"losingStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"6045:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6058:6:6","memberName":"length","nodeType":"MemberAccess","src":"6045:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":917,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6067:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6045:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6044:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6018:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5997:87:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":922,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6107:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6121:6:6","memberName":"length","nodeType":"MemberAccess","src":"6107:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6130:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6107:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6135:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6148:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6135:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6107:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"6103:1329:6","trueBody":{"id":1051,"nodeType":"Block","src":"6151:1281:6","statements":[{"assignments":[931],"declarations":[{"constant":false,"id":931,"mutability":"mutable","name":"totalEarlyness","nameLocation":"6244:14:6","nodeType":"VariableDeclaration","scope":1051,"src":"6236:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":933,"initialValue":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6261:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6236:26:6"},{"body":{"id":966,"nodeType":"Block","src":"6327:212:6","statements":[{"assignments":[946],"declarations":[{"constant":false,"id":946,"mutability":"mutable","name":"stakingTime","nameLocation":"6353:11:6","nodeType":"VariableDeclaration","scope":966,"src":"6345:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":954,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":947,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6367:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":949,"indexExpression":{"id":948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6381:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6367:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6384:9:6","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":500,"src":"6367:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":951,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6396:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6403:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"6396:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6367:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6345:67:6"},{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"earlyness","nameLocation":"6438:9:6","nodeType":"VariableDeclaration","scope":966,"src":"6430:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":957,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6450:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6457:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"6450:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":959,"name":"stakingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6468:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6450:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6430:49:6"},{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":962,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6497:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":963,"name":"earlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6515:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6497:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ExpressionStatement","src":"6497:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6296:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":939,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6300:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6314:6:6","memberName":"length","nodeType":"MemberAccess","src":"6300:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6296:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":967,"initializationExpression":{"assignments":[935],"declarations":[{"constant":false,"id":935,"mutability":"mutable","name":"i","nameLocation":"6289:1:6","nodeType":"VariableDeclaration","scope":967,"src":"6281:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6293:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6281:13:6"},"loopExpression":{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6322:3:6","subExpression":{"id":942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6322:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":944,"nodeType":"ExpressionStatement","src":"6322:3:6"},"nodeType":"ForStatement","src":"6276:263:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6622:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6639:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6622:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"6618:804:6","trueBody":{"id":1049,"nodeType":"Block","src":"6642:780:6","statements":[{"body":{"id":1047,"nodeType":"Block","src":"6711:697:6","statements":[{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"stakingTime","nameLocation":"6741:11:6","nodeType":"VariableDeclaration","scope":1047,"src":"6733:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":984,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6755:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":986,"indexExpression":{"id":985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6769:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6772:9:6","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":500,"src":"6755:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":988,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6784:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6791:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"6784:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6755:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6733:67:6"},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"earlyness","nameLocation":"6830:9:6","nodeType":"VariableDeclaration","scope":1047,"src":"6822:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"6822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":998,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":994,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6842:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6849:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"6842:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":996,"name":"stakingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6860:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6842:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6822:49:6"},{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"reward","nameLocation":"6901:6:6","nodeType":"VariableDeclaration","scope":1047,"src":"6893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"6893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"earlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6911:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1002,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6923:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6911:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6910:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1005,"name":"totalEarlyness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6937:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6910:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6893:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"6998:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6998:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"6994:396:6","trueBody":{"id":1045,"nodeType":"Block","src":"7010:380:6","statements":[{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1011,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7036:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1012,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"7060:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7036:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"7036:30:6"},{"assignments":[1016,null],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"success","nameLocation":"7098:7:6","nodeType":"VariableDeclaration","scope":1045,"src":"7093:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1015,"name":"bool","nodeType":"ElementaryTypeName","src":"7093:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1029,"initialValue":{"arguments":[{"hexValue":"","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7164:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1019,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"7119:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1021,"indexExpression":{"id":1020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"7133:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7119:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7136:6:6","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":498,"src":"7119:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7111:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"7111:8:6","stateMutability":"payable","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7111:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7144:4:6","memberName":"call","nodeType":"MemberAccess","src":"7111:37:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1025,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"7156:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7111:52:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7111:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7092:75:6"},{"condition":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7197:8:6","subExpression":{"id":1030,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7198:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1036,"nodeType":"IfStatement","src":"7193:94:6","trueBody":{"id":1035,"nodeType":"Block","src":"7207:80:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1032,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"7244:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"RevertStatement","src":"7237:23:6"}]}},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1038,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"7335:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":1040,"indexExpression":{"id":1039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"7349:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7335:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage","typeString":"struct MetricChallengeDAO.Stake storage ref"}},"id":1041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7352:6:6","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":498,"src":"7335:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"7360:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1037,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7317:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7317:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"7312:55:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":976,"name":"winningStakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6684:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage pointer"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6698:6:6","memberName":"length","nodeType":"MemberAccess","src":"6684:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6680:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1048,"initializationExpression":{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"i","nameLocation":"6673:1:6","nodeType":"VariableDeclaration","scope":1048,"src":"6665:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"6665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":974,"initialValue":{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6677:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6665:13:6"},"loopExpression":{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6706:3:6","subExpression":{"id":979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"6706:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"6706:3:6"},"nodeType":"ForStatement","src":"6660:748:6"}]}}]}},{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1053,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7485:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7492:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":515,"src":"7485:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1056,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"7501:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$504_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7514:8:6","memberName":"Resolved","nodeType":"MemberAccess","referencedDeclaration":503,"src":"7501:21:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"7485:37:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"id":1059,"nodeType":"ExpressionStatement","src":"7485:37:6"},{"eventCall":{"arguments":[{"id":1061,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7561:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1062,"name":"winningSide","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"7571:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1060,"name":"MetricResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7546:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"EmitStatement","src":"7541:42:6"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"5012:193:6","text":" @dev Resolve a metric and distribute rewards\n @param metricID The ID of the metric to resolve\n @param actualLossPercent The actual loss percentage in basis points"},"functionSelector":"98dea89c","id":1066,"implemented":true,"kind":"function","modifiers":[{"id":848,"kind":"modifierInvocation","modifierName":{"id":847,"name":"onlyOwner","nameLocations":["5305:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5305:9:6"},"nodeType":"ModifierInvocation","src":"5305:9:6"},{"id":850,"kind":"modifierInvocation","modifierName":{"id":849,"name":"nonReentrant","nameLocations":["5324:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"5324:12:6"},"nodeType":"ModifierInvocation","src":"5324:12:6"},{"arguments":[{"id":852,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"5359:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":853,"kind":"modifierInvocation","modifierName":{"id":851,"name":"metricExists","nameLocations":["5346:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"5346:12:6"},"nodeType":"ModifierInvocation","src":"5346:22:6"},{"arguments":[{"id":855,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"5390:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":856,"kind":"modifierInvocation","modifierName":{"id":854,"name":"onlyPending","nameLocations":["5378:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":659,"src":"5378:11:6"},"nodeType":"ModifierInvocation","src":"5378:21:6"}],"name":"resolveMetric","nameLocation":"5219:13:6","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"metricID","nameLocation":"5241:8:6","nodeType":"VariableDeclaration","scope":1066,"src":"5233:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5233:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"actualLossPercent","nameLocation":"5259:17:6","nodeType":"VariableDeclaration","scope":1066,"src":"5251:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5232:45:6"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"5405:0:6"},"scope":1290,"src":"5210:2380:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1119,"nodeType":"Block","src":"8589:353:6","statements":[{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"metric","nameLocation":"8614:6:6","nodeType":"VariableDeclaration","scope":1119,"src":"8599:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"Metric","nameLocations":["8599:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"8599:6:6"},"referencedDeclaration":526,"src":"8599:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":1098,"initialValue":{"baseExpression":{"id":1095,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8623:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1097,"indexExpression":{"id":1096,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8631:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8623:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8599:41:6"},{"expression":{"components":[{"expression":{"id":1099,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8671:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8678:2:6","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":506,"src":"8671:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1101,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8694:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8701:19:6","memberName":"expectedLossPercent","nodeType":"MemberAccess","referencedDeclaration":508,"src":"8694:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1103,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8734:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8741:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"8734:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1105,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8763:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8770:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"8763:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1107,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8793:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8800:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":515,"src":"8793:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},{"expression":{"id":1109,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8820:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8827:16:6","memberName":"bountyCollateral","nodeType":"MemberAccess","referencedDeclaration":517,"src":"8820:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1111,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8857:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8864:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":521,"src":"8857:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8878:6:6","memberName":"length","nodeType":"MemberAccess","src":"8857:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1114,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8898:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8905:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":525,"src":"8898:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8919:6:6","memberName":"length","nodeType":"MemberAccess","src":"8898:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8657:278:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_MetricStatus_$504_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,enum MetricChallengeDAO.MetricStatus,uint256,uint256,uint256)"}},"functionReturnParameters":1091,"id":1118,"nodeType":"Return","src":"8650:285:6"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"7635:538:6","text":" @dev Get metric details\n @param metricID The ID of the metric\n @return id The metric ID\n @return expectedLossPercent Expected loss percentage in basis points\n @return duration Duration of staking period in seconds\n @return startTime Start timestamp of the metric\n @return status Current status of the metric\n @return bountyCollateral Bounty collateral amount\n @return stakesInFavorCount Number of stakes in favor\n @return stakesAgainstCount Number of stakes against"},"functionSelector":"582bd8f1","id":1120,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1072,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8269:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1073,"kind":"modifierInvocation","modifierName":{"id":1071,"name":"metricExists","nameLocations":["8256:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"8256:12:6"},"nodeType":"ModifierInvocation","src":"8256:22:6"}],"name":"getMetric","nameLocation":"8187:9:6","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"metricID","nameLocation":"8205:8:6","nodeType":"VariableDeclaration","scope":1120,"src":"8197:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"8197:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8196:18:6"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"id","nameLocation":"8318:2:6","nodeType":"VariableDeclaration","scope":1120,"src":"8310:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"8310:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"expectedLossPercent","nameLocation":"8342:19:6","nodeType":"VariableDeclaration","scope":1120,"src":"8334:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"8334:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"duration","nameLocation":"8383:8:6","nodeType":"VariableDeclaration","scope":1120,"src":"8375:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"8375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"startTime","nameLocation":"8413:9:6","nodeType":"VariableDeclaration","scope":1120,"src":"8405:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"8405:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"status","nameLocation":"8449:6:6","nodeType":"VariableDeclaration","scope":1120,"src":"8436:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"},"typeName":{"id":1083,"nodeType":"UserDefinedTypeName","pathNode":{"id":1082,"name":"MetricStatus","nameLocations":["8436:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":504,"src":"8436:12:6"},"referencedDeclaration":504,"src":"8436:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"bountyCollateral","nameLocation":"8477:16:6","nodeType":"VariableDeclaration","scope":1120,"src":"8469:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"8469:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"stakesInFavorCount","nameLocation":"8515:18:6","nodeType":"VariableDeclaration","scope":1120,"src":"8507:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"8507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"stakesAgainstCount","nameLocation":"8555:18:6","nodeType":"VariableDeclaration","scope":1120,"src":"8547:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"8547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8296:287:6"},"scope":1290,"src":"8178:764:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1138,"nodeType":"Block","src":"9243:55:6","statements":[{"expression":{"expression":{"baseExpression":{"id":1133,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9260:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1135,"indexExpression":{"id":1134,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9268:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9260:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":1136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9278:13:6","memberName":"stakesInFavor","nodeType":"MemberAccess","referencedDeclaration":521,"src":"9260:31:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"functionReturnParameters":1132,"id":1137,"nodeType":"Return","src":"9253:38:6"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"8952:139:6","text":" @dev Get stakes in favor of a metric\n @param metricID The ID of the metric\n @return Array of stakes in favor"},"functionSelector":"04b8ba5b","id":1139,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1126,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9194:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1127,"kind":"modifierInvocation","modifierName":{"id":1125,"name":"metricExists","nameLocations":["9181:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"9181:12:6"},"nodeType":"ModifierInvocation","src":"9181:22:6"}],"name":"getStakesInFavor","nameLocation":"9105:16:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"metricID","nameLocation":"9130:8:6","nodeType":"VariableDeclaration","scope":1139,"src":"9122:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"9122:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9121:18:6"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"9222:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"Stake","nameLocations":["9222:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"9222:5:6"},"referencedDeclaration":501,"src":"9222:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1130,"nodeType":"ArrayTypeName","src":"9222:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"src":"9221:16:6"},"scope":1290,"src":"9096:202:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1157,"nodeType":"Block","src":"9594:55:6","statements":[{"expression":{"expression":{"baseExpression":{"id":1152,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9611:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1154,"indexExpression":{"id":1153,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9619:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9611:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"id":1155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9629:13:6","memberName":"stakesAgainst","nodeType":"MemberAccess","referencedDeclaration":525,"src":"9611:31:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage","typeString":"struct MetricChallengeDAO.Stake storage ref[] storage ref"}},"functionReturnParameters":1151,"id":1156,"nodeType":"Return","src":"9604:38:6"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"9308:134:6","text":" @dev Get stakes against a metric\n @param metricID The ID of the metric\n @return Array of stakes against"},"functionSelector":"dc6e4495","id":1158,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1145,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9545:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1146,"kind":"modifierInvocation","modifierName":{"id":1144,"name":"metricExists","nameLocations":["9532:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"9532:12:6"},"nodeType":"ModifierInvocation","src":"9532:22:6"}],"name":"getStakesAgainst","nameLocation":"9456:16:6","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"metricID","nameLocation":"9481:8:6","nodeType":"VariableDeclaration","scope":1158,"src":"9473:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"9473:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9472:18:6"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"9573:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct MetricChallengeDAO.Stake[]"},"typeName":{"baseType":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"Stake","nameLocations":["9573:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"9573:5:6"},"referencedDeclaration":501,"src":"9573:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$501_storage_ptr","typeString":"struct MetricChallengeDAO.Stake"}},"id":1149,"nodeType":"ArrayTypeName","src":"9573:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$501_storage_$dyn_storage_ptr","typeString":"struct MetricChallengeDAO.Stake[]"}},"visibility":"internal"}],"src":"9572:16:6"},"scope":1290,"src":"9447:202:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1191,"nodeType":"Block","src":"9962:184:6","statements":[{"assignments":[1171],"declarations":[{"constant":false,"id":1171,"mutability":"mutable","name":"metric","nameLocation":"9987:6:6","nodeType":"VariableDeclaration","scope":1191,"src":"9972:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"},"typeName":{"id":1170,"nodeType":"UserDefinedTypeName","pathNode":{"id":1169,"name":"Metric","nameLocations":["9972:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"9972:6:6"},"referencedDeclaration":526,"src":"9972:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric"}},"visibility":"internal"}],"id":1175,"initialValue":{"baseExpression":{"id":1172,"name":"metrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9996:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Metric_$526_storage_$","typeString":"mapping(uint256 => struct MetricChallengeDAO.Metric storage ref)"}},"id":1174,"indexExpression":{"id":1173,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10004:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9996:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage","typeString":"struct MetricChallengeDAO.Metric storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9972:41:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1176,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10030:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10036:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"10030:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1178,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"10048:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10055:9:6","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":512,"src":"10048:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1180,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"10067:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10074:8:6","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":510,"src":"10067:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10048:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10030:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1184,"name":"metric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"10102:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Metric_$526_storage_ptr","typeString":"struct MetricChallengeDAO.Metric storage pointer"}},"id":1185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10109:6:6","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":515,"src":"10102:13:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1186,"name":"MetricStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"10119:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MetricStatus_$504_$","typeString":"type(enum MetricChallengeDAO.MetricStatus)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10132:7:6","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":502,"src":"10119:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_MetricStatus_$504","typeString":"enum MetricChallengeDAO.MetricStatus"}},"src":"10102:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10030:109:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1168,"id":1190,"nodeType":"Return","src":"10023:116:6"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"9659:162:6","text":" @dev Check if staking period is active for a metric\n @param metricID The ID of the metric\n @return True if staking period is active"},"functionSelector":"09eea131","id":1192,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1164,"name":"metricID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"9923:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1165,"kind":"modifierInvocation","modifierName":{"id":1163,"name":"metricExists","nameLocations":["9910:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"9910:12:6"},"nodeType":"ModifierInvocation","src":"9910:22:6"}],"name":"isStakingActive","nameLocation":"9835:15:6","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"metricID","nameLocation":"9859:8:6","nodeType":"VariableDeclaration","scope":1192,"src":"9851:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:18:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1192,"src":"9951:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1166,"name":"bool","nodeType":"ElementaryTypeName","src":"9951:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9950:6:6"},"scope":1290,"src":"9826:320:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1216,"nodeType":"Block","src":"10381:169:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"10395:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10395:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"10391:71:6","trueBody":{"id":1206,"nodeType":"Block","src":"10411:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1203,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"10432:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10432:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"RevertStatement","src":"10425:26:6"}]}},{"expression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1208,"name":"fixedStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"10471:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1209,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"10490:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10471:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1211,"nodeType":"ExpressionStatement","src":"10471:28:6"},{"eventCall":{"arguments":[{"id":1213,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"10533:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1212,"name":"StakeAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"10514:18:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10514:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"EmitStatement","src":"10509:34:6"}]},"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"10192:114:6","text":" @dev Update the fixed stake amount (only owner)\n @param newAmount New stake amount in wei"},"functionSelector":"7cabd293","id":1217,"implemented":true,"kind":"function","modifiers":[{"id":1198,"kind":"modifierInvocation","modifierName":{"id":1197,"name":"onlyOwner","nameLocations":["10371:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10371:9:6"},"nodeType":"ModifierInvocation","src":"10371:9:6"}],"name":"updateFixedStakeAmount","nameLocation":"10320:22:6","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"newAmount","nameLocation":"10351:9:6","nodeType":"VariableDeclaration","scope":1217,"src":"10343:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10342:19:6"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"10381:0:6"},"scope":1290,"src":"10311:239:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1257,"nodeType":"Block","src":"10738:254:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"10752:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1228,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10769:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1290","typeString":"contract MetricChallengeDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1290","typeString":"contract MetricChallengeDAO"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10761:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:6","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10761:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10775:7:6","memberName":"balance","nodeType":"MemberAccess","src":"10761:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10752:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"10748:89:6","trueBody":{"id":1235,"nodeType":"Block","src":"10784:53:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1232,"name":"InsufficientPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"10805:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10805:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"10798:28:6"}]}},{"assignments":[1238,null],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"success","nameLocation":"10861:7:6","nodeType":"VariableDeclaration","scope":1257,"src":"10856:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"10856:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1249,"initialValue":{"arguments":[{"hexValue":"","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10911:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1241,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"10882:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10882:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10874:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"10874:8:6","stateMutability":"payable","typeDescriptions":{}}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10891:4:6","memberName":"call","nodeType":"MemberAccess","src":"10874:21:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1245,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"10903:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10874:36:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10855:59:6"},{"condition":{"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10928:8:6","subExpression":{"id":1250,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"10929:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"nodeType":"IfStatement","src":"10924:62:6","trueBody":{"id":1255,"nodeType":"Block","src":"10938:48:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1252,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"10959:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10959:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"RevertStatement","src":"10952:23:6"}]}}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"10560:111:6","text":" @dev Emergency withdraw function (only owner)\n @param amount Amount to withdraw in wei"},"functionSelector":"5312ea8e","id":1258,"implemented":true,"kind":"function","modifiers":[{"id":1223,"kind":"modifierInvocation","modifierName":{"id":1222,"name":"onlyOwner","nameLocations":["10728:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10728:9:6"},"nodeType":"ModifierInvocation","src":"10728:9:6"}],"name":"emergencyWithdraw","nameLocation":"10685:17:6","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"amount","nameLocation":"10711:6:6","nodeType":"VariableDeclaration","scope":1258,"src":"10703:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"10703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10702:16:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"10738:0:6"},"scope":1290,"src":"10676:316:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1270,"nodeType":"Block","src":"11152:45:6","statements":[{"expression":{"expression":{"arguments":[{"id":1266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11177:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1290","typeString":"contract MetricChallengeDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MetricChallengeDAO_$1290","typeString":"contract MetricChallengeDAO"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11169:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"11169:7:6","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11169:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11183:7:6","memberName":"balance","nodeType":"MemberAccess","src":"11169:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1263,"id":1269,"nodeType":"Return","src":"11162:28:6"}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"11002:83:6","text":" @dev Get contract balance\n @return Contract balance in wei"},"functionSelector":"6f9fb98a","id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"11099:18:6","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"11117:2:6"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"11143:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11143:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11142:9:6"},"scope":1290,"src":"11090:107:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1279,"nodeType":"Block","src":"11273:50:6","statements":[{"expression":{"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"11283:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11307:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11311:5:6","memberName":"value","nodeType":"MemberAccess","src":"11307:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11283:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1278,"nodeType":"ExpressionStatement","src":"11283:33:6"}]},"id":1280,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"11253:2:6"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"11273:0:6"},"scope":1290,"src":"11246:77:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1288,"nodeType":"Block","src":"11361:50:6","statements":[{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1283,"name":"totalContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"11371:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11395:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11399:5:6","memberName":"value","nodeType":"MemberAccess","src":"11395:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11371:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"11371:33:6"}]},"id":1289,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"11341:2:6"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"11361:0:6"},"scope":1290,"src":"11333:78:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1291,"src":"389:11024:6","usedErrors":[13,18,191,569,571,573,575,577,579],"usedEvents":[24,543,551,557,563,567]}],"src":"32:11382:6"},"id":6},"contracts/SimpleShortContract.sol":{"ast":{"absolutePath":"contracts/SimpleShortContract.sol","exportedSymbols":{"Context":[177],"IPyth":[409],"IPythEvents":[439],"Ownable":[147],"PythStructs":[487],"ReentrancyGuard":[246],"SimpleShortContract":[1945]},"id":1946,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1292,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","file":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","id":1293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1946,"sourceUnit":410,"src":"58:50:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","id":1294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1946,"sourceUnit":488,"src":"109:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1946,"sourceUnit":247,"src":"166:59:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1946,"sourceUnit":148,"src":"226:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1298,"name":"ReentrancyGuard","nameLocations":["501:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"501:15:7"},"id":1299,"nodeType":"InheritanceSpecifier","src":"501:15:7"},{"baseName":{"id":1300,"name":"Ownable","nameLocations":["518:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"518:7:7"},"id":1301,"nodeType":"InheritanceSpecifier","src":"518:7:7"}],"canonicalName":"SimpleShortContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"280:188:7","text":" @title SimpleShortContract\n @dev A simple ETH shorting contract using Pyth Network price feeds\n @notice Users can open short positions on ETH and profit from price decreases"},"fullyImplemented":true,"id":1945,"linearizedBaseContracts":[1945,147,177,246],"name":"SimpleShortContract","nameLocation":"478:19:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f98d06f0","id":1304,"mutability":"immutable","name":"pyth","nameLocation":"555:4:7","nodeType":"VariableDeclaration","scope":1945,"src":"532:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"},"typeName":{"id":1303,"nodeType":"UserDefinedTypeName","pathNode":{"id":1302,"name":"IPyth","nameLocations":["532:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":409,"src":"532:5:7"},"referencedDeclaration":409,"src":"532:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"visibility":"public"},{"canonicalName":"SimpleShortContract.ShortPosition","id":1313,"members":[{"constant":false,"id":1306,"mutability":"mutable","name":"collateralAmount","nameLocation":"609:16:7","nodeType":"VariableDeclaration","scope":1313,"src":"601:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"entryPrice","nameLocation":"671:10:7","nodeType":"VariableDeclaration","scope":1313,"src":"665:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1307,"name":"int64","nodeType":"ElementaryTypeName","src":"665:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"timestamp","nameLocation":"749:9:7","nodeType":"VariableDeclaration","scope":1313,"src":"741:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"741:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"active","nameLocation":"806:6:7","nodeType":"VariableDeclaration","scope":1313,"src":"801:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"801:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ShortPosition","nameLocation":"577:13:7","nodeType":"StructDefinition","scope":1945,"src":"570:282:7","visibility":"public"},{"constant":false,"functionSelector":"55f57510","id":1318,"mutability":"mutable","name":"positions","nameLocation":"903:9:7","nodeType":"VariableDeclaration","scope":1945,"src":"862:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition)"},"typeName":{"id":1317,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"862:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"ShortPosition","nameLocations":["881:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1313,"src":"881:13:7"},"referencedDeclaration":1313,"src":"881:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"}}},"visibility":"public"},{"constant":true,"id":1321,"mutability":"constant","name":"PYTH_CONTRACT_SEPOLIA","nameLocation":"986:21:7","nodeType":"VariableDeclaration","scope":1945,"src":"969:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307844643234663834443336624639324336354639323330373539354336423939443336623666386334","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1010:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDd24f84D36bF92C65F92307595C6B99D36b6f8c4"},"visibility":"internal"},{"constant":true,"id":1324,"mutability":"constant","name":"ETH_USD_PRICE_ID","nameLocation":"1127:16:7","nodeType":"VariableDeclaration","scope":1945,"src":"1110:102:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866663631343931613933313131326464663162643831343763643162363431333735663739663538323531323664363635343830383734363334666430616365","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1146:66:7","typeDescriptions":{"typeIdentifier":"t_rational_115511665097946291959938613635867626708365621175334970235240266565768426883790_by_1","typeString":"int_const 1155...(70 digits omitted)...3790"},"value":"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"},"visibility":"internal"},{"constant":true,"id":1327,"mutability":"constant","name":"PRICE_STALENESS_THRESHOLD","nameLocation":"1265:25:7","nodeType":"VariableDeclaration","scope":1945,"src":"1248:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1293:3:7","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"internal"},{"constant":true,"id":1330,"mutability":"constant","name":"MAX_PROFIT_PERCENTAGE","nameLocation":"1332:21:7","nodeType":"VariableDeclaration","scope":1945,"src":"1315:44:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"internal"},{"constant":true,"id":1333,"mutability":"constant","name":"MIN_COLLATERAL","nameLocation":"1401:14:7","nodeType":"VariableDeclaration","scope":1945,"src":"1384:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e303031","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1418:11:7","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"0.001"},"visibility":"internal"},{"anonymous":false,"eventSelector":"91931fb6fdb7b87e2e5137745805e8584a7047067dbf59a30bcd96ddaf3f9875","id":1343,"name":"ShortOpened","nameLocation":"1481:11:7","nodeType":"EventDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1509:4:7","nodeType":"VariableDeclaration","scope":1343,"src":"1493:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"indexed":false,"mutability":"mutable","name":"collateral","nameLocation":"1523:10:7","nodeType":"VariableDeclaration","scope":1343,"src":"1515:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1541:5:7","nodeType":"VariableDeclaration","scope":1343,"src":"1535:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1338,"name":"int64","nodeType":"ElementaryTypeName","src":"1535:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1556:9:7","nodeType":"VariableDeclaration","scope":1343,"src":"1548:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1492:74:7"},"src":"1475:92:7"},{"anonymous":false,"eventSelector":"8f36bf8ad209b778c198ac14ac833b260f63cc14ef9dd9a6dfedef1106491592","id":1353,"name":"ShortClosed","nameLocation":"1578:11:7","nodeType":"EventDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1606:4:7","nodeType":"VariableDeclaration","scope":1353,"src":"1590:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"1590:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"indexed":false,"mutability":"mutable","name":"pnl","nameLocation":"1619:3:7","nodeType":"VariableDeclaration","scope":1353,"src":"1612:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1346,"name":"int256","nodeType":"ElementaryTypeName","src":"1612:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":false,"mutability":"mutable","name":"exitPrice","nameLocation":"1630:9:7","nodeType":"VariableDeclaration","scope":1353,"src":"1624:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1348,"name":"int64","nodeType":"ElementaryTypeName","src":"1624:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1649:9:7","nodeType":"VariableDeclaration","scope":1353,"src":"1641:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1589:70:7"},"src":"1572:88:7"},{"anonymous":false,"eventSelector":"5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695","id":1359,"name":"EmergencyWithdraw","nameLocation":"1671:17:7","nodeType":"EventDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1705:5:7","nodeType":"VariableDeclaration","scope":1359,"src":"1689:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1720:6:7","nodeType":"VariableDeclaration","scope":1359,"src":"1712:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1688:39:7"},"src":"1665:63:7"},{"errorSelector":"3a23d825","id":1361,"name":"InsufficientCollateral","nameLocation":"1765:22:7","nodeType":"ErrorDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"1787:2:7"},"src":"1759:31:7"},{"errorSelector":"6e8de458","id":1363,"name":"PositionAlreadyExists","nameLocation":"1801:21:7","nodeType":"ErrorDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"1822:2:7"},"src":"1795:30:7"},{"errorSelector":"33cbf2bc","id":1365,"name":"NoActivePosition","nameLocation":"1836:16:7","nodeType":"ErrorDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"1852:2:7"},"src":"1830:25:7"},{"errorSelector":"00bfc921","id":1367,"name":"InvalidPrice","nameLocation":"1866:12:7","nodeType":"ErrorDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"1878:2:7"},"src":"1860:21:7"},{"errorSelector":"b8250b64","id":1369,"name":"PriceTooStale","nameLocation":"1892:13:7","nodeType":"ErrorDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[],"src":"1905:2:7"},"src":"1886:22:7"},{"errorSelector":"90b8ec18","id":1371,"name":"TransferFailed","nameLocation":"1919:14:7","nodeType":"ErrorDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[],"src":"1933:2:7"},"src":"1913:23:7"},{"errorSelector":"7d7f926b","id":1373,"name":"InsufficientUpdateFee","nameLocation":"1947:21:7","nodeType":"ErrorDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"1968:2:7"},"src":"1941:30:7"},{"body":{"id":1386,"nodeType":"Block","src":"2015:52:7","statements":[{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1380,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2025:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1382,"name":"PYTH_CONTRACT_SEPOLIA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2038:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1381,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2032:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$409_$","typeString":"type(contract IPyth)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2032:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"src":"2025:35:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1385,"nodeType":"ExpressionStatement","src":"2025:35:7"}]},"id":1387,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2003:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2007:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2003:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1378,"kind":"baseConstructorSpecifier","modifierName":{"id":1375,"name":"Ownable","nameLocations":["1995:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1995:7:7"},"nodeType":"ModifierInvocation","src":"1995:19:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"1992:2:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"2015:0:7"},"scope":1945,"src":"1981:86:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1434,"nodeType":"Block","src":"2327:360:7","statements":[{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"priceData","nameLocation":"2362:9:7","nodeType":"VariableDeclaration","scope":1434,"src":"2337:34:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":1398,"nodeType":"UserDefinedTypeName","pathNode":{"id":1397,"name":"PythStructs.Price","nameLocations":["2337:11:7","2349:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"2337:17:7"},"referencedDeclaration":450,"src":"2337:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":1404,"initialValue":{"arguments":[{"id":1402,"name":"ETH_USD_PRICE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2394:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1400,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2374:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2379:14:7","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":262,"src":"2374:19:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$450_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2374:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"2337:74:7"},{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1405,"name":"priceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2434:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2444:5:7","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2434:15:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2434:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"nodeType":"IfStatement","src":"2430:47:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1409,"name":"InvalidPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2463:12:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"RevertStatement","src":"2456:21:7"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1413,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2491:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2491:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1415,"name":"priceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2509:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:11:7","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":449,"src":"2509:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2491:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1418,"name":"PRICE_STALENESS_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2533:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2491:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1424,"nodeType":"IfStatement","src":"2487:120:7","trueBody":{"id":1423,"nodeType":"Block","src":"2560:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1420,"name":"PriceTooStale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2581:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"RevertStatement","src":"2574:22:7"}]}},{"expression":{"components":[{"expression":{"id":1425,"name":"priceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2633:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:5:7","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2633:15:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"expression":{"id":1429,"name":"priceData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2657:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$450_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2667:11:7","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":449,"src":"2657:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2650:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1427,"name":"uint64","nodeType":"ElementaryTypeName","src":"2650:6:7","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2632:48:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_uint64_$","typeString":"tuple(int64,uint64)"}},"functionReturnParameters":1394,"id":1433,"nodeType":"Return","src":"2625:55:7"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"2077:166:7","text":" @dev Get current ETH price with validation\n @return price Current ETH/USD price (8 decimals)\n @return timestamp Price publish timestamp"},"functionSelector":"eb91d37e","id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"2257:15:7","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"2272:2:7"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"price","nameLocation":"2302:5:7","nodeType":"VariableDeclaration","scope":1435,"src":"2296:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1390,"name":"int64","nodeType":"ElementaryTypeName","src":"2296:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"timestamp","nameLocation":"2316:9:7","nodeType":"VariableDeclaration","scope":1435,"src":"2309:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1392,"name":"uint64","nodeType":"ElementaryTypeName","src":"2309:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2295:31:7"},"scope":1945,"src":"2248:439:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1518,"nodeType":"Block","src":"2890:1009:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2904:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:5:7","memberName":"value","nodeType":"MemberAccess","src":"2904:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1446,"name":"MIN_COLLATERAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2916:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2904:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"nodeType":"IfStatement","src":"2900:63:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1448,"name":"InsufficientCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"2939:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2939:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"2932:31:7"}},{"condition":{"expression":{"baseExpression":{"id":1452,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"2977:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1455,"indexExpression":{"expression":{"id":1453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2987:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2991:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2987:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2977:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:7","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"2977:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1460,"nodeType":"IfStatement","src":"2973:64:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1457,"name":"PositionAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"3014:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"RevertStatement","src":"3007:30:7"}},{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"updateFee","nameLocation":"3093:9:7","nodeType":"VariableDeclaration","scope":1518,"src":"3088:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint","nodeType":"ElementaryTypeName","src":"3088:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"arguments":[{"id":1465,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3123:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":1463,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3105:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:12:7","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":322,"src":"3105:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3105:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3088:51:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3153:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3157:5:7","memberName":"value","nodeType":"MemberAccess","src":"3153:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1470,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3166:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3153:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1475,"nodeType":"IfStatement","src":"3149:58:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1472,"name":"InsufficientUpdateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"3184:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"RevertStatement","src":"3177:30:7"}},{"expression":{"arguments":[{"id":1481,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3301:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":1476,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3261:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3266:16:7","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":300,"src":"3261:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1479,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3290:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3261:39:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3261:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"3261:56:7"},{"assignments":[1485,null],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"currentPrice","nameLocation":"3392:12:7","nodeType":"VariableDeclaration","scope":1518,"src":"3386:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1484,"name":"int64","nodeType":"ElementaryTypeName","src":"3386:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},null],"id":1488,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1486,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3410:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int64_$_t_uint64_$","typeString":"function () view returns (int64,uint64)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_uint64_$","typeString":"tuple(int64,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"3385:42:7"},{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"actualCollateral","nameLocation":"3510:16:7","nodeType":"VariableDeclaration","scope":1518,"src":"3502:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1495,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3529:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3533:5:7","memberName":"value","nodeType":"MemberAccess","src":"3529:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1493,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3541:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3529:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3502:48:7"},{"expression":{"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1496,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3595:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1499,"indexExpression":{"expression":{"id":1497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3605:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3609:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3605:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3595:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1501,"name":"actualCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"3665:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1502,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"3707:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":1503,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"3744:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3781:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1500,"name":"ShortPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"3619:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ShortPosition_$1313_storage_ptr_$","typeString":"type(struct SimpleShortContract.ShortPosition storage pointer)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3647:16:7","3695:10:7","3733:9:7","3773:6:7"],"names":["collateralAmount","entryPrice","timestamp","active"],"nodeType":"FunctionCall","src":"3619:177:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_memory_ptr","typeString":"struct SimpleShortContract.ShortPosition memory"}},"src":"3595:201:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"id":1508,"nodeType":"ExpressionStatement","src":"3595:201:7"},{"eventCall":{"arguments":[{"expression":{"id":1510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3832:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3836:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3832:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1512,"name":"actualCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"3844:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1513,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"3862:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":1514,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3876:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3882:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"3876:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"ShortOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3820:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_int64_$_t_uint256_$returns$__$","typeString":"function (address,uint256,int64,uint256)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3820:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"EmitStatement","src":"3815:77:7"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"2697:105:7","text":" @dev Open a short position on ETH\n @param priceUpdateData Pyth price update data"},"functionSelector":"86e1ce5e","id":1519,"implemented":true,"kind":"function","modifiers":[{"id":1442,"kind":"modifierInvocation","modifierName":{"id":1441,"name":"nonReentrant","nameLocations":["2877:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"2877:12:7"},"nodeType":"ModifierInvocation","src":"2877:12:7"}],"name":"openShort","nameLocation":"2816:9:7","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"priceUpdateData","nameLocation":"2843:15:7","nodeType":"VariableDeclaration","scope":1519,"src":"2826:32:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"2826:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1438,"nodeType":"ArrayTypeName","src":"2826:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2825:34:7"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"2890:0:7"},"scope":1945,"src":"2807:1092:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1737,"nodeType":"Block","src":"4113:2252:7","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"position","nameLocation":"4145:8:7","nodeType":"VariableDeclaration","scope":1737,"src":"4123:30:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"},"typeName":{"id":1529,"nodeType":"UserDefinedTypeName","pathNode":{"id":1528,"name":"ShortPosition","nameLocations":["4123:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1313,"src":"4123:13:7"},"referencedDeclaration":1313,"src":"4123:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"}},"visibility":"internal"}],"id":1535,"initialValue":{"baseExpression":{"id":1531,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4156:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1534,"indexExpression":{"expression":{"id":1532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4166:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4170:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4166:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4156:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4123:54:7"},{"condition":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4191:16:7","subExpression":{"expression":{"id":1536,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4192:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:7","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"4192:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"4187:47:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1539,"name":"NoActivePosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4216:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4216:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"RevertStatement","src":"4209:25:7"}},{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"updateFee","nameLocation":"4290:9:7","nodeType":"VariableDeclaration","scope":1737,"src":"4285:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint","nodeType":"ElementaryTypeName","src":"4285:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"arguments":[{"id":1547,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"4320:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":1545,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4302:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4307:12:7","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":322,"src":"4302:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4285:51:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4350:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4354:5:7","memberName":"value","nodeType":"MemberAccess","src":"4350:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1552,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4362:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4350:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"IfStatement","src":"4346:57:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1554,"name":"InsufficientUpdateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"4380:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4380:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"RevertStatement","src":"4373:30:7"}},{"expression":{"arguments":[{"id":1563,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"4497:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":1558,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4457:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4462:16:7","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":300,"src":"4457:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1561,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4486:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4457:39:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4457:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"4457:56:7"},{"assignments":[1567,null],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"currentPrice","nameLocation":"4588:12:7","nodeType":"VariableDeclaration","scope":1737,"src":"4582:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1566,"name":"int64","nodeType":"ElementaryTypeName","src":"4582:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},null],"id":1570,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1568,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4606:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int64_$_t_uint64_$","typeString":"function () view returns (int64,uint64)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_uint64_$","typeString":"tuple(int64,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"4581:42:7"},{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"priceDiff","nameLocation":"4724:9:7","nodeType":"VariableDeclaration","scope":1737,"src":"4717:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1571,"name":"int256","nodeType":"ElementaryTypeName","src":"4717:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1577,"initialValue":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1573,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4736:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4745:10:7","memberName":"entryPrice","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"4736:19:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1575,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4758:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"4736:34:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"VariableDeclarationStatement","src":"4717:53:7"},{"assignments":[1579],"declarations":[{"constant":false,"id":1579,"mutability":"mutable","name":"pnlPercentage","nameLocation":"4787:13:7","nodeType":"VariableDeclaration","scope":1737,"src":"4780:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1578,"name":"int256","nodeType":"ElementaryTypeName","src":"4780:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1587,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"priceDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"4804:9:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4816:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4804:17:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4803:19:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1584,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4825:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4834:10:7","memberName":"entryPrice","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"4825:19:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"4803:41:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4780:64:7"},{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"pnl","nameLocation":"4877:3:7","nodeType":"VariableDeclaration","scope":1737,"src":"4870:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1588,"name":"int256","nodeType":"ElementaryTypeName","src":"4870:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1600,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1592,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4891:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4900:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"4891:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4884:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1590,"name":"int256","nodeType":"ElementaryTypeName","src":"4884:6:7","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4884:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1595,"name":"pnlPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4920:13:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4884:49:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4883:51:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4937:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4883:59:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4870:72:7"},{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"finalPayout","nameLocation":"5019:11:7","nodeType":"VariableDeclaration","scope":1737,"src":"5011:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1604,"initialValue":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5033:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5011:23:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5048:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5054:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5048:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1668,"nodeType":"Block","src":"5410:298:7","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"loss","nameLocation":"5478:4:7","nodeType":"VariableDeclaration","scope":1668,"src":"5470:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"5470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1649,"initialValue":{"arguments":[{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5493:4:7","subExpression":{"id":1646,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5494:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5485:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:7","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5485:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5470:28:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5516:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1651,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5524:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5533:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"5524:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5516:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1666,"nodeType":"Block","src":"5619:79:7","statements":[{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"finalPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5637:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1660,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5651:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5660:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"5651:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1662,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5679:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5651:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5637:46:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"5637:46:7"}]},"id":1667,"nodeType":"IfStatement","src":"5512:186:7","trueBody":{"id":1658,"nodeType":"Block","src":"5551:62:7","statements":[{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"finalPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5569:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5583:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5569:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"5569:15:7"}]}}]},"id":1669,"nodeType":"IfStatement","src":"5044:664:7","trueBody":{"id":1641,"nodeType":"Block","src":"5057:347:7","statements":[{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"profit","nameLocation":"5131:6:7","nodeType":"VariableDeclaration","scope":1641,"src":"5123:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5123:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[{"id":1612,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5148:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5140:7:7","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5123:29:7"},{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"maxProfit","nameLocation":"5174:9:7","nodeType":"VariableDeclaration","scope":1641,"src":"5166:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"5166:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1624,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1617,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5187:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5196:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"5187:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1619,"name":"MAX_PROFIT_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5215:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5187:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5186:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5240:3:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5186:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5166:77:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"5261:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1626,"name":"maxProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"5270:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5261:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1633,"nodeType":"IfStatement","src":"5257:75:7","trueBody":{"id":1632,"nodeType":"Block","src":"5281:51:7","statements":[{"expression":{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1628,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"5299:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1629,"name":"maxProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"5308:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5299:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1631,"nodeType":"ExpressionStatement","src":"5299:18:7"}]}},{"expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1634,"name":"finalPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5345:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1635,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5359:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5368:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"5359:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1637,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"5387:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5359:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5345:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1640,"nodeType":"ExpressionStatement","src":"5345:48:7"}]}},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1670,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5761:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5770:6:7","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"5761:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5779:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5761:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1675,"nodeType":"ExpressionStatement","src":"5761:23:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"finalPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5869:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5883:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5869:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"5865:164:7","trueBody":{"id":1698,"nodeType":"Block","src":"5886:143:7","statements":[{"assignments":[1680,null],"declarations":[{"constant":false,"id":1680,"mutability":"mutable","name":"success","nameLocation":"5906:7:7","nodeType":"VariableDeclaration","scope":1698,"src":"5901:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1679,"name":"bool","nodeType":"ElementaryTypeName","src":"5901:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1691,"initialValue":{"arguments":[{"hexValue":"","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5964:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":1683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5927:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5931:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5927:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5919:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"5919:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5919:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5939:4:7","memberName":"call","nodeType":"MemberAccess","src":"5919:24:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1687,"name":"finalPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5951:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5919:44:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5919:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5900:67:7"},{"condition":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5985:8:7","subExpression":{"id":1692,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"5986:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"IfStatement","src":"5981:37:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1694,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6002:14:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6002:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"RevertStatement","src":"5995:23:7"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6100:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6104:5:7","memberName":"value","nodeType":"MemberAccess","src":"6100:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1702,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6112:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6100:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1727,"nodeType":"IfStatement","src":"6096:180:7","trueBody":{"id":1726,"nodeType":"Block","src":"6123:153:7","statements":[{"assignments":[1705,null],"declarations":[{"constant":false,"id":1705,"mutability":"mutable","name":"success","nameLocation":"6143:7:7","nodeType":"VariableDeclaration","scope":1726,"src":"6138:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1704,"name":"bool","nodeType":"ElementaryTypeName","src":"6138:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1719,"initialValue":{"arguments":[{"hexValue":"","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6211:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":1708,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6164:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:6:7","memberName":"sender","nodeType":"MemberAccess","src":"6164:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6156:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"6156:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6176:4:7","memberName":"call","nodeType":"MemberAccess","src":"6156:24:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6188:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:5:7","memberName":"value","nodeType":"MemberAccess","src":"6188:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1714,"name":"updateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6200:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6188:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6156:54:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6137:77:7"},{"condition":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6232:8:7","subExpression":{"id":1720,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6233:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1725,"nodeType":"IfStatement","src":"6228:37:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1722,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6249:14:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"RevertStatement","src":"6242:23:7"}}]}},{"eventCall":{"arguments":[{"expression":{"id":1729,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6311:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6315:6:7","memberName":"sender","nodeType":"MemberAccess","src":"6311:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"6323:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1732,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6328:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":1733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6342:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"6342:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1728,"name":"ShortClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6299:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$_t_int64_$_t_uint256_$returns$__$","typeString":"function (address,int256,int64,uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6299:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"EmitStatement","src":"6294:64:7"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"3909:115:7","text":" @dev Close short position and calculate P&L\n @param priceUpdateData Pyth price update data"},"functionSelector":"2eb99760","id":1738,"implemented":true,"kind":"function","modifiers":[{"id":1526,"kind":"modifierInvocation","modifierName":{"id":1525,"name":"nonReentrant","nameLocations":["4100:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4100:12:7"},"nodeType":"ModifierInvocation","src":"4100:12:7"}],"name":"closeShort","nameLocation":"4038:10:7","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"priceUpdateData","nameLocation":"4066:15:7","nodeType":"VariableDeclaration","scope":1738,"src":"4049:32:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"4049:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1522,"nodeType":"ArrayTypeName","src":"4049:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4048:34:7"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"4113:0:7"},"scope":1945,"src":"4029:2336:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1805,"nodeType":"Block","src":"6746:543:7","statements":[{"assignments":[1752],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"position","nameLocation":"6778:8:7","nodeType":"VariableDeclaration","scope":1805,"src":"6756:30:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"},"typeName":{"id":1751,"nodeType":"UserDefinedTypeName","pathNode":{"id":1750,"name":"ShortPosition","nameLocations":["6756:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1313,"src":"6756:13:7"},"referencedDeclaration":1313,"src":"6756:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"}},"visibility":"internal"}],"id":1756,"initialValue":{"baseExpression":{"id":1753,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"6789:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1755,"indexExpression":{"id":1754,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"6799:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6789:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6756:48:7"},{"condition":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6818:16:7","subExpression":{"expression":{"id":1757,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6819:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6828:6:7","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"6819:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"IfStatement","src":"6814:47:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1760,"name":"NoActivePosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"6843:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1762,"nodeType":"RevertStatement","src":"6836:25:7"}},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1764,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6932:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},null],"id":1765,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6931:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$__$","typeString":"tuple(int64,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1766,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"6950:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int64_$_t_uint64_$","typeString":"function () view returns (int64,uint64)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6950:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_uint64_$","typeString":"tuple(int64,uint64)"}},"src":"6931:36:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"6931:36:7"},{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"priceDiff","nameLocation":"7018:9:7","nodeType":"VariableDeclaration","scope":1805,"src":"7011:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1770,"name":"int256","nodeType":"ElementaryTypeName","src":"7011:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1776,"initialValue":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1772,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"7030:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:10:7","memberName":"entryPrice","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"7030:19:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1774,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"7052:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"7030:34:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"VariableDeclarationStatement","src":"7011:53:7"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1777,"name":"pnlPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7074:13:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"priceDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7091:9:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7103:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7091:17:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7090:19:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1782,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"7112:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7121:10:7","memberName":"entryPrice","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"7112:19:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"7090:41:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7074:57:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1786,"nodeType":"ExpressionStatement","src":"7074:57:7"},{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7157:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1790,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"7171:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition storage pointer"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7180:16:7","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"7171:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7164:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1788,"name":"int256","nodeType":"ElementaryTypeName","src":"7164:6:7","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7164:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1793,"name":"pnlPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7200:13:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7164:49:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7163:51:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7217:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7163:59:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7157:65:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1799,"nodeType":"ExpressionStatement","src":"7157:65:7"},{"expression":{"components":[{"id":1800,"name":"pnl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7249:3:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1801,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"7254:12:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":1802,"name":"pnlPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7268:13:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7248:34:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int64_$_t_int256_$","typeString":"tuple(int256,int64,int256)"}},"functionReturnParameters":1749,"id":1804,"nodeType":"Return","src":"7241:41:7"}]},"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"6375:258:7","text":" @dev View current P&L without closing position\n @param user Address of the user\n @return pnl Current profit/loss in wei\n @return currentPrice Current ETH price\n @return pnlPercentage P&L as percentage (basis points)"},"functionSelector":"36198eb9","id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"viewPnL","nameLocation":"6647:7:7","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"user","nameLocation":"6663:4:7","nodeType":"VariableDeclaration","scope":1806,"src":"6655:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6654:14:7"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"pnl","nameLocation":"6699:3:7","nodeType":"VariableDeclaration","scope":1806,"src":"6692:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1743,"name":"int256","nodeType":"ElementaryTypeName","src":"6692:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"currentPrice","nameLocation":"6710:12:7","nodeType":"VariableDeclaration","scope":1806,"src":"6704:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1745,"name":"int64","nodeType":"ElementaryTypeName","src":"6704:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"pnlPercentage","nameLocation":"6731:13:7","nodeType":"VariableDeclaration","scope":1806,"src":"6724:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1747,"name":"int256","nodeType":"ElementaryTypeName","src":"6724:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6691:54:7"},"scope":1945,"src":"6638:651:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1819,"nodeType":"Block","src":"7539:39:7","statements":[{"expression":{"baseExpression":{"id":1815,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7556:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1817,"indexExpression":{"id":1816,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7566:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7556:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"functionReturnParameters":1814,"id":1818,"nodeType":"Return","src":"7549:22:7"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"7299:146:7","text":" @dev Get position details for a user\n @param user Address of the user\n @return position The user's position details"},"functionSelector":"16c19739","id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"getPosition","nameLocation":"7459:11:7","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"user","nameLocation":"7479:4:7","nodeType":"VariableDeclaration","scope":1820,"src":"7471:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"7471:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7470:14:7"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"position","nameLocation":"7529:8:7","nodeType":"VariableDeclaration","scope":1820,"src":"7508:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_memory_ptr","typeString":"struct SimpleShortContract.ShortPosition"},"typeName":{"id":1812,"nodeType":"UserDefinedTypeName","pathNode":{"id":1811,"name":"ShortPosition","nameLocations":["7508:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1313,"src":"7508:13:7"},"referencedDeclaration":1313,"src":"7508:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage_ptr","typeString":"struct SimpleShortContract.ShortPosition"}},"visibility":"internal"}],"src":"7507:31:7"},"scope":1945,"src":"7450:128:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1833,"nodeType":"Block","src":"7834:46:7","statements":[{"expression":{"expression":{"baseExpression":{"id":1828,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7851:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ShortPosition_$1313_storage_$","typeString":"mapping(address => struct SimpleShortContract.ShortPosition storage ref)"}},"id":1830,"indexExpression":{"id":1829,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"7861:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7851:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_ShortPosition_$1313_storage","typeString":"struct SimpleShortContract.ShortPosition storage ref"}},"id":1831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7867:6:7","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"7851:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1827,"id":1832,"nodeType":"Return","src":"7844:29:7"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"7588:159:7","text":" @dev Check if user has an active position\n @param user Address of the user\n @return hasPosition True if user has active position"},"functionSelector":"93b57f99","id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"hasActivePosition","nameLocation":"7761:17:7","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"user","nameLocation":"7787:4:7","nodeType":"VariableDeclaration","scope":1834,"src":"7779:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"7779:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7778:14:7"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"hasPosition","nameLocation":"7821:11:7","nodeType":"VariableDeclaration","scope":1834,"src":"7816:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1825,"name":"bool","nodeType":"ElementaryTypeName","src":"7816:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7815:18:7"},"scope":1945,"src":"7752:128:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1848,"nodeType":"Block","src":"8145:58:7","statements":[{"expression":{"arguments":[{"id":1845,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8180:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":1843,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8162:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8167:12:7","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":322,"src":"8162:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8162:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1847,"nodeType":"Return","src":"8155:41:7"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"7890:161:7","text":" @dev Get the required update fee for price updates\n @param priceUpdateData Pyth price update data\n @return fee Required fee in wei"},"functionSelector":"d47eed45","id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"8065:12:7","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"priceUpdateData","nameLocation":"8095:15:7","nodeType":"VariableDeclaration","scope":1849,"src":"8078:32:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"8078:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1837,"nodeType":"ArrayTypeName","src":"8078:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"8077:34:7"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"fee","nameLocation":"8140:3:7","nodeType":"VariableDeclaration","scope":1849,"src":"8135:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint","nodeType":"ElementaryTypeName","src":"8135:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8134:10:7"},"scope":1945,"src":"8056:147:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1871,"nodeType":"Block","src":"8562:126:7","statements":[{"expression":{"components":[{"expression":{"arguments":[{"id":1861,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8601:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:7","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8593:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8607:7:7","memberName":"balance","nodeType":"MemberAccess","src":"8593:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1866,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8636:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPyth_$409","typeString":"contract IPyth"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8628:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"8628:7:7","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8628:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"ETH_USD_PRICE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8655:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8579:102:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_bytes32_$","typeString":"tuple(uint256,address,bytes32)"}},"functionReturnParameters":1858,"id":1870,"nodeType":"Return","src":"8572:109:7"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"8213:203:7","text":" @dev Get contract statistics\n @return totalBalance Total ETH balance in contract\n @return pythContract Address of Pyth contract\n @return priceId ETH/USD price feed ID"},"functionSelector":"7cc1f867","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"getContractInfo","nameLocation":"8430:15:7","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"8445:2:7"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"totalBalance","nameLocation":"8488:12:7","nodeType":"VariableDeclaration","scope":1872,"src":"8480:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8480:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"pythContract","nameLocation":"8518:12:7","nodeType":"VariableDeclaration","scope":1872,"src":"8510:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"8510:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"priceId","nameLocation":"8548:7:7","nodeType":"VariableDeclaration","scope":1872,"src":"8540:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8470:91:7"},"scope":1945,"src":"8421:267:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1929,"nodeType":"Block","src":"8881:367:7","statements":[{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"withdrawAmount","nameLocation":"8899:14:7","nodeType":"VariableDeclaration","scope":1929,"src":"8891:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"8891:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1892,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8916:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8926:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8916:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1890,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8916:44:7","trueExpression":{"expression":{"arguments":[{"id":1887,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8938:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8930:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"8930:7:7","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8930:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8944:7:7","memberName":"balance","nodeType":"MemberAccess","src":"8930:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8891:69:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"8978:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1897,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9004:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleShortContract_$1945","typeString":"contract SimpleShortContract"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"8996:7:7","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9010:7:7","memberName":"balance","nodeType":"MemberAccess","src":"8996:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8978:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9019:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8970:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8970:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"ExpressionStatement","src":"8970:72:7"},{"assignments":[1905,null],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"success","nameLocation":"9067:7:7","nodeType":"VariableDeclaration","scope":1929,"src":"9062:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1904,"name":"bool","nodeType":"ElementaryTypeName","src":"9062:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1916,"initialValue":{"arguments":[{"hexValue":"","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9125:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"9088:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9088:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9080:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"9080:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9080:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9097:4:7","memberName":"call","nodeType":"MemberAccess","src":"9080:21:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1912,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"9109:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9080:44:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9080:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9061:67:7"},{"condition":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9142:8:7","subExpression":{"id":1917,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"9143:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"IfStatement","src":"9138:37:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1919,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"9159:14:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9159:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"RevertStatement","src":"9152:23:7"}},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1924,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"9217:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9217:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"9226:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1923,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"9199:17:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9199:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"EmitStatement","src":"9194:47:7"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"8698:116:7","text":" @dev Emergency withdraw function (owner only)\n @param amount Amount to withdraw (0 for all)"},"functionSelector":"5312ea8e","id":1930,"implemented":true,"kind":"function","modifiers":[{"id":1878,"kind":"modifierInvocation","modifierName":{"id":1877,"name":"onlyOwner","nameLocations":["8871:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8871:9:7"},"nodeType":"ModifierInvocation","src":"8871:9:7"}],"name":"emergencyWithdraw","nameLocation":"8828:17:7","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"amount","nameLocation":"8854:6:7","nodeType":"VariableDeclaration","scope":1930,"src":"8846:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8846:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8845:16:7"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"8881:0:7"},"scope":1945,"src":"8819:429:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1934,"nodeType":"Block","src":"9344:81:7","statements":[]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"9258:54:7","text":" @dev Receive function to accept ETH"},"id":1935,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"9324:2:7"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"9344:0:7"},"scope":1945,"src":"9317:108:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1943,"nodeType":"Block","src":"9509:45:7","statements":[{"expression":{"arguments":[{"hexValue":"46756e6374696f6e206e6f7420666f756e64","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9526:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d","typeString":"literal_string \"Function not found\""},"value":"Function not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d","typeString":"literal_string \"Function not found\""}],"id":1939,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9519:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9519:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1942,"nodeType":"ExpressionStatement","src":"9519:28:7"}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"9435:41:7","text":" @dev Fallback function"},"id":1944,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"9489:2:7"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"9509:0:7"},"scope":1945,"src":"9481:73:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1946,"src":"469:9087:7","usedErrors":[13,18,191,1361,1363,1365,1367,1369,1371,1373],"usedEvents":[24,1343,1353,1359]}],"src":"32:9525:7"},"id":7}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getTwapUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minAllowedPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxAllowedPublishTime","type":"uint64"},{"internalType":"bool","name":"checkUniqueness","type":"bool"},{"internalType":"bool","name":"checkUpdateDataIsMinimal","type":"bool"},{"internalType":"bool","name":"storeUpdatesIfFresh","type":"bool"}],"name":"parsePriceFeedUpdatesWithConfig","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"},{"internalType":"uint64[]","name":"slots","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"}],"name":"parseTwapPriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"twap","type":"tuple"},{"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"internalType":"struct PythStructs.TwapPriceFeed[]","name":"twapPriceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getTwapUpdateFee(bytes[])":"5f674e35","getUpdateFee(bytes[])":"d47eed45","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)":"3a229d18","parseTwapPriceFeedUpdates(bytes[],bytes32[])":"eb942158","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"PythStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d1655f82bf7019db0de2b79c4aac6b4a3176eb55bfd29c84ae9a3f11212580b664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH6 0x5F82BF7019DB 0xD 0xE2 0xB7 SWAP13 0x4A 0xAC PUSH12 0x4A3176EB55BFD29C84AE9A3F GT 0x21 0x25 DUP1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"64:2355:5:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220d1655f82bf7019db0de2b79c4aac6b4a3176eb55bfd29c84ae9a3f11212580b664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH6 0x5F82BF7019DB 0xD 0xE2 0xB7 SWAP13 0x4A 0xAC PUSH12 0x4A3176EB55BFD29C84AE9A3F GT 0x21 0x25 DUP1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"64:2355:5:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"contracts/MetricChallengeDAO.sol":{"MetricChallengeDAO":{"abi":[{"inputs":[{"internalType":"uint256","name":"_fixedStakeAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InvalidParameters","type":"error"},{"inputs":[],"name":"MetricAlreadyResolved","type":"error"},{"inputs":[],"name":"MetricNotFound","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"StakingPeriodOver","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":false,"internalType":"string","name":"winningSide","type":"string"}],"name":"MetricResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"}],"name":"MetricSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"StakeAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"metricID","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"string","name":"side","type":"string"}],"name":"Staked","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fixedStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getMetric","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"enum MetricChallengeDAO.MetricStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"},{"internalType":"uint256","name":"stakesInFavorCount","type":"uint256"},{"internalType":"uint256","name":"stakesAgainstCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getStakesAgainst","outputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct MetricChallengeDAO.Stake[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"getStakesInFavor","outputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct MetricChallengeDAO.Stake[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"isStakingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"metrics","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"enum MetricChallengeDAO.MetricStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextMetricID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"},{"internalType":"uint256","name":"actualLossPercent","type":"uint256"}],"name":"resolveMetric","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"stakeAgainst","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"metricID","type":"uint256"}],"name":"stakeInFavor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"expectedLossPercent","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"bountyCollateral","type":"uint256"}],"name":"submitMetric","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"updateFixedStakeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_199":{"entryPoint":null,"id":199,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_597":{"entryPoint":null,"id":597,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":113,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:408:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:103:8","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:8"},"nodeType":"YulFunctionCall","src":"143:12:8"},"nodeType":"YulExpressionStatement","src":"143:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:8"},"nodeType":"YulFunctionCall","src":"112:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:8"},"nodeType":"YulFunctionCall","src":"108:32:8"},"nodeType":"YulIf","src":"105:52:8"},{"nodeType":"YulAssignment","src":"166:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"182:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"176:5:8"},"nodeType":"YulFunctionCall","src":"176:16:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"166:6:8"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:8","type":""}],"src":"14:184:8"},{"body":{"nodeType":"YulBlock","src":"304:102:8","statements":[{"nodeType":"YulAssignment","src":"314:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"326:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"337:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"322:3:8"},"nodeType":"YulFunctionCall","src":"322:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"314:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"356:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"371:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"387:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"392:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"383:3:8"},"nodeType":"YulFunctionCall","src":"383:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"396:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"379:3:8"},"nodeType":"YulFunctionCall","src":"379:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"367:3:8"},"nodeType":"YulFunctionCall","src":"367:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"349:6:8"},"nodeType":"YulFunctionCall","src":"349:51:8"},"nodeType":"YulExpressionStatement","src":"349:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"273:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"284:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"295:4:8","type":""}],"src":"203:203:8"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516113c13803806113c183398101604081905261002f916100c3565b6001600055338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610071565b5060016003556004556100dc565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100d557600080fd5b5051919050565b6112d6806100eb6000396000f3fe60806040526004361061010d5760003560e01c80636f9fb98a116100955780638da5cb5b116100645780638da5cb5b1461033657806398dea89c1461035e578063bac03cd71461037e578063dc6e449514610394578063f2fde38b146103b45761012c565b80636f9fb98a146102ce578063715018a6146102e15780637776eab6146102f65780637cabd293146103165761012c565b80635312ea8e116100dc5780635312ea8e146101db578063582bd8f1146101fd5780635af01b91146102315780636d9aac62146102475780636ec1b041146102ae5761012c565b806304b8ba5b1461013e57806309eea13114610174578063312c9e87146101a45780633937066c146101c55761012c565b3661012c5734600560008282546101249190611019565b925050819055005b34600560008282546101249190611019565b34801561014a57600080fd5b5061015e610159366004611032565b6103d4565b60405161016b919061104b565b60405180910390f35b34801561018057600080fd5b5061019461018f366004611032565b610484565b604051901515815260200161016b565b6101b76101b23660046110a3565b610506565b60405190815260200161016b565b3480156101d157600080fd5b506101b760035481565b3480156101e757600080fd5b506101fb6101f6366004611032565b6105e5565b005b34801561020957600080fd5b5061021d610218366004611032565b610697565b60405161016b989796959493929190611107565b34801561023d57600080fd5b506101b760045481565b34801561025357600080fd5b5061029c610262366004611032565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401549294939192909160ff169086565b60405161016b96959493929190611151565b3480156102ba57600080fd5b506101fb6102c9366004611032565b61071a565b3480156102da57600080fd5b50476101b7565b3480156102ed57600080fd5b506101fb6108a1565b34801561030257600080fd5b506101fb610311366004611032565b6108b5565b34801561032257600080fd5b506101fb610331366004611032565b610a24565b34801561034257600080fd5b506001546040516001600160a01b03909116815260200161016b565b34801561036a57600080fd5b506101fb61037936600461118c565b610a88565b34801561038a57600080fd5b506101b760055481565b3480156103a057600080fd5b5061015e6103af366004611032565b610e79565b3480156103c057600080fd5b506101fb6103cf3660046111ae565b610f1a565b6060818015806103e657506003548110155b1561040457604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060060180548251818502810185019093528083529193909284015b82821015610478576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610430565b50505050915050919050565b60008180158061049657506003548110155b156104b457604051637313c09d60e01b815260040160405180910390fd5b60008381526002602081905260409091209081015460038201546104d89190611019565b421080156104fe57506000600482015460ff1660018111156104fc576104fc6110cf565b145b949350505050565b6000610510610f5a565b61271084118061051e575082155b1561053c57604051630e52390960e41b815260040160405180910390fd5b600380546000818152600260208190526040822083815560018101899055908101879055428185015560048101805460ff191690556005810186905583549293909291610588836111d7565b9190505550836005600082825461059f9190611019565b9091555050604051339083907f476f7bdb10d30e2de6d06e5d144c76d3963482c10f097a5048c401c84d1a102590600090a35090506105de6001600055565b9392505050565b6105ed610f84565b4781111561060e5760405163cd1c886760e01b815260040160405180910390fd5b60006106226001546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d806000811461066c576040519150601f19603f3d011682016040523d82523d6000602084013e610671565b606091505b5050905080610693576040516312171d8360e31b815260040160405180910390fd5b5050565b600080808080808080888015806106b057506003548110155b156106ce57604051637313c09d60e01b815260040160405180910390fd5b5050506000968752505060026020819052604090952080546001820154968201546003830154600484015460058501546006860154600790960154949b93995091975060ff1695509350565b610722610f5a565b8080158061073257506003548110155b1561075057604051637313c09d60e01b815260040160405180910390fd5b600082815260026020819052604090912090810154600382015484929161077691611019565b4210610795576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206004015460ff1660018111156107bd576107bd6110cf565b146107db57604051632d2d860f60e11b815260040160405180910390fd5b600085815260026020818152604080842081518083018352338082524282860190815260068401805460018082018355918a529887902093519890970290920180546001600160a01b0319166001600160a01b039098169790971787559051959094019490945580518281526007928101929092526624b72330bb37b960c91b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef906060015b60405180910390a3505050505061089e6001600055565b50565b6108a9610f84565b6108b36000610fb1565b565b6108bd610f5a565b808015806108cd57506003548110155b156108eb57604051637313c09d60e01b815260040160405180910390fd5b600082815260026020819052604090912090810154600382015484929161091191611019565b4210610930576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206004015460ff166001811115610958576109586110cf565b1461097657604051632d2d860f60e11b815260040160405180910390fd5b60008581526002602081815260408084208151808301835233808252428286019081526007808501805460018082018355918b529988902094519990980290930180546001600160a01b0319166001600160a01b03909916989098178855519690950195909555815183815292830194909452661059d85a5b9cdd60ca1b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef90606001610887565b610a2c610f84565b80600003610a4d57604051630e52390960e41b815260040160405180910390fd5b60048190556040518181527fc3869fc4914caa4e69064c93dc69ce5b5b73da5a26717b551e7b6b23f2db9b1b9060200160405180910390a150565b610a90610f84565b610a98610f5a565b81801580610aa857506003548110155b15610ac657604051637313c09d60e01b815260040160405180910390fd5b826000808281526002602052604090206004015460ff166001811115610aee57610aee6110cf565b14610b0c57604051632d2d860f60e11b815260040160405180910390fd5b612710831115610b2f57604051630e52390960e41b815260040160405180910390fd5b600084815260026020526040812060018101549091908510159081610b575782600701610b5c565b826006015b9050600082610b6e5783600601610b73565b836007015b9050600083610ba157604051806040016040528060078152602001661059d85a5b9cdd60ca1b815250610bc2565b6040518060400160405280600781526020016624b72330bb37b960c91b8152505b6004548354919250600091610bd791906111f0565b8660050154610be69190611019565b845490915015801590610bf95750600081115b15610e1e576000805b8554811015610c775760008860030154878381548110610c2457610c24611207565b906000526020600020906002020160010154610c40919061121d565b90506000818a60020154610c54919061121d565b9050610c608185611019565b935050508080610c6f906111d7565b915050610c02565b508015610e1c5760005b8554811015610e1a5760008860030154878381548110610ca357610ca3611207565b906000526020600020906002020160010154610cbf919061121d565b90506000818a60020154610cd3919061121d565b9050600084610ce287846111f0565b610cec9190611230565b90508015610e04578060056000828254610d06919061121d565b925050819055506000898581548110610d2157610d21611207565b600091825260208220600290910201546040516001600160a01b039091169184919081818185875af1925050503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5050905080610da1576040516312171d8360e31b815260040160405180910390fd5b898581548110610db357610db3611207565b6000918252602091829020600290910201546040518481526001600160a01b03909116917fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6910160405180910390a2505b5050508080610e12906111d7565b915050610c81565b505b505b60048601805460ff191660011790556040518a907f579e7f72f41084c4072560a3d26ffa8c9361debca741683ee5f7f2cf9a461a5390610e5f908590611252565b60405180910390a250505050505050506106936001600055565b606081801580610e8b57506003548110155b15610ea957604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060070180548251818502810185019093528083529193909284018215610478576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610430565b610f22610f84565b6001600160a01b038116610f5157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61089e81610fb1565b600260005403610f7d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001546001600160a01b031633146108b35760405163118cdaa760e01b8152336004820152602401610f48565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561102c5761102c611003565b92915050565b60006020828403121561104457600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561109657815180516001600160a01b03168552860151868501529284019290850190600101611068565b5091979650505050505050565b6000806000606084860312156110b857600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b6002811061110357634e487b7160e01b600052602160045260246000fd5b9052565b60006101008201905089825288602083015287604083015286606083015261113260808301876110e5565b8460a08301528360c08301528260e08301529998505050505050505050565b600060c08201905087825286602083015285604083015284606083015261117b60808301856110e5565b8260a0830152979650505050505050565b6000806040838503121561119f57600080fd5b50508035926020909101359150565b6000602082840312156111c057600080fd5b81356001600160a01b03811681146105de57600080fd5b6000600182016111e9576111e9611003565b5060010190565b808202811582820484141761102c5761102c611003565b634e487b7160e01b600052603260045260246000fd5b8181038181111561102c5761102c611003565b60008261124d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b8181101561127f57858101830151858201604001528201611263565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220e2ff62ef65b45c52be5c8ae407f6c4c8c7d20c1a8c9826241f76b8450fc4790b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13C1 CODESIZE SUB DUP1 PUSH2 0x13C1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE CALLER DUP1 PUSH2 0x5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63 DUP2 PUSH2 0x71 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE PUSH2 0xDC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D6 DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x98DEA89C EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xBAC03CD7 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xDC6E4495 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x7776EAB6 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x7CABD293 EQ PUSH2 0x316 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x582BD8F1 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5AF01B91 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6D9AAC62 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x6EC1B041 EQ PUSH2 0x2AE JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x4B8BA5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x9EEA131 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x312C9E87 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x3937066C EQ PUSH2 0x1C5 JUMPI PUSH2 0x12C JUMP JUMPDEST CALLDATASIZE PUSH2 0x12C JUMPI CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x8A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x118C JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x3E6 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x430 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 ISZERO DUP1 PUSH2 0x496 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FC PUSH2 0x10CF JUMP JUMPDEST EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x510 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x2710 DUP5 GT DUP1 PUSH2 0x51E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP10 SWAP1 SSTORE SWAP1 DUP2 ADD DUP8 SWAP1 SSTORE TIMESTAMP DUP2 DUP6 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP7 SWAP1 SSTORE DUP4 SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x588 DUP4 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x476F7BDB10D30E2DE6D06E5D144C76D3963482C10F097A5048C401C84D1A1025 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 POP PUSH2 0x5DE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5ED PUSH2 0xF84 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD1C8867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x622 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x671 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 ISZERO DUP1 PUSH2 0x6B0 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP7 DUP8 MSTORE POP POP PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP7 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP12 SWAP4 SWAP10 POP SWAP2 SWAP8 POP PUSH1 0xFF AND SWAP6 POP SWAP4 POP JUMP JUMPDEST PUSH2 0x722 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x732 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x776 SWAP2 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE SWAP9 DUP8 SWAP1 KECCAK256 SWAP4 MLOAD SWAP9 SWAP1 SWAP8 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP8 SSTORE SWAP1 MLOAD SWAP6 SWAP1 SWAP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x89E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A9 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x0 PUSH2 0xFB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8BD PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x8CD JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x911 SWAP2 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x958 JUMPI PUSH2 0x958 PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 SWAP5 MLOAD SWAP10 SWAP1 SWAP9 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND SWAP9 SWAP1 SWAP9 OR DUP9 SSTORE MLOAD SWAP7 SWAP1 SWAP6 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD PUSH2 0x887 JUMP JUMPDEST PUSH2 0xA2C PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC3869FC4914CAA4E69064C93DC69CE5B5B73DA5A26717B551E7B6B23F2DB9B1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP1 ISZERO DUP1 PUSH2 0xAA8 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP4 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP6 LT ISZERO SWAP1 DUP2 PUSH2 0xB57 JUMPI DUP3 PUSH1 0x7 ADD PUSH2 0xB5C JUMP JUMPDEST DUP3 PUSH1 0x6 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xB6E JUMPI DUP4 PUSH1 0x6 ADD PUSH2 0xB73 JUMP JUMPDEST DUP4 PUSH1 0x7 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL DUP2 MSTORE POP PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x4 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST DUP7 PUSH1 0x5 ADD SLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBF9 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xC77 JUMPI PUSH1 0x0 DUP9 PUSH1 0x3 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC24 JUMPI PUSH2 0xC24 PUSH2 0x1207 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP11 PUSH1 0x2 ADD SLOAD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH2 0xC60 DUP2 DUP6 PUSH2 0x1019 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xC6F SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC02 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP9 PUSH1 0x3 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0x1207 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP11 PUSH1 0x2 ADD SLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH2 0xCE2 DUP8 DUP5 PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE04 JUMPI DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xD21 JUMPI PUSH2 0xD21 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xE12 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC81 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP11 SWAP1 PUSH32 0x579E7F72F41084C4072560A3D26FFA8C9361DEBCA741683EE5F7F2CF9A461A53 SWAP1 PUSH2 0xE5F SWAP1 DUP6 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0x693 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0xE8B JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD DUP3 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x430 JUMP JUMPDEST PUSH2 0xF22 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89E DUP2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1096 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1068 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1103 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP DUP10 DUP3 MSTORE DUP9 PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP7 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1132 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP3 PUSH1 0xE0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP8 DUP3 MSTORE DUP7 PUSH1 0x20 DUP4 ADD MSTORE DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x117B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x10E5 JUMP JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11E9 JUMPI PUSH2 0x11E9 PUSH2 0x1003 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x124D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x127F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1263 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SELFDESTRUCT PUSH3 0xEF65B4 0x5C MSTORE 0xBE 0x5C DUP11 0xE4 SMOD 0xF6 0xC4 0xC8 0xC7 0xD2 0xC BYTE DUP13 SWAP9 0x26 0x24 0x1F PUSH23 0xB8450FC4790B64736F6C63430008140033000000000000 ","sourceMap":"389:11024:6:-:0;;;1852:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:2;2061:7;:21;1899:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;349:51:8;322:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1936:1:6::1;1921:12;:16:::0;1947::::1;:36:::0;389:11024;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;203:203::-;389:11024:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1280":{"entryPoint":null,"id":1280,"parameterSlots":0,"returnSlots":0},"@_1289":{"entryPoint":null,"id":1289,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3972,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_234":{"entryPoint":null,"id":234,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_226":{"entryPoint":3930,"id":226,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4017,"id":146,"parameterSlots":1,"returnSlots":0},"@emergencyWithdraw_1258":{"entryPoint":1509,"id":1258,"parameterSlots":1,"returnSlots":0},"@fixedStakeAmount_535":{"entryPoint":null,"id":535,"parameterSlots":0,"returnSlots":0},"@getContractBalance_1271":{"entryPoint":null,"id":1271,"parameterSlots":0,"returnSlots":1},"@getMetric_1120":{"entryPoint":1687,"id":1120,"parameterSlots":1,"returnSlots":8},"@getStakesAgainst_1158":{"entryPoint":3705,"id":1158,"parameterSlots":1,"returnSlots":1},"@getStakesInFavor_1139":{"entryPoint":980,"id":1139,"parameterSlots":1,"returnSlots":1},"@isStakingActive_1192":{"entryPoint":1156,"id":1192,"parameterSlots":1,"returnSlots":1},"@metrics_531":{"entryPoint":null,"id":531,"parameterSlots":0,"returnSlots":0},"@nextMetricID_533":{"entryPoint":null,"id":533,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2209,"id":98,"parameterSlots":0,"returnSlots":0},"@resolveMetric_1066":{"entryPoint":2696,"id":1066,"parameterSlots":2,"returnSlots":0},"@stakeAgainst_840":{"entryPoint":2229,"id":840,"parameterSlots":1,"returnSlots":0},"@stakeInFavor_795":{"entryPoint":1818,"id":795,"parameterSlots":1,"returnSlots":0},"@submitMetric_750":{"entryPoint":1286,"id":750,"parameterSlots":3,"returnSlots":1},"@totalContractBalance_537":{"entryPoint":null,"id":537,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3866,"id":126,"parameterSlots":1,"returnSlots":0},"@updateFixedStakeAmount_1217":{"entryPoint":2596,"id":1217,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":4526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":4492,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":4259,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_enum_MetricStatus":{"entryPoint":4325,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":4433,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4359,"id":null,"parameterSlots":9,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4121,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4656,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4592,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4637,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4567,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4099,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4303,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4615,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6624:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:8"},"nodeType":"YulFunctionCall","src":"66:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:8"},"nodeType":"YulFunctionCall","src":"56:31:8"},"nodeType":"YulExpressionStatement","src":"56:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:8"},"nodeType":"YulFunctionCall","src":"96:15:8"},"nodeType":"YulExpressionStatement","src":"96:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:8"},"nodeType":"YulFunctionCall","src":"120:15:8"},"nodeType":"YulExpressionStatement","src":"120:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14:127:8"},{"body":{"nodeType":"YulBlock","src":"194:77:8","statements":[{"nodeType":"YulAssignment","src":"204:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"215:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"218:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"211:3:8"},"nodeType":"YulFunctionCall","src":"211:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"204:3:8"}]},{"body":{"nodeType":"YulBlock","src":"243:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"245:16:8"},"nodeType":"YulFunctionCall","src":"245:18:8"},"nodeType":"YulExpressionStatement","src":"245:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"235:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"238:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"232:2:8"},"nodeType":"YulFunctionCall","src":"232:10:8"},"nodeType":"YulIf","src":"229:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"177:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"180:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"186:3:8","type":""}],"src":"146:125:8"},{"body":{"nodeType":"YulBlock","src":"346:110:8","statements":[{"body":{"nodeType":"YulBlock","src":"392:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"401:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"394:6:8"},"nodeType":"YulFunctionCall","src":"394:12:8"},"nodeType":"YulExpressionStatement","src":"394:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"367:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"363:3:8"},"nodeType":"YulFunctionCall","src":"363:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"359:3:8"},"nodeType":"YulFunctionCall","src":"359:32:8"},"nodeType":"YulIf","src":"356:52:8"},{"nodeType":"YulAssignment","src":"417:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"440:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:8"},"nodeType":"YulFunctionCall","src":"427:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"417:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"312:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"323:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"335:6:8","type":""}],"src":"276:180:8"},{"body":{"nodeType":"YulBlock","src":"656:613:8","statements":[{"nodeType":"YulVariableDeclaration","src":"666:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"676:2:8","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"670:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"687:32:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"705:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"716:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"701:3:8"},"nodeType":"YulFunctionCall","src":"701:18:8"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"691:6:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"735:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"746:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"728:6:8"},"nodeType":"YulFunctionCall","src":"728:21:8"},"nodeType":"YulExpressionStatement","src":"728:21:8"},{"nodeType":"YulVariableDeclaration","src":"758:17:8","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"769:6:8"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"762:3:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"784:27:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"804:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"798:5:8"},"nodeType":"YulFunctionCall","src":"798:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"788:6:8","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"827:6:8"},{"name":"length","nodeType":"YulIdentifier","src":"835:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"820:6:8"},"nodeType":"YulFunctionCall","src":"820:22:8"},"nodeType":"YulExpressionStatement","src":"820:22:8"},{"nodeType":"YulVariableDeclaration","src":"851:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"861:2:8","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"855:2:8","type":""}]},{"nodeType":"YulAssignment","src":"872:25:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"883:9:8"},{"name":"_2","nodeType":"YulIdentifier","src":"894:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"879:3:8"},"nodeType":"YulFunctionCall","src":"879:18:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"906:29:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"924:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"932:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"920:3:8"},"nodeType":"YulFunctionCall","src":"920:15:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"910:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"944:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"953:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"948:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1012:231:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1026:23:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1042:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1036:5:8"},"nodeType":"YulFunctionCall","src":"1036:13:8"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1030:2:8","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1069:3:8"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1084:2:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1078:5:8"},"nodeType":"YulFunctionCall","src":"1078:9:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1097:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1102:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1093:3:8"},"nodeType":"YulFunctionCall","src":"1093:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"1106:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1089:3:8"},"nodeType":"YulFunctionCall","src":"1089:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:8"},"nodeType":"YulFunctionCall","src":"1074:35:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1062:6:8"},"nodeType":"YulFunctionCall","src":"1062:48:8"},"nodeType":"YulExpressionStatement","src":"1062:48:8"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1134:3:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1139:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:8"},"nodeType":"YulFunctionCall","src":"1130:12:8"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1154:2:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1158:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1150:3:8"},"nodeType":"YulFunctionCall","src":"1150:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1144:5:8"},"nodeType":"YulFunctionCall","src":"1144:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1123:6:8"},"nodeType":"YulFunctionCall","src":"1123:40:8"},"nodeType":"YulExpressionStatement","src":"1123:40:8"},{"nodeType":"YulAssignment","src":"1176:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1187:3:8"},{"name":"_2","nodeType":"YulIdentifier","src":"1192:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1183:3:8"},"nodeType":"YulFunctionCall","src":"1183:12:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1176:3:8"}]},{"nodeType":"YulAssignment","src":"1208:25:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1222:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1230:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1218:3:8"},"nodeType":"YulFunctionCall","src":"1218:15:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1208:6:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"974:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"977:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"971:2:8"},"nodeType":"YulFunctionCall","src":"971:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"985:18:8","statements":[{"nodeType":"YulAssignment","src":"987:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"996:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"992:3:8"},"nodeType":"YulFunctionCall","src":"992:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"987:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"967:3:8","statements":[]},"src":"963:280:8"},{"nodeType":"YulAssignment","src":"1252:11:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"1260:3:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1252:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"625:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"636:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"647:4:8","type":""}],"src":"461:808:8"},{"body":{"nodeType":"YulBlock","src":"1369:92:8","statements":[{"nodeType":"YulAssignment","src":"1379:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1402:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:8"},"nodeType":"YulFunctionCall","src":"1387:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1421:9:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1446:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1439:6:8"},"nodeType":"YulFunctionCall","src":"1439:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1432:6:8"},"nodeType":"YulFunctionCall","src":"1432:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:8"},"nodeType":"YulFunctionCall","src":"1414:41:8"},"nodeType":"YulExpressionStatement","src":"1414:41:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1338:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1349:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1360:4:8","type":""}],"src":"1274:187:8"},{"body":{"nodeType":"YulBlock","src":"1570:212:8","statements":[{"body":{"nodeType":"YulBlock","src":"1616:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1625:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1628:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1618:6:8"},"nodeType":"YulFunctionCall","src":"1618:12:8"},"nodeType":"YulExpressionStatement","src":"1618:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1591:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1600:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1587:3:8"},"nodeType":"YulFunctionCall","src":"1587:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1612:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1583:3:8"},"nodeType":"YulFunctionCall","src":"1583:32:8"},"nodeType":"YulIf","src":"1580:52:8"},{"nodeType":"YulAssignment","src":"1641:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1651:12:8"},"nodeType":"YulFunctionCall","src":"1651:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1641:6:8"}]},{"nodeType":"YulAssignment","src":"1683:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1710:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1721:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1706:3:8"},"nodeType":"YulFunctionCall","src":"1706:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1693:12:8"},"nodeType":"YulFunctionCall","src":"1693:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1683:6:8"}]},{"nodeType":"YulAssignment","src":"1734:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1761:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1772:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1757:3:8"},"nodeType":"YulFunctionCall","src":"1757:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1744:12:8"},"nodeType":"YulFunctionCall","src":"1744:32:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1734:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1520:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1531:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1543:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1551:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1559:6:8","type":""}],"src":"1466:316:8"},{"body":{"nodeType":"YulBlock","src":"1888:76:8","statements":[{"nodeType":"YulAssignment","src":"1898:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1921:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:8"},"nodeType":"YulFunctionCall","src":"1906:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1898:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1940:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"1951:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1933:6:8"},"nodeType":"YulFunctionCall","src":"1933:25:8"},"nodeType":"YulExpressionStatement","src":"1933:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1857:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1868:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1879:4:8","type":""}],"src":"1787:177:8"},{"body":{"nodeType":"YulBlock","src":"2001:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2018:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2030:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2021:3:8"},"nodeType":"YulFunctionCall","src":"2021:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:8"},"nodeType":"YulFunctionCall","src":"2011:31:8"},"nodeType":"YulExpressionStatement","src":"2011:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2058:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2061:4:8","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:8"},"nodeType":"YulFunctionCall","src":"2051:15:8"},"nodeType":"YulExpressionStatement","src":"2051:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2082:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2085:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2075:6:8"},"nodeType":"YulFunctionCall","src":"2075:15:8"},"nodeType":"YulExpressionStatement","src":"2075:15:8"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1969:127:8"},{"body":{"nodeType":"YulBlock","src":"2155:186:8","statements":[{"body":{"nodeType":"YulBlock","src":"2197:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2218:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2225:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2230:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2221:3:8"},"nodeType":"YulFunctionCall","src":"2221:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:8"},"nodeType":"YulFunctionCall","src":"2211:31:8"},"nodeType":"YulExpressionStatement","src":"2211:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2262:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2265:4:8","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2255:6:8"},"nodeType":"YulFunctionCall","src":"2255:15:8"},"nodeType":"YulExpressionStatement","src":"2255:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2293:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2283:6:8"},"nodeType":"YulFunctionCall","src":"2283:15:8"},"nodeType":"YulExpressionStatement","src":"2283:15:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2178:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2185:1:8","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2175:2:8"},"nodeType":"YulFunctionCall","src":"2175:12:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2168:6:8"},"nodeType":"YulFunctionCall","src":"2168:20:8"},"nodeType":"YulIf","src":"2165:143:8"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2324:3:8"},{"name":"value","nodeType":"YulIdentifier","src":"2329:5:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2317:6:8"},"nodeType":"YulFunctionCall","src":"2317:18:8"},"nodeType":"YulExpressionStatement","src":"2317:18:8"}]},"name":"abi_encode_enum_MetricStatus","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2139:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2146:3:8","type":""}],"src":"2101:240:8"},{"body":{"nodeType":"YulBlock","src":"2657:404:8","statements":[{"nodeType":"YulAssignment","src":"2667:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2679:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2690:3:8","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:8"},"nodeType":"YulFunctionCall","src":"2675:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2667:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2710:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"2721:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2703:6:8"},"nodeType":"YulFunctionCall","src":"2703:25:8"},"nodeType":"YulExpressionStatement","src":"2703:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2748:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2759:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2744:3:8"},"nodeType":"YulFunctionCall","src":"2744:18:8"},{"name":"value1","nodeType":"YulIdentifier","src":"2764:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2737:6:8"},"nodeType":"YulFunctionCall","src":"2737:34:8"},"nodeType":"YulExpressionStatement","src":"2737:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2791:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2802:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2787:3:8"},"nodeType":"YulFunctionCall","src":"2787:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"2807:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2780:6:8"},"nodeType":"YulFunctionCall","src":"2780:34:8"},"nodeType":"YulExpressionStatement","src":"2780:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2845:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:8"},"nodeType":"YulFunctionCall","src":"2830:18:8"},{"name":"value3","nodeType":"YulIdentifier","src":"2850:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2823:6:8"},"nodeType":"YulFunctionCall","src":"2823:34:8"},"nodeType":"YulExpressionStatement","src":"2823:34:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2895:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2907:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2918:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2903:3:8"},"nodeType":"YulFunctionCall","src":"2903:19:8"}],"functionName":{"name":"abi_encode_enum_MetricStatus","nodeType":"YulIdentifier","src":"2866:28:8"},"nodeType":"YulFunctionCall","src":"2866:57:8"},"nodeType":"YulExpressionStatement","src":"2866:57:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2943:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2954:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2939:3:8"},"nodeType":"YulFunctionCall","src":"2939:19:8"},{"name":"value5","nodeType":"YulIdentifier","src":"2960:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2932:6:8"},"nodeType":"YulFunctionCall","src":"2932:35:8"},"nodeType":"YulExpressionStatement","src":"2932:35:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2998:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:8"},"nodeType":"YulFunctionCall","src":"2983:19:8"},{"name":"value6","nodeType":"YulIdentifier","src":"3004:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2976:6:8"},"nodeType":"YulFunctionCall","src":"2976:35:8"},"nodeType":"YulExpressionStatement","src":"2976:35:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3031:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3042:3:8","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3027:3:8"},"nodeType":"YulFunctionCall","src":"3027:19:8"},{"name":"value7","nodeType":"YulIdentifier","src":"3048:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3020:6:8"},"nodeType":"YulFunctionCall","src":"3020:35:8"},"nodeType":"YulExpressionStatement","src":"3020:35:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2570:9:8","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2581:6:8","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2589:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2597:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2605:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2613:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2621:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2629:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2637:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2648:4:8","type":""}],"src":"2346:715:8"},{"body":{"nodeType":"YulBlock","src":"3321:316:8","statements":[{"nodeType":"YulAssignment","src":"3331:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3343:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3354:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3339:3:8"},"nodeType":"YulFunctionCall","src":"3339:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3331:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3374:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"3385:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3367:6:8"},"nodeType":"YulFunctionCall","src":"3367:25:8"},"nodeType":"YulExpressionStatement","src":"3367:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3423:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:8"},"nodeType":"YulFunctionCall","src":"3408:18:8"},{"name":"value1","nodeType":"YulIdentifier","src":"3428:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3401:6:8"},"nodeType":"YulFunctionCall","src":"3401:34:8"},"nodeType":"YulExpressionStatement","src":"3401:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3455:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3466:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:8"},"nodeType":"YulFunctionCall","src":"3451:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"3471:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3444:6:8"},"nodeType":"YulFunctionCall","src":"3444:34:8"},"nodeType":"YulExpressionStatement","src":"3444:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3498:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3509:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3494:3:8"},"nodeType":"YulFunctionCall","src":"3494:18:8"},{"name":"value3","nodeType":"YulIdentifier","src":"3514:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3487:6:8"},"nodeType":"YulFunctionCall","src":"3487:34:8"},"nodeType":"YulExpressionStatement","src":"3487:34:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3559:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3571:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3582:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3567:3:8"},"nodeType":"YulFunctionCall","src":"3567:19:8"}],"functionName":{"name":"abi_encode_enum_MetricStatus","nodeType":"YulIdentifier","src":"3530:28:8"},"nodeType":"YulFunctionCall","src":"3530:57:8"},"nodeType":"YulExpressionStatement","src":"3530:57:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3607:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3618:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3603:3:8"},"nodeType":"YulFunctionCall","src":"3603:19:8"},{"name":"value5","nodeType":"YulIdentifier","src":"3624:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3596:6:8"},"nodeType":"YulFunctionCall","src":"3596:35:8"},"nodeType":"YulExpressionStatement","src":"3596:35:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3250:9:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3261:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3269:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3277:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3285:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3293:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3301:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3312:4:8","type":""}],"src":"3066:571:8"},{"body":{"nodeType":"YulBlock","src":"3743:102:8","statements":[{"nodeType":"YulAssignment","src":"3753:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3765:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3776:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:8"},"nodeType":"YulFunctionCall","src":"3761:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3753:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3810:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3826:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3831:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3822:3:8"},"nodeType":"YulFunctionCall","src":"3822:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"3835:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3818:3:8"},"nodeType":"YulFunctionCall","src":"3818:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3806:3:8"},"nodeType":"YulFunctionCall","src":"3806:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3788:6:8"},"nodeType":"YulFunctionCall","src":"3788:51:8"},"nodeType":"YulExpressionStatement","src":"3788:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3712:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3723:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3734:4:8","type":""}],"src":"3642:203:8"},{"body":{"nodeType":"YulBlock","src":"3937:161:8","statements":[{"body":{"nodeType":"YulBlock","src":"3983:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3992:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3995:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3985:6:8"},"nodeType":"YulFunctionCall","src":"3985:12:8"},"nodeType":"YulExpressionStatement","src":"3985:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3958:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3967:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3954:3:8"},"nodeType":"YulFunctionCall","src":"3954:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3979:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3950:3:8"},"nodeType":"YulFunctionCall","src":"3950:32:8"},"nodeType":"YulIf","src":"3947:52:8"},{"nodeType":"YulAssignment","src":"4008:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4018:12:8"},"nodeType":"YulFunctionCall","src":"4018:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4008:6:8"}]},{"nodeType":"YulAssignment","src":"4050:42:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:8"},"nodeType":"YulFunctionCall","src":"4073:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4060:12:8"},"nodeType":"YulFunctionCall","src":"4060:32:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4050:6:8"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3895:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3906:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3918:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3926:6:8","type":""}],"src":"3850:248:8"},{"body":{"nodeType":"YulBlock","src":"4173:216:8","statements":[{"body":{"nodeType":"YulBlock","src":"4219:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4228:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4231:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4221:6:8"},"nodeType":"YulFunctionCall","src":"4221:12:8"},"nodeType":"YulExpressionStatement","src":"4221:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4194:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4190:3:8"},"nodeType":"YulFunctionCall","src":"4190:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4215:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4186:3:8"},"nodeType":"YulFunctionCall","src":"4186:32:8"},"nodeType":"YulIf","src":"4183:52:8"},{"nodeType":"YulVariableDeclaration","src":"4244:36:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4270:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4257:12:8"},"nodeType":"YulFunctionCall","src":"4257:23:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4248:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4343:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4355:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4345:6:8"},"nodeType":"YulFunctionCall","src":"4345:12:8"},"nodeType":"YulExpressionStatement","src":"4345:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4302:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4313:5:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4328:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4333:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4324:3:8"},"nodeType":"YulFunctionCall","src":"4324:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"4337:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4320:3:8"},"nodeType":"YulFunctionCall","src":"4320:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4309:3:8"},"nodeType":"YulFunctionCall","src":"4309:31:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4299:2:8"},"nodeType":"YulFunctionCall","src":"4299:42:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4292:6:8"},"nodeType":"YulFunctionCall","src":"4292:50:8"},"nodeType":"YulIf","src":"4289:70:8"},{"nodeType":"YulAssignment","src":"4368:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4378:5:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4368:6:8"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4139:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4150:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4162:6:8","type":""}],"src":"4103:286:8"},{"body":{"nodeType":"YulBlock","src":"4441:88:8","statements":[{"body":{"nodeType":"YulBlock","src":"4472:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4474:16:8"},"nodeType":"YulFunctionCall","src":"4474:18:8"},"nodeType":"YulExpressionStatement","src":"4474:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4457:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4468:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4464:3:8"},"nodeType":"YulFunctionCall","src":"4464:6:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4454:2:8"},"nodeType":"YulFunctionCall","src":"4454:17:8"},"nodeType":"YulIf","src":"4451:43:8"},{"nodeType":"YulAssignment","src":"4503:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4514:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4521:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4510:3:8"},"nodeType":"YulFunctionCall","src":"4510:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4503:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4423:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4433:3:8","type":""}],"src":"4394:135:8"},{"body":{"nodeType":"YulBlock","src":"4725:14:8","statements":[{"nodeType":"YulAssignment","src":"4727:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"4734:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4727:3:8"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4709:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4717:3:8","type":""}],"src":"4534:205:8"},{"body":{"nodeType":"YulBlock","src":"4918:156:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4935:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4946:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4928:6:8"},"nodeType":"YulFunctionCall","src":"4928:21:8"},"nodeType":"YulExpressionStatement","src":"4928:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4969:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4980:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4965:3:8"},"nodeType":"YulFunctionCall","src":"4965:18:8"},{"kind":"number","nodeType":"YulLiteral","src":"4985:1:8","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4958:6:8"},"nodeType":"YulFunctionCall","src":"4958:29:8"},"nodeType":"YulExpressionStatement","src":"4958:29:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5007:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5018:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5003:3:8"},"nodeType":"YulFunctionCall","src":"5003:18:8"},{"hexValue":"496e4661766f72","kind":"string","nodeType":"YulLiteral","src":"5023:9:8","type":"","value":"InFavor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4996:6:8"},"nodeType":"YulFunctionCall","src":"4996:37:8"},"nodeType":"YulExpressionStatement","src":"4996:37:8"},{"nodeType":"YulAssignment","src":"5042:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5054:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5065:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5050:3:8"},"nodeType":"YulFunctionCall","src":"5050:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5042:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4895:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4909:4:8","type":""}],"src":"4744:330:8"},{"body":{"nodeType":"YulBlock","src":"5253:156:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5270:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5281:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:8"},"nodeType":"YulFunctionCall","src":"5263:21:8"},"nodeType":"YulExpressionStatement","src":"5263:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5304:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5315:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5300:3:8"},"nodeType":"YulFunctionCall","src":"5300:18:8"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:8","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5293:6:8"},"nodeType":"YulFunctionCall","src":"5293:29:8"},"nodeType":"YulExpressionStatement","src":"5293:29:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5342:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5353:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5338:3:8"},"nodeType":"YulFunctionCall","src":"5338:18:8"},{"hexValue":"416761696e7374","kind":"string","nodeType":"YulLiteral","src":"5358:9:8","type":"","value":"Against"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5331:6:8"},"nodeType":"YulFunctionCall","src":"5331:37:8"},"nodeType":"YulExpressionStatement","src":"5331:37:8"},{"nodeType":"YulAssignment","src":"5377:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5389:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5400:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5385:3:8"},"nodeType":"YulFunctionCall","src":"5385:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5377:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5230:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5244:4:8","type":""}],"src":"5079:330:8"},{"body":{"nodeType":"YulBlock","src":"5466:116:8","statements":[{"nodeType":"YulAssignment","src":"5476:20:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5491:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"5494:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5487:3:8"},"nodeType":"YulFunctionCall","src":"5487:9:8"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5476:7:8"}]},{"body":{"nodeType":"YulBlock","src":"5554:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5556:16:8"},"nodeType":"YulFunctionCall","src":"5556:18:8"},"nodeType":"YulExpressionStatement","src":"5556:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5525:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5518:6:8"},"nodeType":"YulFunctionCall","src":"5518:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5532:1:8"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5539:7:8"},{"name":"x","nodeType":"YulIdentifier","src":"5548:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5535:3:8"},"nodeType":"YulFunctionCall","src":"5535:15:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5529:2:8"},"nodeType":"YulFunctionCall","src":"5529:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5515:2:8"},"nodeType":"YulFunctionCall","src":"5515:37:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5508:6:8"},"nodeType":"YulFunctionCall","src":"5508:45:8"},"nodeType":"YulIf","src":"5505:71:8"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5445:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"5448:1:8","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5454:7:8","type":""}],"src":"5414:168:8"},{"body":{"nodeType":"YulBlock","src":"5619:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5636:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5643:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5648:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5639:3:8"},"nodeType":"YulFunctionCall","src":"5639:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5629:6:8"},"nodeType":"YulFunctionCall","src":"5629:31:8"},"nodeType":"YulExpressionStatement","src":"5629:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5676:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5679:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5669:6:8"},"nodeType":"YulFunctionCall","src":"5669:15:8"},"nodeType":"YulExpressionStatement","src":"5669:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5700:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5703:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5693:6:8"},"nodeType":"YulFunctionCall","src":"5693:15:8"},"nodeType":"YulExpressionStatement","src":"5693:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5587:127:8"},{"body":{"nodeType":"YulBlock","src":"5768:79:8","statements":[{"nodeType":"YulAssignment","src":"5778:17:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5790:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"5793:1:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5786:3:8"},"nodeType":"YulFunctionCall","src":"5786:9:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5778:4:8"}]},{"body":{"nodeType":"YulBlock","src":"5819:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5821:16:8"},"nodeType":"YulFunctionCall","src":"5821:18:8"},"nodeType":"YulExpressionStatement","src":"5821:18:8"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5810:4:8"},{"name":"x","nodeType":"YulIdentifier","src":"5816:1:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5807:2:8"},"nodeType":"YulFunctionCall","src":"5807:11:8"},"nodeType":"YulIf","src":"5804:37:8"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5750:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"5753:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5759:4:8","type":""}],"src":"5719:128:8"},{"body":{"nodeType":"YulBlock","src":"5898:171:8","statements":[{"body":{"nodeType":"YulBlock","src":"5929:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5950:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5957:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5962:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5953:3:8"},"nodeType":"YulFunctionCall","src":"5953:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5943:6:8"},"nodeType":"YulFunctionCall","src":"5943:31:8"},"nodeType":"YulExpressionStatement","src":"5943:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5994:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5997:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5987:6:8"},"nodeType":"YulFunctionCall","src":"5987:15:8"},"nodeType":"YulExpressionStatement","src":"5987:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6022:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6025:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6015:6:8"},"nodeType":"YulFunctionCall","src":"6015:15:8"},"nodeType":"YulExpressionStatement","src":"6015:15:8"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5918:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5911:6:8"},"nodeType":"YulFunctionCall","src":"5911:9:8"},"nodeType":"YulIf","src":"5908:132:8"},{"nodeType":"YulAssignment","src":"6049:14:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6058:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6061:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6054:3:8"},"nodeType":"YulFunctionCall","src":"6054:9:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6049:1:8"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5883:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"5886:1:8","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5892:1:8","type":""}],"src":"5852:217:8"},{"body":{"nodeType":"YulBlock","src":"6195:427:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6205:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6215:2:8","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6209:2:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6233:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6244:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6226:6:8"},"nodeType":"YulFunctionCall","src":"6226:21:8"},"nodeType":"YulExpressionStatement","src":"6226:21:8"},{"nodeType":"YulVariableDeclaration","src":"6256:27:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6276:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6270:5:8"},"nodeType":"YulFunctionCall","src":"6270:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6260:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6303:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6314:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6299:3:8"},"nodeType":"YulFunctionCall","src":"6299:18:8"},{"name":"length","nodeType":"YulIdentifier","src":"6319:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6292:6:8"},"nodeType":"YulFunctionCall","src":"6292:34:8"},"nodeType":"YulExpressionStatement","src":"6292:34:8"},{"nodeType":"YulVariableDeclaration","src":"6335:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6344:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6339:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6404:90:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:8"},{"name":"i","nodeType":"YulIdentifier","src":"6444:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:8"},"nodeType":"YulFunctionCall","src":"6429:17:8"},{"kind":"number","nodeType":"YulLiteral","src":"6448:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6425:3:8"},"nodeType":"YulFunctionCall","src":"6425:26:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6467:6:8"},{"name":"i","nodeType":"YulIdentifier","src":"6475:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6463:3:8"},"nodeType":"YulFunctionCall","src":"6463:14:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6479:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6459:3:8"},"nodeType":"YulFunctionCall","src":"6459:23:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6453:5:8"},"nodeType":"YulFunctionCall","src":"6453:30:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6418:6:8"},"nodeType":"YulFunctionCall","src":"6418:66:8"},"nodeType":"YulExpressionStatement","src":"6418:66:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6365:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"6368:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6362:2:8"},"nodeType":"YulFunctionCall","src":"6362:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6376:19:8","statements":[{"nodeType":"YulAssignment","src":"6378:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6387:1:8"},{"name":"_1","nodeType":"YulIdentifier","src":"6390:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6383:3:8"},"nodeType":"YulFunctionCall","src":"6383:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6378:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"6358:3:8","statements":[]},"src":"6354:140:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6518:9:8"},{"name":"length","nodeType":"YulIdentifier","src":"6529:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6514:3:8"},"nodeType":"YulFunctionCall","src":"6514:22:8"},{"kind":"number","nodeType":"YulLiteral","src":"6538:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6510:3:8"},"nodeType":"YulFunctionCall","src":"6510:31:8"},{"kind":"number","nodeType":"YulLiteral","src":"6543:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6503:6:8"},"nodeType":"YulFunctionCall","src":"6503:42:8"},"nodeType":"YulExpressionStatement","src":"6503:42:8"},{"nodeType":"YulAssignment","src":"6554:62:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6570:9:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6589:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6597:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6585:3:8"},"nodeType":"YulFunctionCall","src":"6585:15:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6606:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6602:3:8"},"nodeType":"YulFunctionCall","src":"6602:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6581:3:8"},"nodeType":"YulFunctionCall","src":"6581:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6566:3:8"},"nodeType":"YulFunctionCall","src":"6566:45:8"},{"kind":"number","nodeType":"YulLiteral","src":"6613:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6562:3:8"},"nodeType":"YulFunctionCall","src":"6562:54:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6554:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6164:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6175:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6186:4:8","type":""}],"src":"6074:548:8"}]},"contents":"{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$501_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_MetricStatus(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        abi_encode_enum_MetricStatus(value4, add(headStart, 128))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_MetricStatus_$504_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        abi_encode_enum_MetricStatus(value4, add(headStart, 128))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_78e1b6a9912a9dccab5593657a5a6c8533d7183b374080514fef90b7efa10f40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"InFavor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5f061c8beab99978472594b18dee50ec1a77b01bb8254dd0e6e0cf6fe51a67f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Against\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061010d5760003560e01c80636f9fb98a116100955780638da5cb5b116100645780638da5cb5b1461033657806398dea89c1461035e578063bac03cd71461037e578063dc6e449514610394578063f2fde38b146103b45761012c565b80636f9fb98a146102ce578063715018a6146102e15780637776eab6146102f65780637cabd293146103165761012c565b80635312ea8e116100dc5780635312ea8e146101db578063582bd8f1146101fd5780635af01b91146102315780636d9aac62146102475780636ec1b041146102ae5761012c565b806304b8ba5b1461013e57806309eea13114610174578063312c9e87146101a45780633937066c146101c55761012c565b3661012c5734600560008282546101249190611019565b925050819055005b34600560008282546101249190611019565b34801561014a57600080fd5b5061015e610159366004611032565b6103d4565b60405161016b919061104b565b60405180910390f35b34801561018057600080fd5b5061019461018f366004611032565b610484565b604051901515815260200161016b565b6101b76101b23660046110a3565b610506565b60405190815260200161016b565b3480156101d157600080fd5b506101b760035481565b3480156101e757600080fd5b506101fb6101f6366004611032565b6105e5565b005b34801561020957600080fd5b5061021d610218366004611032565b610697565b60405161016b989796959493929190611107565b34801561023d57600080fd5b506101b760045481565b34801561025357600080fd5b5061029c610262366004611032565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401549294939192909160ff169086565b60405161016b96959493929190611151565b3480156102ba57600080fd5b506101fb6102c9366004611032565b61071a565b3480156102da57600080fd5b50476101b7565b3480156102ed57600080fd5b506101fb6108a1565b34801561030257600080fd5b506101fb610311366004611032565b6108b5565b34801561032257600080fd5b506101fb610331366004611032565b610a24565b34801561034257600080fd5b506001546040516001600160a01b03909116815260200161016b565b34801561036a57600080fd5b506101fb61037936600461118c565b610a88565b34801561038a57600080fd5b506101b760055481565b3480156103a057600080fd5b5061015e6103af366004611032565b610e79565b3480156103c057600080fd5b506101fb6103cf3660046111ae565b610f1a565b6060818015806103e657506003548110155b1561040457604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060060180548251818502810185019093528083529193909284015b82821015610478576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610430565b50505050915050919050565b60008180158061049657506003548110155b156104b457604051637313c09d60e01b815260040160405180910390fd5b60008381526002602081905260409091209081015460038201546104d89190611019565b421080156104fe57506000600482015460ff1660018111156104fc576104fc6110cf565b145b949350505050565b6000610510610f5a565b61271084118061051e575082155b1561053c57604051630e52390960e41b815260040160405180910390fd5b600380546000818152600260208190526040822083815560018101899055908101879055428185015560048101805460ff191690556005810186905583549293909291610588836111d7565b9190505550836005600082825461059f9190611019565b9091555050604051339083907f476f7bdb10d30e2de6d06e5d144c76d3963482c10f097a5048c401c84d1a102590600090a35090506105de6001600055565b9392505050565b6105ed610f84565b4781111561060e5760405163cd1c886760e01b815260040160405180910390fd5b60006106226001546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d806000811461066c576040519150601f19603f3d011682016040523d82523d6000602084013e610671565b606091505b5050905080610693576040516312171d8360e31b815260040160405180910390fd5b5050565b600080808080808080888015806106b057506003548110155b156106ce57604051637313c09d60e01b815260040160405180910390fd5b5050506000968752505060026020819052604090952080546001820154968201546003830154600484015460058501546006860154600790960154949b93995091975060ff1695509350565b610722610f5a565b8080158061073257506003548110155b1561075057604051637313c09d60e01b815260040160405180910390fd5b600082815260026020819052604090912090810154600382015484929161077691611019565b4210610795576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206004015460ff1660018111156107bd576107bd6110cf565b146107db57604051632d2d860f60e11b815260040160405180910390fd5b600085815260026020818152604080842081518083018352338082524282860190815260068401805460018082018355918a529887902093519890970290920180546001600160a01b0319166001600160a01b039098169790971787559051959094019490945580518281526007928101929092526624b72330bb37b960c91b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef906060015b60405180910390a3505050505061089e6001600055565b50565b6108a9610f84565b6108b36000610fb1565b565b6108bd610f5a565b808015806108cd57506003548110155b156108eb57604051637313c09d60e01b815260040160405180910390fd5b600082815260026020819052604090912090810154600382015484929161091191611019565b4210610930576040516376d3a56d60e01b815260040160405180910390fd5b836000808281526002602052604090206004015460ff166001811115610958576109586110cf565b1461097657604051632d2d860f60e11b815260040160405180910390fd5b60008581526002602081815260408084208151808301835233808252428286019081526007808501805460018082018355918b529988902094519990980290930180546001600160a01b0319166001600160a01b03909916989098178855519690950195909555815183815292830194909452661059d85a5b9cdd60ca1b9082015287907f245f82ed859b3e07a5d069ab3f24df4501aee89bf3fbd10d605980e17c115bef90606001610887565b610a2c610f84565b80600003610a4d57604051630e52390960e41b815260040160405180910390fd5b60048190556040518181527fc3869fc4914caa4e69064c93dc69ce5b5b73da5a26717b551e7b6b23f2db9b1b9060200160405180910390a150565b610a90610f84565b610a98610f5a565b81801580610aa857506003548110155b15610ac657604051637313c09d60e01b815260040160405180910390fd5b826000808281526002602052604090206004015460ff166001811115610aee57610aee6110cf565b14610b0c57604051632d2d860f60e11b815260040160405180910390fd5b612710831115610b2f57604051630e52390960e41b815260040160405180910390fd5b600084815260026020526040812060018101549091908510159081610b575782600701610b5c565b826006015b9050600082610b6e5783600601610b73565b836007015b9050600083610ba157604051806040016040528060078152602001661059d85a5b9cdd60ca1b815250610bc2565b6040518060400160405280600781526020016624b72330bb37b960c91b8152505b6004548354919250600091610bd791906111f0565b8660050154610be69190611019565b845490915015801590610bf95750600081115b15610e1e576000805b8554811015610c775760008860030154878381548110610c2457610c24611207565b906000526020600020906002020160010154610c40919061121d565b90506000818a60020154610c54919061121d565b9050610c608185611019565b935050508080610c6f906111d7565b915050610c02565b508015610e1c5760005b8554811015610e1a5760008860030154878381548110610ca357610ca3611207565b906000526020600020906002020160010154610cbf919061121d565b90506000818a60020154610cd3919061121d565b9050600084610ce287846111f0565b610cec9190611230565b90508015610e04578060056000828254610d06919061121d565b925050819055506000898581548110610d2157610d21611207565b600091825260208220600290910201546040516001600160a01b039091169184919081818185875af1925050503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5050905080610da1576040516312171d8360e31b815260040160405180910390fd5b898581548110610db357610db3611207565b6000918252602091829020600290910201546040518481526001600160a01b03909116917fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6910160405180910390a2505b5050508080610e12906111d7565b915050610c81565b505b505b60048601805460ff191660011790556040518a907f579e7f72f41084c4072560a3d26ffa8c9361debca741683ee5f7f2cf9a461a5390610e5f908590611252565b60405180910390a250505050505050506106936001600055565b606081801580610e8b57506003548110155b15610ea957604051637313c09d60e01b815260040160405180910390fd5b600083815260026020908152604080832060070180548251818502810185019093528083529193909284018215610478576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610430565b610f22610f84565b6001600160a01b038116610f5157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61089e81610fb1565b600260005403610f7d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001546001600160a01b031633146108b35760405163118cdaa760e01b8152336004820152602401610f48565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561102c5761102c611003565b92915050565b60006020828403121561104457600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561109657815180516001600160a01b03168552860151868501529284019290850190600101611068565b5091979650505050505050565b6000806000606084860312156110b857600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b6002811061110357634e487b7160e01b600052602160045260246000fd5b9052565b60006101008201905089825288602083015287604083015286606083015261113260808301876110e5565b8460a08301528360c08301528260e08301529998505050505050505050565b600060c08201905087825286602083015285604083015284606083015261117b60808301856110e5565b8260a0830152979650505050505050565b6000806040838503121561119f57600080fd5b50508035926020909101359150565b6000602082840312156111c057600080fd5b81356001600160a01b03811681146105de57600080fd5b6000600182016111e9576111e9611003565b5060010190565b808202811582820484141761102c5761102c611003565b634e487b7160e01b600052603260045260246000fd5b8181038181111561102c5761102c611003565b60008261124d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b8181101561127f57858101830151858201604001528201611263565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220e2ff62ef65b45c52be5c8ae407f6c4c8c7d20c1a8c9826241f76b8450fc4790b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x98DEA89C EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xBAC03CD7 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xDC6E4495 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x7776EAB6 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x7CABD293 EQ PUSH2 0x316 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x582BD8F1 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5AF01B91 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6D9AAC62 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x6EC1B041 EQ PUSH2 0x2AE JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x4B8BA5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x9EEA131 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x312C9E87 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x3937066C EQ PUSH2 0x1C5 JUMPI PUSH2 0x12C JUMP JUMPDEST CALLDATASIZE PUSH2 0x12C JUMPI CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x8A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x118C JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0x3E6 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x430 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 ISZERO DUP1 PUSH2 0x496 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x0 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FC PUSH2 0x10CF JUMP JUMPDEST EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x510 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x2710 DUP5 GT DUP1 PUSH2 0x51E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP10 SWAP1 SSTORE SWAP1 DUP2 ADD DUP8 SWAP1 SSTORE TIMESTAMP DUP2 DUP6 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP7 SWAP1 SSTORE DUP4 SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x588 DUP4 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x476F7BDB10D30E2DE6D06E5D144C76D3963482C10F097A5048C401C84D1A1025 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 POP PUSH2 0x5DE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5ED PUSH2 0xF84 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD1C8867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x622 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x671 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 ISZERO DUP1 PUSH2 0x6B0 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP7 DUP8 MSTORE POP POP PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP7 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP12 SWAP4 SWAP10 POP SWAP2 SWAP8 POP PUSH1 0xFF AND SWAP6 POP SWAP4 POP JUMP JUMPDEST PUSH2 0x722 PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x732 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x776 SWAP2 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE SWAP9 DUP8 SWAP1 KECCAK256 SWAP4 MLOAD SWAP9 SWAP1 SWAP8 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP8 SSTORE SWAP1 MLOAD SWAP6 SWAP1 SWAP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x89E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A9 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x0 PUSH2 0xFB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8BD PUSH2 0xF5A JUMP JUMPDEST DUP1 DUP1 ISZERO DUP1 PUSH2 0x8CD JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD DUP5 SWAP3 SWAP2 PUSH2 0x911 SWAP2 PUSH2 0x1019 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x76D3A56D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x958 JUMPI PUSH2 0x958 PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 SWAP5 MLOAD SWAP10 SWAP1 SWAP9 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND SWAP9 SWAP1 SWAP9 OR DUP9 SSTORE MLOAD SWAP7 SWAP1 SWAP6 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL SWAP1 DUP3 ADD MSTORE DUP8 SWAP1 PUSH32 0x245F82ED859B3E07A5D069AB3F24DF4501AEE89BF3FBD10D605980E17C115BEF SWAP1 PUSH1 0x60 ADD PUSH2 0x887 JUMP JUMPDEST PUSH2 0xA2C PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC3869FC4914CAA4E69064C93DC69CE5B5B73DA5A26717B551E7B6B23F2DB9B1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xF5A JUMP JUMPDEST DUP2 DUP1 ISZERO DUP1 PUSH2 0xAA8 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0x10CF JUMP JUMPDEST EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D2D860F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP4 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE523909 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP6 LT ISZERO SWAP1 DUP2 PUSH2 0xB57 JUMPI DUP3 PUSH1 0x7 ADD PUSH2 0xB5C JUMP JUMPDEST DUP3 PUSH1 0x6 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xB6E JUMPI DUP4 PUSH1 0x6 ADD PUSH2 0xB73 JUMP JUMPDEST DUP4 PUSH1 0x7 ADD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1059D85A5B9CDD PUSH1 0xCA SHL DUP2 MSTORE POP PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x24B72330BB37B9 PUSH1 0xC9 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x4 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST DUP7 PUSH1 0x5 ADD SLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBF9 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xC77 JUMPI PUSH1 0x0 DUP9 PUSH1 0x3 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC24 JUMPI PUSH2 0xC24 PUSH2 0x1207 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP11 PUSH1 0x2 ADD SLOAD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH2 0xC60 DUP2 DUP6 PUSH2 0x1019 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0xC6F SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC02 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP9 PUSH1 0x3 ADD SLOAD DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0x1207 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP11 PUSH1 0x2 ADD SLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH2 0xCE2 DUP8 DUP5 PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE04 JUMPI DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x121D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xD21 JUMPI PUSH2 0xD21 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xE12 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC81 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP11 SWAP1 PUSH32 0x579E7F72F41084C4072560A3D26FFA8C9361DEBCA741683EE5F7F2CF9A461A53 SWAP1 PUSH2 0xE5F SWAP1 DUP6 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0x693 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 ISZERO DUP1 PUSH2 0xE8B JUMPI POP PUSH1 0x3 SLOAD DUP2 LT ISZERO JUMPDEST ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7313C09D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD DUP3 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x430 JUMP JUMPDEST PUSH2 0xF22 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89E DUP2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1096 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1068 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1103 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP DUP10 DUP3 MSTORE DUP9 PUSH1 0x20 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE DUP7 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1132 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP3 PUSH1 0xE0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP8 DUP3 MSTORE DUP7 PUSH1 0x20 DUP4 ADD MSTORE DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x117B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x10E5 JUMP JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11E9 JUMPI PUSH2 0x11E9 PUSH2 0x1003 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x124D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x127F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1263 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SELFDESTRUCT PUSH3 0xEF65B4 0x5C MSTORE 0xBE 0x5C DUP11 0xE4 SMOD 0xF6 0xC4 0xC8 0xC7 0xD2 0xC BYTE DUP13 SWAP9 0x26 0x24 0x1F PUSH23 0xB8450FC4790B64736F6C63430008140033000000000000 ","sourceMap":"389:11024:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11307:9;11283:20;;:33;;;;;;;:::i;:::-;;;;;;;;389:11024;11395:9;11371:20;;:33;;;;;;;:::i;9096:202::-;;;;;;;;;;-1:-1:-1;9096:202:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9826:320;;;;;;;;;;-1:-1:-1;9826:320:6;;;;;:::i;:::-;;:::i;:::-;;;1439:14:8;;1432:22;1414:41;;1402:2;1387:18;9826:320:6;1274:187:8;2944:918:6;;;;;;:::i;:::-;;:::i;:::-;;;1933:25:8;;;1921:2;1906:18;2944:918:6;1787:177:8;1036:27:6;;;;;;;;;;;;;;;;10676:316;;;;;;;;;;-1:-1:-1;10676:316:6;;;;;:::i;:::-;;:::i;:::-;;8178:764;;;;;;;;;;-1:-1:-1;8178:764:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;1069:31::-;;;;;;;;;;;;;;;;989:41;;;;;;;;;;-1:-1:-1;989:41:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3996:434::-;;;;;;;;;;-1:-1:-1;3996:434:6;;;;;:::i;:::-;;:::i;11090:107::-;;;;;;;;;;-1:-1:-1;11169:21:6;11090:107;;2293:101:0;;;;;;;;;;;;;:::i;4560:442:6:-;;;;;;;;;;-1:-1:-1;4560:442:6;;;;;:::i;:::-;;:::i;10311:239::-;;;;;;;;;;-1:-1:-1;10311:239:6;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;3788:51:8;;3776:2;3761:18;1638:85:0;3642:203:8;5210:2380:6;;;;;;;;;;-1:-1:-1;5210:2380:6;;;;;:::i;:::-;;:::i;1173:35::-;;;;;;;;;;;;;;;;9447:202;;;;;;;;;;-1:-1:-1;9447:202:6;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;9096:202:6:-;9222:14;9194:8;2084:13;;;:41;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1;;;2148:16:6;;;;;;;;;;;2080:95;9260:17:::1;::::0;;;:7:::1;:17;::::0;;;;;;;:31:::1;;9253:38:::0;;;;;;::::1;::::0;;;;;;;;;;;;9260:31;;9253:38;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;9253:38:6::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;9096:202:::0;;;;:::o;9826:320::-;9951:4;9923:8;2084:13;;;:41;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1;;;2148:16:6;;;;;;;;;;;2080:95;9972:21:::1;9996:17:::0;;;:7:::1;:17;::::0;;;;;;;10067:15;;::::1;::::0;10048:16:::1;::::0;::::1;::::0;:34:::1;::::0;10067:15;10048:34:::1;:::i;:::-;10030:15;:52;:109;;;;-1:-1:-1::0;10119:20:6::1;10102:13;::::0;::::1;::::0;::::1;;::::0;:37;::::1;;;;;;:::i;:::-;;10030:109;10023:116:::0;9826:320;-1:-1:-1;;;;9826:320:6:o;2944:918::-;3108:7;2500:21:2;:19;:21::i;:::-;3153:5:6::1;3131:19;:27;:44;;;-1:-1:-1::0;3162:13:6;;3131:44:::1;3127:101;;;3198:19;;-1:-1:-1::0;;;3198:19:6::1;;;;;;;;;;;3127:101;3265:12;::::0;;3246:16:::1;3352:17:::0;;;:7:::1;:17;::::0;;;;;;3379:23;;;3412:29:::1;::::0;::::1;:51:::0;;;3473:18;;::::1;:29:::0;;;3534:15:::1;3512:19:::0;;::::1;:37:::0;3559:16:::1;::::0;::::1;:39:::0;;-1:-1:-1;;3559:39:6::1;::::0;;3608:26:::1;::::0;::::1;:45:::0;;;3705:14;;3265:12;;3352:17;;3705:14;::::1;::::0;::::1;:::i;:::-;;;;;;3753:16;3729:20;;:40;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3793:37:6::1;::::0;3819:10:::1;::::0;3809:8;;3793:37:::1;::::0;;;::::1;-1:-1:-1::0;3847:8:6;-1:-1:-1;2542:20:2;1857:1;3068:7;:21;2888:208;2542:20;2944:918:6;;;;;:::o;10676:316::-;1531:13:0;:11;:13::i;:::-;10761:21:6::1;10752:6;:30;10748:89;;;10805:21;;-1:-1:-1::0;;;10805:21:6::1;;;;;;;;;;;10748:89;10856:12;10882:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;10882:7:6::1;-1:-1:-1::0;;;;;10874:21:6::1;10903:6;10874:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10855:59;;;10929:7;10924:62;;10959:16;;-1:-1:-1::0;;;10959:16:6::1;;;;;;;;;;;10924:62;10738:254;10676:316:::0;:::o;8178:764::-;8310:10;;;;;;;;8269:8;2084:13;;;:41;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1;;;2148:16:6;;;;;;;;;;;2080:95;-1:-1:-1;;;8599:21:6::1;8623:17:::0;;;-1:-1:-1;;8623:7:6::1;:17;::::0;;;;;;;8671:9;;8694:26:::1;::::0;::::1;::::0;8734:15;;::::1;::::0;8763:16:::1;::::0;::::1;::::0;8793:13:::1;::::0;::::1;::::0;8820:23:::1;::::0;::::1;::::0;8857:20:::1;::::0;::::1;:27:::0;8898:20:::1;::::0;;::::1;:27:::0;8671:9;;8734:15;;-1:-1:-1;8763:16:6;;-1:-1:-1;8793:13:6::1;;::::0;-1:-1:-1;8820:23:6;-1:-1:-1;8178:764:6:o;3996:434::-;2500:21:2;:19;:21::i;:::-;4098:8:6;2084:13;;;:41:::1;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1::0;;;2148:16:6::1;;;;;;;;;;;2080:95;2259:21:::2;2283:17:::0;;;:7:::2;:17;::::0;;;;;;;2352:15;;::::2;::::0;2333:16:::2;::::0;::::2;::::0;4137:8;;2283:17;2333:34:::2;::::0;::::2;:::i;:::-;2314:15;:53;2310:110;;2390:19;;-1:-1:-1::0;;;2390:19:6::2;;;;;;;;;;;2310:110;4168:8:::0;2528:20:::3;2500:17:::0;;;;:7:::3;:17;::::0;;;;:24:::3;;::::0;::::3;;::::0;:48;::::3;;;;;;:::i;:::-;;2496:109;;2571:23;;-1:-1:-1::0;;;2571:23:6::3;;;;;;;;;;;2496:109;4202:21:::4;4226:17:::0;;;:7:::4;:17;::::0;;;;;;;4279:89;;;;::::4;::::0;;4307:10:::4;4279:89:::0;;;4342:15:::4;4279:89:::0;;::::4;::::0;;;4253:20:::4;::::0;::::4;:116:::0;;::::4;::::0;;::::4;::::0;;;;;;;;;;;;;;::::4;::::0;;::::4;::::0;;-1:-1:-1;;;;;;4253:116:6::4;-1:-1:-1::0;;;;;4253:116:6;;::::4;::::0;;;::::4;::::0;;;;;;;::::4;::::0;;;;4384:39;;4928:21:8;;;4985:1;4965:18;;;4958:29;;;;-1:-1:-1;;;5003:18:8;;;4996:37;4226:17:6;;4384:39:::4;::::0;5065:2:8;5050:18;4384:39:6::4;;;;;;;;4183:247;2429:1:::3;2249:188:::2;2184:1;2531::2::1;2542:20:::0;1857:1;3068:7;:21;2888:208;2542:20;3996:434:6;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4560:442:6:-;2500:21:2;:19;:21::i;:::-;4662:8:6;2084:13;;;:41:::1;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1::0;;;2148:16:6::1;;;;;;;;;;;2080:95;2259:21:::2;2283:17:::0;;;:7:::2;:17;::::0;;;;;;;2352:15;;::::2;::::0;2333:16:::2;::::0;::::2;::::0;4701:8;;2283:17;2333:34:::2;::::0;::::2;:::i;:::-;2314:15;:53;2310:110;;2390:19;;-1:-1:-1::0;;;2390:19:6::2;;;;;;;;;;;2310:110;4732:8:::0;2528:20:::3;2500:17:::0;;;;:7:::3;:17;::::0;;;;:24:::3;;::::0;::::3;;::::0;:48;::::3;;;;;;:::i;:::-;;2496:109;;2571:23;;-1:-1:-1::0;;;2571:23:6::3;;;;;;;;;;;2496:109;4766:21:::4;4790:17:::0;;;:7:::4;:17;::::0;;;;;;;4843:89;;;;::::4;::::0;;4871:10:::4;4843:89:::0;;;4906:15:::4;4843:89:::0;;::::4;::::0;;;4817:20:::4;::::0;;::::4;:116:::0;;::::4;::::0;;::::4;::::0;;;;;;;;;;;;;;::::4;::::0;;::::4;::::0;;-1:-1:-1;;;;;;4817:116:6::4;-1:-1:-1::0;;;;;4817:116:6;;::::4;::::0;;;::::4;::::0;;;;;;::::4;::::0;;;;4956:39;;5263:21:8;;;5300:18;;;5293:29;;;;-1:-1:-1;;;5338:18:8;;;5331:37;4790:17:6;;4956:39:::4;::::0;5400:2:8;5385:18;4956:39:6::4;5079:330:8::0;10311:239:6;1531:13:0;:11;:13::i;:::-;10395:9:6::1;10408:1;10395:14:::0;10391:71:::1;;10432:19;;-1:-1:-1::0;;;10432:19:6::1;;;;;;;;;;;10391:71;10471:16;:28:::0;;;10514:29:::1;::::0;1933:25:8;;;10514:29:6::1;::::0;1921:2:8;1906:18;10514:29:6::1;;;;;;;10311:239:::0;:::o;5210:2380::-;1531:13:0;:11;:13::i;:::-;2500:21:2::1;:19;:21::i;:::-;5359:8:6::0;2084:13;;;:41:::2;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1::0;;;2148:16:6::2;;;;;;;;;;;2080:95;5390:8:::0;2528:20:::3;2500:17:::0;;;;:7:::3;:17;::::0;;;;:24:::3;;::::0;::::3;;::::0;:48;::::3;;;;;;:::i;:::-;;2496:109;;2571:23;;-1:-1:-1::0;;;2571:23:6::3;;;;;;;;;;;2496:109;5439:5:::4;5419:17;:25;5415:82;;;5467:19;;-1:-1:-1::0;;;5467:19:6::4;;;;;;;;;;;5415:82;5515:21;5539:17:::0;;;:7:::4;:17;::::0;;;;5649:26:::4;::::0;::::4;::::0;5539:17;;5628:47;;::::4;;::::0;;5717:57:::4;;5754:6;:20;;5717:57;;;5731:6;:20;;5717:57;5685:89;;5784:28;5815:11;:57;;5852:6;:20;;5815:57;;;5829:6;:20;;5815:57;5784:88;;5882:25;5910:11;:35;;;;;;;;;;;;;;;-1:-1:-1::0;;;5910:35:6::4;;::::0;::::4;;;;;;;;;;;;;;;;-1:-1:-1::0;;;5910:35:6::4;;::::0;::::4;6067:16;::::0;6045:19;;5882:63;;-1:-1:-1;5997:18:6::4;::::0;6045:38:::4;::::0;6067:16;6045:38:::4;:::i;:::-;6018:6;:23;;;:66;;;;:::i;:::-;6107:20:::0;;5997:87;;-1:-1:-1;6107:24:6;;;;:42:::4;;;6148:1;6135:10;:14;6107:42;6103:1329;;;6236:22;6281:9:::0;6276:263:::4;6300:20:::0;;6296:24;::::4;6276:263;;;6345:19;6396:6;:16;;;6367:13;6381:1;6367:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:45;;;;:::i;:::-;6345:67;;6430:17;6468:11;6450:6;:15;;;:29;;;;:::i;:::-;6430:49:::0;-1:-1:-1;6497:27:6::4;6430:49:::0;6497:27;::::4;:::i;:::-;;;6327:212;;6322:3;;;;;:::i;:::-;;;;6276:263;;;-1:-1:-1::0;6622:18:6;;6618:804:::4;;6665:9;6660:748;6684:20:::0;;6680:24;::::4;6660:748;;;6733:19;6784:6;:16;;;6755:13;6769:1;6755:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:45;;;;:::i;:::-;6733:67;;6822:17;6860:11;6842:6;:15;;;:29;;;;:::i;:::-;6822:49:::0;-1:-1:-1;6893:14:6::4;6937::::0;6911:22:::4;6923:10:::0;6822:49;6911:22:::4;:::i;:::-;6910:41;;;;:::i;:::-;6893:58:::0;-1:-1:-1;6998:10:6;;6994:396:::4;;7060:6;7036:20;;:30;;;;;;;:::i;:::-;;;;;;;;7093:12;7119:13;7133:1;7119:16;;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;::::4;::::0;;::::4;;:23:::0;7111:56:::4;::::0;-1:-1:-1;;;;;7119:23:6;;::::4;::::0;7156:6;;7111:56;;7119:16;7111:56;7156:6;7119:23;7111:56:::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7092:75;;;7198:7;7193:94;;7244:16;;-1:-1:-1::0;;;7244:16:6::4;;;;;;;;;;;7193:94;7335:13;7349:1;7335:16;;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;;;::::4;::::0;;::::4;;:23:::0;7317:50:::4;::::0;1933:25:8;;;-1:-1:-1;;;;;7335:23:6;;::::4;::::0;7317:50:::4;::::0;1906:18:8;7317:50:6::4;;;;;;;7010:380;6994:396;6711:697;;;6706:3;;;;;:::i;:::-;;;;6660:748;;;;6618:804;6151:1281;6103:1329;7485:13;::::0;::::4;:37:::0;;-1:-1:-1;;7485:37:6::4;7501:21;7485:37;::::0;;7546::::4;::::0;7561:8;;7546:37:::4;::::0;::::4;::::0;7571:11;;7546:37:::4;:::i;:::-;;;;;;;;5405:2185;;;;;;2184:1:::3;2531::2::2;2542:20:::1;1857:1:::0;3068:7;:21;2888:208;9447:202:6;9573:14;9545:8;2084:13;;;:41;;;2113:12;;2101:8;:24;;2084:41;2080:95;;;2148:16;;-1:-1:-1;;;2148:16:6;;;;;;;;;;;2080:95;9611:17:::1;::::0;;;:7:::1;:17;::::0;;;;;;;:31:::1;;9604:38:::0;;;;;;::::1;::::0;;;;;;;;;;;;9611:31;;9604:38;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;9604:38:6::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;;2543:215:0::0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3788:51:8::0;3761:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;2575:307:2:-:0;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:2;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;3788:51:8;3761:18;;1901:40:0;3642:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;:::-;146:125;;;;:::o;276:180::-;335:6;388:2;376:9;367:7;363:23;359:32;356:52;;;404:1;401;394:12;356:52;-1:-1:-1;427:23:8;;276:180;-1:-1:-1;276:180:8:o;461:808::-;676:2;728:21;;;798:13;;701:18;;;820:22;;;647:4;;676:2;861;;879:18;;;;920:15;;;647:4;963:280;977:6;974:1;971:13;963:280;;;1036:13;;1078:9;;-1:-1:-1;;;;;1074:35:8;1062:48;;1150:11;;1144:18;1130:12;;;1123:40;1183:12;;;;1218:15;;;;1106:1;992:9;963:280;;;-1:-1:-1;1260:3:8;;461:808;-1:-1:-1;;;;;;;461:808:8:o;1466:316::-;1543:6;1551;1559;1612:2;1600:9;1591:7;1587:23;1583:32;1580:52;;;1628:1;1625;1618:12;1580:52;-1:-1:-1;;1651:23:8;;;1721:2;1706:18;;1693:32;;-1:-1:-1;1772:2:8;1757:18;;;1744:32;;1466:316;-1:-1:-1;1466:316:8:o;1969:127::-;2030:10;2025:3;2021:20;2018:1;2011:31;2061:4;2058:1;2051:15;2085:4;2082:1;2075:15;2101:240;2185:1;2178:5;2175:12;2165:143;;2230:10;2225:3;2221:20;2218:1;2211:31;2265:4;2262:1;2255:15;2293:4;2290:1;2283:15;2165:143;2317:18;;2101:240::o;2346:715::-;2648:4;2690:3;2679:9;2675:19;2667:27;;2721:6;2710:9;2703:25;2764:6;2759:2;2748:9;2744:18;2737:34;2807:6;2802:2;2791:9;2787:18;2780:34;2850:6;2845:2;2834:9;2830:18;2823:34;2866:57;2918:3;2907:9;2903:19;2895:6;2866:57;:::i;:::-;2960:6;2954:3;2943:9;2939:19;2932:35;3004:6;2998:3;2987:9;2983:19;2976:35;3048:6;3042:3;3031:9;3027:19;3020:35;2346:715;;;;;;;;;;;:::o;3066:571::-;3312:4;3354:3;3343:9;3339:19;3331:27;;3385:6;3374:9;3367:25;3428:6;3423:2;3412:9;3408:18;3401:34;3471:6;3466:2;3455:9;3451:18;3444:34;3514:6;3509:2;3498:9;3494:18;3487:34;3530:57;3582:3;3571:9;3567:19;3559:6;3530:57;:::i;:::-;3624:6;3618:3;3607:9;3603:19;3596:35;3066:571;;;;;;;;;:::o;3850:248::-;3918:6;3926;3979:2;3967:9;3958:7;3954:23;3950:32;3947:52;;;3995:1;3992;3985:12;3947:52;-1:-1:-1;;4018:23:8;;;4088:2;4073:18;;;4060:32;;-1:-1:-1;3850:248:8:o;4103:286::-;4162:6;4215:2;4203:9;4194:7;4190:23;4186:32;4183:52;;;4231:1;4228;4221:12;4183:52;4257:23;;-1:-1:-1;;;;;4309:31:8;;4299:42;;4289:70;;4355:1;4352;4345:12;4394:135;4433:3;4454:17;;;4451:43;;4474:18;;:::i;:::-;-1:-1:-1;4521:1:8;4510:13;;4394:135::o;5414:168::-;5487:9;;;5518;;5535:15;;;5529:22;;5515:37;5505:71;;5556:18;;:::i;5587:127::-;5648:10;5643:3;5639:20;5636:1;5629:31;5679:4;5676:1;5669:15;5703:4;5700:1;5693:15;5719:128;5786:9;;;5807:11;;;5804:37;;;5821:18;;:::i;5852:217::-;5892:1;5918;5908:132;;5962:10;5957:3;5953:20;5950:1;5943:31;5997:4;5994:1;5987:15;6025:4;6022:1;6015:15;5908:132;-1:-1:-1;6054:9:8;;5852:217::o;6074:548::-;6186:4;6215:2;6244;6233:9;6226:21;6276:6;6270:13;6319:6;6314:2;6303:9;6299:18;6292:34;6344:1;6354:140;6368:6;6365:1;6362:13;6354:140;;;6463:14;;;6459:23;;6453:30;6429:17;;;6448:2;6425:26;6418:66;6383:10;;6354:140;;;6358:3;6543:1;6538:2;6529:6;6518:9;6514:22;6510:31;6503:42;6613:2;6606;6602:7;6597:2;6589:6;6585:15;6581:29;6570:9;6566:45;6562:54;6554:62;;;;6074:548;;;;:::o"},"methodIdentifiers":{"emergencyWithdraw(uint256)":"5312ea8e","fixedStakeAmount()":"5af01b91","getContractBalance()":"6f9fb98a","getMetric(uint256)":"582bd8f1","getStakesAgainst(uint256)":"dc6e4495","getStakesInFavor(uint256)":"04b8ba5b","isStakingActive(uint256)":"09eea131","metrics(uint256)":"6d9aac62","nextMetricID()":"3937066c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","resolveMetric(uint256,uint256)":"98dea89c","stakeAgainst(uint256)":"7776eab6","stakeInFavor(uint256)":"6ec1b041","submitMetric(uint256,uint256,uint256)":"312c9e87","totalContractBalance()":"bac03cd7","transferOwnership(address)":"f2fde38b","updateFixedStakeAmount(uint256)":"7cabd293"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fixedStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MetricAlreadyResolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MetricNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingPeriodOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winningSide\",\"type\":\"string\"}],\"name\":\"MetricResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"MetricSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"StakeAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"side\",\"type\":\"string\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getMetric\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum MetricChallengeDAO.MetricStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakesInFavorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakesAgainstCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getStakesAgainst\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MetricChallengeDAO.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"getStakesInFavor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MetricChallengeDAO.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"isStakingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metrics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum MetricChallengeDAO.MetricStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMetricID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualLossPercent\",\"type\":\"uint256\"}],\"name\":\"resolveMetric\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"stakeAgainst\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metricID\",\"type\":\"uint256\"}],\"name\":\"stakeInFavor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedLossPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bountyCollateral\",\"type\":\"uint256\"}],\"name\":\"submitMetric\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateFixedStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A decentralized prediction market for metrics with staking mechanisms\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdraw function (only owner)\",\"params\":{\"amount\":\"Amount to withdraw in wei\"}},\"getContractBalance()\":{\"details\":\"Get contract balance\",\"returns\":{\"_0\":\"Contract balance in wei\"}},\"getMetric(uint256)\":{\"details\":\"Get metric details\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"bountyCollateral\":\"Bounty collateral amount\",\"duration\":\"Duration of staking period in seconds\",\"expectedLossPercent\":\"Expected loss percentage in basis points\",\"id\":\"The metric ID\",\"stakesAgainstCount\":\"Number of stakes against\",\"stakesInFavorCount\":\"Number of stakes in favor\",\"startTime\":\"Start timestamp of the metric\",\"status\":\"Current status of the metric\"}},\"getStakesAgainst(uint256)\":{\"details\":\"Get stakes against a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"Array of stakes against\"}},\"getStakesInFavor(uint256)\":{\"details\":\"Get stakes in favor of a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"Array of stakes in favor\"}},\"isStakingActive(uint256)\":{\"details\":\"Check if staking period is active for a metric\",\"params\":{\"metricID\":\"The ID of the metric\"},\"returns\":{\"_0\":\"True if staking period is active\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolveMetric(uint256,uint256)\":{\"details\":\"Resolve a metric and distribute rewards\",\"params\":{\"actualLossPercent\":\"The actual loss percentage in basis points\",\"metricID\":\"The ID of the metric to resolve\"}},\"stakeAgainst(uint256)\":{\"details\":\"Stake against a metric's prediction\",\"params\":{\"metricID\":\"The ID of the metric to stake on\"}},\"stakeInFavor(uint256)\":{\"details\":\"Stake in favor of a metric's prediction\",\"params\":{\"metricID\":\"The ID of the metric to stake on\"}},\"submitMetric(uint256,uint256,uint256)\":{\"details\":\"Submit a new metric for prediction\",\"params\":{\"duration\":\"Duration of staking period in seconds\",\"expectedLossPercent\":\"Expected loss percentage in basis points (e.g., 1000 = 10%)\"},\"returns\":{\"_0\":\"metricID The ID of the newly created metric\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFixedStakeAmount(uint256)\":{\"details\":\"Update the fixed stake amount (only owner)\",\"params\":{\"newAmount\":\"New stake amount in wei\"}}},\"title\":\"MetricChallengeDAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Users can submit metrics, stake on outcomes, and earn rewards based on accuracy and timing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetricChallengeDAO.sol\":\"MetricChallengeDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/MetricChallengeDAO.sol\":{\"keccak256\":\"0x9ec5d929133ececeaaa8eae80bd52795a6a95c585e3992afda8c0decfa0b2ad5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b73a98006745c63d69923f6263b27bf8e11a82888345614cdcf7fe977f40a0\",\"dweb:/ipfs/QmS4HnmzVGq4VqTM9KmPVV6BLLiEH5qouAAopu5ZShU167\"]}},\"version\":1}"}},"contracts/SimpleShortContract.sol":{"SimpleShortContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientCollateral","type":"error"},{"inputs":[],"name":"InsufficientUpdateFee","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[],"name":"NoActivePosition","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PositionAlreadyExists","type":"error"},{"inputs":[],"name":"PriceTooStale","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"int256","name":"pnl","type":"int256"},{"indexed":false,"internalType":"int64","name":"exitPrice","type":"int64"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShortClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateral","type":"uint256"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShortOpened","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"}],"name":"closeShort","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getContractInfo","outputs":[{"internalType":"uint256","name":"totalBalance","type":"uint256"},{"internalType":"address","name":"pythContract","type":"address"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPrice","outputs":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"int64","name":"entryPrice","type":"int64"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct SimpleShortContract.ShortPosition","name":"position","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"hasActivePosition","outputs":[{"internalType":"bool","name":"hasPosition","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"}],"name":"openShort","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"positions","outputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"int64","name":"entryPrice","type":"int64"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pyth","outputs":[{"internalType":"contract IPyth","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"viewPnL","outputs":[{"internalType":"int256","name":"pnl","type":"int256"},{"internalType":"int64","name":"currentPrice","type":"int64"},{"internalType":"int256","name":"pnlPercentage","type":"int256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1387":{"entryPoint":null,"id":1387,"parameterSlots":0,"returnSlots":0},"@_199":{"entryPoint":null,"id":199,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":99,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:8","statements":[{"nodeType":"YulAssignment","src":"125:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:8"},"nodeType":"YulFunctionCall","src":"133:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:8"},"nodeType":"YulFunctionCall","src":"194:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:8"},"nodeType":"YulFunctionCall","src":"190:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:8"},"nodeType":"YulFunctionCall","src":"178:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:8"},"nodeType":"YulFunctionCall","src":"160:51:8"},"nodeType":"YulExpressionStatement","src":"160:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:8","type":""}],"src":"14:203:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE CALLER DUP1 PUSH2 0x3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45 DUP2 PUSH2 0x63 JUMP JUMPDEST POP PUSH20 0xDD24F84D36BF92C65F92307595C6B99D36B6F8C4 PUSH1 0x80 MSTORE PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1339 PUSH2 0x101 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x304 ADD MSTORE DUP2 DUP2 PUSH2 0x490 ADD MSTORE DUP2 DUP2 PUSH2 0x508 ADD MSTORE DUP2 DUP2 PUSH2 0x5BA ADD MSTORE DUP2 DUP2 PUSH2 0xADE ADD MSTORE DUP2 DUP2 PUSH2 0xB8F ADD MSTORE DUP2 DUP2 PUSH2 0xCFF ADD MSTORE PUSH2 0xDBC ADD MSTORE PUSH2 0x1339 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86E1CE5E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD47EED45 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD47EED45 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x47E JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x86E1CE5E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x93B57F99 EQ PUSH2 0x3AC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x55F57510 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x7CC1F867 EQ PUSH2 0x2F4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x16C19739 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2EB99760 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x36198EB9 EQ PUSH2 0x212 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x7 SIGNEXTEND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 PUSH1 0x7 SIGNEXTEND SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x7 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0xA4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH32 0x0 PUSH32 0xFF61491A931112DDF1BD8147CD1B641375F79F5825126D665480874634FD0ACE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x7 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0xED9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF2FCAF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0x53F SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7D7F926B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEF9E5E28 SWAP1 DUP4 SWAP1 PUSH2 0x5F3 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x62F PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x1 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x649 SWAP1 DUP4 SWAP1 PUSH1 0x7 SIGNEXTEND PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP3 POP PUSH1 0x0 SWAP2 SIGNEXTEND PUSH2 0x665 DUP4 PUSH2 0x2710 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x6E0 JUMPI DUP7 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x6B2 SWAP1 PUSH1 0xC8 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6CA JUMPI DUP1 SWAP2 POP JUMPDEST DUP9 SLOAD PUSH2 0x6D7 SWAP1 DUP4 SWAP1 PUSH2 0x1202 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP4 PUSH2 0x1215 JUMP JUMPDEST DUP9 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x6FF JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x70F JUMP JUMPDEST DUP8 SLOAD PUSH2 0x70C SWAP1 DUP3 SWAP1 PUSH2 0x1231 JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x3 DUP8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x76A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP6 CALLVALUE GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 CALLER PUSH2 0x7A3 DUP9 CALLVALUE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x8F36BF8AD209B778C198AC14AC833B260F63CC14EF9DD9A6DFEDEF1106491592 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP POP POP POP POP POP PUSH2 0x85E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF2FCAF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP4 POP PUSH1 0x0 SWAP1 PUSH2 0x8C5 SWAP1 DUP6 SWAP1 PUSH1 0x7 SIGNEXTEND PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP3 POP SWAP1 SIGNEXTEND PUSH2 0x8DF DUP3 PUSH2 0x2710 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP5 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x929 JUMPI DUP2 PUSH2 0x92B JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP SELFBALANCE DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x0 PUSH2 0xF30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA68 PUSH2 0xED9 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A23D825 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDD1BC8B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0xB15 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE GT PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7D7F926B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEF9E5E28 SWAP1 DUP4 SWAP1 PUSH2 0xBC8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xC04 PUSH2 0xD80 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xC13 DUP4 CALLVALUE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x7 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP5 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP1 DUP9 ADD DUP3 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP11 MSTORE SWAP1 DUP13 SWAP1 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP7 MLOAD SWAP4 DUP11 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE DUP6 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH32 0x91931FB6FDB7B87E2E5137745805E8584A7047067DBF59A30BCD96DDAF3F9875 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x85E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0xD36 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0xFF61491A931112DDF1BD8147CD1B641375F79F5825126D665480874634FD0ACE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x96834AD3 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND SGT PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E0942D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xEA3 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0xED6 DUP2 PUSH2 0xF30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x40 PUSH1 0x5 DUP6 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP1 DUP5 ADD DUP7 DUP5 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x10F8 JUMPI DUP7 DUP5 SUB PUSH1 0x3F NOT ADD DUP4 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD DUP6 DUP2 ADD SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E4 DUP7 DUP3 DUP5 PUSH2 0x1040 JUMP JUMPDEST SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1088 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH8 0x7FFFFFFFFFFFFFFF NOT DUP2 SLT PUSH8 0x7FFFFFFFFFFFFFFF DUP3 SGT OR ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x117F JUMPI PUSH2 0x117F PUSH2 0x111E JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B8 JUMPI PUSH2 0x11B8 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D2 PUSH2 0x111E JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11FD JUMPI PUSH2 0x11FD PUSH2 0x1193 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x122A JUMPI PUSH2 0x122A PUSH2 0x111E JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x12D9 PUSH1 0x20 DUP5 ADD PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12EA PUSH1 0x40 DUP5 ADD PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xD8 0x24 SWAP10 0xB6 0xA9 DUP9 CALL 0xD6 NUMBER PUSH5 0x7B94B20BA2 MULMOD RETURNDATASIZE SWAP8 SWAP11 0xAC 0xDF PUSH13 0x68A671EE0692AC952564736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"469:9087:7:-:0;;;1981:86;;;;;;;;;-1:-1:-1;1857:1:2;2061:7;:21;2003:10:7;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:8;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1010:42:7::1;2025:35;::::0;469:9087;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:203:8:-;469:9087:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1935":{"entryPoint":null,"id":1935,"parameterSlots":0,"returnSlots":0},"@_1944":{"entryPoint":null,"id":1944,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3843,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_234":{"entryPoint":null,"id":234,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_226":{"entryPoint":3801,"id":226,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3888,"id":146,"parameterSlots":1,"returnSlots":0},"@closeShort_1738":{"entryPoint":1202,"id":1738,"parameterSlots":2,"returnSlots":0},"@emergencyWithdraw_1930":{"entryPoint":2323,"id":1930,"parameterSlots":1,"returnSlots":0},"@getContractInfo_1872":{"entryPoint":null,"id":1872,"parameterSlots":0,"returnSlots":3},"@getCurrentPrice_1435":{"entryPoint":3456,"id":1435,"parameterSlots":0,"returnSlots":2},"@getPosition_1820":{"entryPoint":null,"id":1820,"parameterSlots":1,"returnSlots":1},"@getUpdateFee_1849":{"entryPoint":3301,"id":1849,"parameterSlots":2,"returnSlots":1},"@hasActivePosition_1834":{"entryPoint":null,"id":1834,"parameterSlots":1,"returnSlots":1},"@openShort_1519":{"entryPoint":2656,"id":1519,"parameterSlots":2,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@positions_1318":{"entryPoint":null,"id":1318,"parameterSlots":0,"returnSlots":0},"@pyth_1304":{"entryPoint":null,"id":1304,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2636,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3739,"id":126,"parameterSlots":1,"returnSlots":0},"@viewPnL_1806":{"entryPoint":2146,"id":1806,"parameterSlots":1,"returnSlots":3},"abi_decode_int32_fromMemory":{"entryPoint":4705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4018,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory":{"entryPoint":4723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4357,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64_fromMemory":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":4160,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4201,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256_t_int64_t_int256__to_t_int256_t_int64_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_int256_t_int64_t_uint256__to_t_int256_t_int64_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_int64_t_uint64__to_t_int64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ShortPosition_$1313_memory_ptr__to_t_struct$_ShortPosition_$1313_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_int64_t_uint256__to_t_uint256_t_int64_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_int64_t_uint256_t_bool__to_t_uint256_t_int64_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4610,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_int256":{"entryPoint":4521,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4590,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_int256":{"entryPoint":4451,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4567,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int64":{"entryPoint":4404,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4657,"id":null,"parameterSlots":2,"returnSlots":1},"negate_t_int256":{"entryPoint":4629,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4382,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4499,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10059:8","statements":[{"nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:168:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:8"},"nodeType":"YulFunctionCall","src":"198:21:8"},"nodeType":"YulExpressionStatement","src":"198:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:8"},"nodeType":"YulFunctionCall","src":"235:18:8"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:8","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:8"},"nodeType":"YulFunctionCall","src":"228:30:8"},"nodeType":"YulExpressionStatement","src":"228:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:8"},"nodeType":"YulFunctionCall","src":"274:18:8"},{"hexValue":"46756e6374696f6e206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"294:20:8","type":"","value":"Function not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:8"},"nodeType":"YulFunctionCall","src":"267:48:8"},"nodeType":"YulExpressionStatement","src":"267:48:8"},{"nodeType":"YulAssignment","src":"324:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"336:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"347:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"332:3:8"},"nodeType":"YulFunctionCall","src":"332:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"324:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:8","type":""}],"src":"14:342:8"},{"body":{"nodeType":"YulBlock","src":"431:216:8","statements":[{"body":{"nodeType":"YulBlock","src":"477:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"486:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"489:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"479:6:8"},"nodeType":"YulFunctionCall","src":"479:12:8"},"nodeType":"YulExpressionStatement","src":"479:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"452:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"448:3:8"},"nodeType":"YulFunctionCall","src":"448:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"473:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"444:3:8"},"nodeType":"YulFunctionCall","src":"444:32:8"},"nodeType":"YulIf","src":"441:52:8"},{"nodeType":"YulVariableDeclaration","src":"502:36:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"528:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"515:12:8"},"nodeType":"YulFunctionCall","src":"515:23:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"506:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"601:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"603:6:8"},"nodeType":"YulFunctionCall","src":"603:12:8"},"nodeType":"YulExpressionStatement","src":"603:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"591:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"582:3:8"},"nodeType":"YulFunctionCall","src":"582:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"595:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"578:3:8"},"nodeType":"YulFunctionCall","src":"578:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"567:3:8"},"nodeType":"YulFunctionCall","src":"567:31:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"557:2:8"},"nodeType":"YulFunctionCall","src":"557:42:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"550:6:8"},"nodeType":"YulFunctionCall","src":"550:50:8"},"nodeType":"YulIf","src":"547:70:8"},{"nodeType":"YulAssignment","src":"626:15:8","value":{"name":"value","nodeType":"YulIdentifier","src":"636:5:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"626:6:8"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"397:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"408:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"420:6:8","type":""}],"src":"361:286:8"},{"body":{"nodeType":"YulBlock","src":"815:304:8","statements":[{"nodeType":"YulAssignment","src":"825:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"837:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"848:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"833:3:8"},"nodeType":"YulFunctionCall","src":"833:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"825:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"885:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"879:5:8"},"nodeType":"YulFunctionCall","src":"879:13:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:8"},"nodeType":"YulFunctionCall","src":"861:32:8"},"nodeType":"YulExpressionStatement","src":"861:32:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"913:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"924:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:8"},"nodeType":"YulFunctionCall","src":"909:20:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"942:1:8","type":"","value":"7"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"955:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"963:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:8"},"nodeType":"YulFunctionCall","src":"951:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"945:5:8"},"nodeType":"YulFunctionCall","src":"945:24:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"931:10:8"},"nodeType":"YulFunctionCall","src":"931:39:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"902:6:8"},"nodeType":"YulFunctionCall","src":"902:69:8"},"nodeType":"YulExpressionStatement","src":"902:69:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1002:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:8"},"nodeType":"YulFunctionCall","src":"987:20:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1019:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1027:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1015:3:8"},"nodeType":"YulFunctionCall","src":"1015:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1009:5:8"},"nodeType":"YulFunctionCall","src":"1009:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"980:6:8"},"nodeType":"YulFunctionCall","src":"980:54:8"},"nodeType":"YulExpressionStatement","src":"980:54:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1054:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1065:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1050:3:8"},"nodeType":"YulFunctionCall","src":"1050:20:8"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1096:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1104:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1092:3:8"},"nodeType":"YulFunctionCall","src":"1092:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1086:5:8"},"nodeType":"YulFunctionCall","src":"1086:24:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1079:6:8"},"nodeType":"YulFunctionCall","src":"1079:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1072:6:8"},"nodeType":"YulFunctionCall","src":"1072:40:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1043:6:8"},"nodeType":"YulFunctionCall","src":"1043:70:8"},"nodeType":"YulExpressionStatement","src":"1043:70:8"}]},"name":"abi_encode_tuple_t_struct$_ShortPosition_$1313_memory_ptr__to_t_struct$_ShortPosition_$1313_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"784:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"795:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"806:4:8","type":""}],"src":"652:467:8"},{"body":{"nodeType":"YulBlock","src":"1240:510:8","statements":[{"body":{"nodeType":"YulBlock","src":"1286:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1295:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1298:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1288:6:8"},"nodeType":"YulFunctionCall","src":"1288:12:8"},"nodeType":"YulExpressionStatement","src":"1288:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1261:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1270:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1257:3:8"},"nodeType":"YulFunctionCall","src":"1257:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1282:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1253:3:8"},"nodeType":"YulFunctionCall","src":"1253:32:8"},"nodeType":"YulIf","src":"1250:52:8"},{"nodeType":"YulVariableDeclaration","src":"1311:37:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1338:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1325:12:8"},"nodeType":"YulFunctionCall","src":"1325:23:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1315:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1357:28:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1367:18:8","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1361:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1412:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1421:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1424:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1414:6:8"},"nodeType":"YulFunctionCall","src":"1414:12:8"},"nodeType":"YulExpressionStatement","src":"1414:12:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1400:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1408:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1397:2:8"},"nodeType":"YulFunctionCall","src":"1397:14:8"},"nodeType":"YulIf","src":"1394:34:8"},{"nodeType":"YulVariableDeclaration","src":"1437:32:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1451:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1462:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1447:3:8"},"nodeType":"YulFunctionCall","src":"1447:22:8"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1441:2:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1517:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1526:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1529:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1519:6:8"},"nodeType":"YulFunctionCall","src":"1519:12:8"},"nodeType":"YulExpressionStatement","src":"1519:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1496:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"1500:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1492:3:8"},"nodeType":"YulFunctionCall","src":"1492:13:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1507:7:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1488:3:8"},"nodeType":"YulFunctionCall","src":"1488:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1481:6:8"},"nodeType":"YulFunctionCall","src":"1481:35:8"},"nodeType":"YulIf","src":"1478:55:8"},{"nodeType":"YulVariableDeclaration","src":"1542:30:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1569:2:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1556:12:8"},"nodeType":"YulFunctionCall","src":"1556:16:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1546:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1599:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1608:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1611:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1601:6:8"},"nodeType":"YulFunctionCall","src":"1601:12:8"},"nodeType":"YulExpressionStatement","src":"1601:12:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1587:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"1595:2:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1584:2:8"},"nodeType":"YulFunctionCall","src":"1584:14:8"},"nodeType":"YulIf","src":"1581:34:8"},{"body":{"nodeType":"YulBlock","src":"1673:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1685:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1675:6:8"},"nodeType":"YulFunctionCall","src":"1675:12:8"},"nodeType":"YulExpressionStatement","src":"1675:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1638:2:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1646:1:8","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1649:6:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1642:3:8"},"nodeType":"YulFunctionCall","src":"1642:14:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1634:3:8"},"nodeType":"YulFunctionCall","src":"1634:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1659:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:8"},"nodeType":"YulFunctionCall","src":"1630:32:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1664:7:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1627:2:8"},"nodeType":"YulFunctionCall","src":"1627:45:8"},"nodeType":"YulIf","src":"1624:65:8"},{"nodeType":"YulAssignment","src":"1698:21:8","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1712:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"1716:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:8"},"nodeType":"YulFunctionCall","src":"1708:11:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1698:6:8"}]},{"nodeType":"YulAssignment","src":"1728:16:8","value":{"name":"length","nodeType":"YulIdentifier","src":"1738:6:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1728:6:8"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1198:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1209:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1221:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1229:6:8","type":""}],"src":"1124:626:8"},{"body":{"nodeType":"YulBlock","src":"1904:177:8","statements":[{"nodeType":"YulAssignment","src":"1914:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1937:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:8"},"nodeType":"YulFunctionCall","src":"1922:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1914:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1956:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"1967:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1949:6:8"},"nodeType":"YulFunctionCall","src":"1949:25:8"},"nodeType":"YulExpressionStatement","src":"1949:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1994:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1990:3:8"},"nodeType":"YulFunctionCall","src":"1990:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2021:1:8","type":"","value":"7"},{"name":"value1","nodeType":"YulIdentifier","src":"2024:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2010:10:8"},"nodeType":"YulFunctionCall","src":"2010:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1983:6:8"},"nodeType":"YulFunctionCall","src":"1983:49:8"},"nodeType":"YulExpressionStatement","src":"1983:49:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2052:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2063:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2048:3:8"},"nodeType":"YulFunctionCall","src":"2048:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"2068:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2041:6:8"},"nodeType":"YulFunctionCall","src":"2041:34:8"},"nodeType":"YulExpressionStatement","src":"2041:34:8"}]},"name":"abi_encode_tuple_t_int256_t_int64_t_int256__to_t_int256_t_int64_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1857:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1868:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1876:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1884:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1895:4:8","type":""}],"src":"1755:326:8"},{"body":{"nodeType":"YulBlock","src":"2156:110:8","statements":[{"body":{"nodeType":"YulBlock","src":"2202:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2211:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2214:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2204:6:8"},"nodeType":"YulFunctionCall","src":"2204:12:8"},"nodeType":"YulExpressionStatement","src":"2204:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2177:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2173:3:8"},"nodeType":"YulFunctionCall","src":"2173:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2198:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2169:3:8"},"nodeType":"YulFunctionCall","src":"2169:32:8"},"nodeType":"YulIf","src":"2166:52:8"},{"nodeType":"YulAssignment","src":"2227:33:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2250:9:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2237:12:8"},"nodeType":"YulFunctionCall","src":"2237:23:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2227:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2122:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2133:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2145:6:8","type":""}],"src":"2086:180:8"},{"body":{"nodeType":"YulBlock","src":"2446:237:8","statements":[{"nodeType":"YulAssignment","src":"2456:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2468:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2479:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:8"},"nodeType":"YulFunctionCall","src":"2464:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2456:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2499:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"2510:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2492:6:8"},"nodeType":"YulFunctionCall","src":"2492:25:8"},"nodeType":"YulExpressionStatement","src":"2492:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2537:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2548:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2533:3:8"},"nodeType":"YulFunctionCall","src":"2533:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:1:8","type":"","value":"7"},{"name":"value1","nodeType":"YulIdentifier","src":"2567:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2553:10:8"},"nodeType":"YulFunctionCall","src":"2553:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2526:6:8"},"nodeType":"YulFunctionCall","src":"2526:49:8"},"nodeType":"YulExpressionStatement","src":"2526:49:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2595:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2591:3:8"},"nodeType":"YulFunctionCall","src":"2591:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"2611:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2584:6:8"},"nodeType":"YulFunctionCall","src":"2584:34:8"},"nodeType":"YulExpressionStatement","src":"2584:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2638:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2649:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:8"},"nodeType":"YulFunctionCall","src":"2634:18:8"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2668:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2661:6:8"},"nodeType":"YulFunctionCall","src":"2661:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2654:6:8"},"nodeType":"YulFunctionCall","src":"2654:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:8"},"nodeType":"YulFunctionCall","src":"2627:50:8"},"nodeType":"YulExpressionStatement","src":"2627:50:8"}]},"name":"abi_encode_tuple_t_uint256_t_int64_t_uint256_t_bool__to_t_uint256_t_int64_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2391:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2402:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2410:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2418:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2426:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2437:4:8","type":""}],"src":"2271:412:8"},{"body":{"nodeType":"YulBlock","src":"2845:188:8","statements":[{"nodeType":"YulAssignment","src":"2855:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2867:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2878:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2863:3:8"},"nodeType":"YulFunctionCall","src":"2863:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2855:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2897:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"2908:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2890:6:8"},"nodeType":"YulFunctionCall","src":"2890:25:8"},"nodeType":"YulExpressionStatement","src":"2890:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2935:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2946:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2931:3:8"},"nodeType":"YulFunctionCall","src":"2931:18:8"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2955:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2971:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2976:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2967:3:8"},"nodeType":"YulFunctionCall","src":"2967:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2963:3:8"},"nodeType":"YulFunctionCall","src":"2963:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2951:3:8"},"nodeType":"YulFunctionCall","src":"2951:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:8"},"nodeType":"YulFunctionCall","src":"2924:60:8"},"nodeType":"YulExpressionStatement","src":"2924:60:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3015:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:8"},"nodeType":"YulFunctionCall","src":"3000:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"3020:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2993:6:8"},"nodeType":"YulFunctionCall","src":"2993:34:8"},"nodeType":"YulExpressionStatement","src":"2993:34:8"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2798:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2809:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2817:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2825:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2836:4:8","type":""}],"src":"2688:345:8"},{"body":{"nodeType":"YulBlock","src":"3139:102:8","statements":[{"nodeType":"YulAssignment","src":"3149:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3161:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3172:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3157:3:8"},"nodeType":"YulFunctionCall","src":"3157:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3149:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3191:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3206:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3222:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3227:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3218:3:8"},"nodeType":"YulFunctionCall","src":"3218:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"3231:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3214:3:8"},"nodeType":"YulFunctionCall","src":"3214:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3202:3:8"},"nodeType":"YulFunctionCall","src":"3202:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:8"},"nodeType":"YulFunctionCall","src":"3184:51:8"},"nodeType":"YulExpressionStatement","src":"3184:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3108:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3119:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3130:4:8","type":""}],"src":"3038:203:8"},{"body":{"nodeType":"YulBlock","src":"3341:92:8","statements":[{"nodeType":"YulAssignment","src":"3351:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3363:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3359:3:8"},"nodeType":"YulFunctionCall","src":"3359:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3351:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:8"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3418:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3411:6:8"},"nodeType":"YulFunctionCall","src":"3411:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3404:6:8"},"nodeType":"YulFunctionCall","src":"3404:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3386:6:8"},"nodeType":"YulFunctionCall","src":"3386:41:8"},"nodeType":"YulExpressionStatement","src":"3386:41:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3310:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3321:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3332:4:8","type":""}],"src":"3246:187:8"},{"body":{"nodeType":"YulBlock","src":"3539:76:8","statements":[{"nodeType":"YulAssignment","src":"3549:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3561:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3572:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3557:3:8"},"nodeType":"YulFunctionCall","src":"3557:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3549:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3591:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"3602:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3584:6:8"},"nodeType":"YulFunctionCall","src":"3584:25:8"},"nodeType":"YulExpressionStatement","src":"3584:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3508:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3519:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3530:4:8","type":""}],"src":"3438:177:8"},{"body":{"nodeType":"YulBlock","src":"3743:159:8","statements":[{"nodeType":"YulAssignment","src":"3753:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3765:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3776:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:8"},"nodeType":"YulFunctionCall","src":"3761:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3753:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3817:1:8","type":"","value":"7"},{"name":"value0","nodeType":"YulIdentifier","src":"3820:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"3806:10:8"},"nodeType":"YulFunctionCall","src":"3806:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3788:6:8"},"nodeType":"YulFunctionCall","src":"3788:40:8"},"nodeType":"YulExpressionStatement","src":"3788:40:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3848:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3859:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:8"},"nodeType":"YulFunctionCall","src":"3844:18:8"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3868:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3876:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3864:3:8"},"nodeType":"YulFunctionCall","src":"3864:31:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3837:6:8"},"nodeType":"YulFunctionCall","src":"3837:59:8"},"nodeType":"YulExpressionStatement","src":"3837:59:8"}]},"name":"abi_encode_tuple_t_int64_t_uint64__to_t_int64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3704:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3715:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3723:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3734:4:8","type":""}],"src":"3620:282:8"},{"body":{"nodeType":"YulBlock","src":"4021:102:8","statements":[{"nodeType":"YulAssignment","src":"4031:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:8"},"nodeType":"YulFunctionCall","src":"4039:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4031:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:8"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4088:6:8"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4104:3:8","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4109:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4100:3:8"},"nodeType":"YulFunctionCall","src":"4100:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"4113:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4096:3:8"},"nodeType":"YulFunctionCall","src":"4096:19:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4084:3:8"},"nodeType":"YulFunctionCall","src":"4084:32:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4066:6:8"},"nodeType":"YulFunctionCall","src":"4066:51:8"},"nodeType":"YulExpressionStatement","src":"4066:51:8"}]},"name":"abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3990:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4001:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4012:4:8","type":""}],"src":"3907:216:8"},{"body":{"nodeType":"YulBlock","src":"4194:200:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4211:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4216:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4204:6:8"},"nodeType":"YulFunctionCall","src":"4204:19:8"},"nodeType":"YulExpressionStatement","src":"4204:19:8"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4249:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4254:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4245:3:8"},"nodeType":"YulFunctionCall","src":"4245:14:8"},{"name":"start","nodeType":"YulIdentifier","src":"4261:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"4268:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4232:12:8"},"nodeType":"YulFunctionCall","src":"4232:43:8"},"nodeType":"YulExpressionStatement","src":"4232:43:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4299:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4304:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:8"},"nodeType":"YulFunctionCall","src":"4295:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"4313:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4291:3:8"},"nodeType":"YulFunctionCall","src":"4291:27:8"},{"kind":"number","nodeType":"YulLiteral","src":"4320:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4284:6:8"},"nodeType":"YulFunctionCall","src":"4284:38:8"},"nodeType":"YulExpressionStatement","src":"4284:38:8"},{"nodeType":"YulAssignment","src":"4331:57:8","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4346:3:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4359:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4367:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4355:3:8"},"nodeType":"YulFunctionCall","src":"4355:15:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4376:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4372:3:8"},"nodeType":"YulFunctionCall","src":"4372:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4351:3:8"},"nodeType":"YulFunctionCall","src":"4351:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:8"},"nodeType":"YulFunctionCall","src":"4342:39:8"},{"kind":"number","nodeType":"YulLiteral","src":"4383:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4338:3:8"},"nodeType":"YulFunctionCall","src":"4338:50:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4331:3:8"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4163:5:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"4170:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4178:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4186:3:8","type":""}],"src":"4128:266:8"},{"body":{"nodeType":"YulBlock","src":"4580:1045:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4590:12:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4600:2:8","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4594:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:32:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4629:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"4640:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:8"},"nodeType":"YulFunctionCall","src":"4625:18:8"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4615:6:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:8"},{"name":"_1","nodeType":"YulIdentifier","src":"4670:2:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4652:6:8"},"nodeType":"YulFunctionCall","src":"4652:21:8"},"nodeType":"YulExpressionStatement","src":"4652:21:8"},{"nodeType":"YulVariableDeclaration","src":"4682:17:8","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4693:6:8"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4686:3:8","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4715:6:8"},{"name":"value1","nodeType":"YulIdentifier","src":"4723:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4708:6:8"},"nodeType":"YulFunctionCall","src":"4708:22:8"},"nodeType":"YulExpressionStatement","src":"4708:22:8"},{"nodeType":"YulAssignment","src":"4739:25:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:8"},"nodeType":"YulFunctionCall","src":"4746:18:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4739:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"4773:53:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4795:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4810:1:8","type":"","value":"5"},{"name":"value1","nodeType":"YulIdentifier","src":"4813:6:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4806:3:8"},"nodeType":"YulFunctionCall","src":"4806:14:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4791:3:8"},"nodeType":"YulFunctionCall","src":"4791:30:8"},{"kind":"number","nodeType":"YulLiteral","src":"4823:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:8"},"nodeType":"YulFunctionCall","src":"4787:39:8"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4777:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4835:20:8","value":{"name":"value0","nodeType":"YulIdentifier","src":"4849:6:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4839:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4864:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4873:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4868:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4932:664:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4953:3:8"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4966:6:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4974:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4962:3:8"},"nodeType":"YulFunctionCall","src":"4962:22:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4990:2:8","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4986:3:8"},"nodeType":"YulFunctionCall","src":"4986:7:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4958:3:8"},"nodeType":"YulFunctionCall","src":"4958:36:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4946:6:8"},"nodeType":"YulFunctionCall","src":"4946:49:8"},"nodeType":"YulExpressionStatement","src":"4946:49:8"},{"nodeType":"YulVariableDeclaration","src":"5008:46:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5047:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5034:12:8"},"nodeType":"YulFunctionCall","src":"5034:20:8"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"5012:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5145:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5154:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5157:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5147:6:8"},"nodeType":"YulFunctionCall","src":"5147:12:8"},"nodeType":"YulExpressionStatement","src":"5147:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"5081:18:8"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5109:12:8"},"nodeType":"YulFunctionCall","src":"5109:14:8"},{"name":"value0","nodeType":"YulIdentifier","src":"5125:6:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5105:3:8"},"nodeType":"YulFunctionCall","src":"5105:27:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5138:2:8","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5134:3:8"},"nodeType":"YulFunctionCall","src":"5134:7:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5101:3:8"},"nodeType":"YulFunctionCall","src":"5101:41:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5077:3:8"},"nodeType":"YulFunctionCall","src":"5077:66:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5070:6:8"},"nodeType":"YulFunctionCall","src":"5070:74:8"},"nodeType":"YulIf","src":"5067:94:8"},{"nodeType":"YulVariableDeclaration","src":"5174:44:8","value":{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"5191:18:8"},{"name":"value0","nodeType":"YulIdentifier","src":"5211:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:8"},"nodeType":"YulFunctionCall","src":"5187:31:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5178:5:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5231:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5258:5:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5245:12:8"},"nodeType":"YulFunctionCall","src":"5245:19:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5235:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5277:29:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5296:5:8"},{"name":"_1","nodeType":"YulIdentifier","src":"5303:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:8"},"nodeType":"YulFunctionCall","src":"5292:14:8"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5281:7:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5353:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5362:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5365:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5355:6:8"},"nodeType":"YulFunctionCall","src":"5355:12:8"},"nodeType":"YulExpressionStatement","src":"5355:12:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5325:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5333:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5322:2:8"},"nodeType":"YulFunctionCall","src":"5322:30:8"},"nodeType":"YulIf","src":"5319:50:8"},{"body":{"nodeType":"YulBlock","src":"5427:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5436:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5439:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5429:6:8"},"nodeType":"YulFunctionCall","src":"5429:12:8"},"nodeType":"YulExpressionStatement","src":"5429:12:8"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5389:7:8"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5402:12:8"},"nodeType":"YulFunctionCall","src":"5402:14:8"},{"name":"length","nodeType":"YulIdentifier","src":"5418:6:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5398:3:8"},"nodeType":"YulFunctionCall","src":"5398:27:8"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"5385:3:8"},"nodeType":"YulFunctionCall","src":"5385:41:8"},"nodeType":"YulIf","src":"5382:61:8"},{"nodeType":"YulAssignment","src":"5456:60:8","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5492:7:8"},{"name":"length","nodeType":"YulIdentifier","src":"5501:6:8"},{"name":"tail_2","nodeType":"YulIdentifier","src":"5509:6:8"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"5466:25:8"},"nodeType":"YulFunctionCall","src":"5466:50:8"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5456:6:8"}]},{"nodeType":"YulAssignment","src":"5529:25:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5543:6:8"},{"name":"_1","nodeType":"YulIdentifier","src":"5551:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5539:3:8"},"nodeType":"YulFunctionCall","src":"5539:15:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5529:6:8"}]},{"nodeType":"YulAssignment","src":"5567:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5578:3:8"},{"name":"_1","nodeType":"YulIdentifier","src":"5583:2:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5574:3:8"},"nodeType":"YulFunctionCall","src":"5574:12:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5567:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4894:1:8"},{"name":"value1","nodeType":"YulIdentifier","src":"4897:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4891:2:8"},"nodeType":"YulFunctionCall","src":"4891:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4905:18:8","statements":[{"nodeType":"YulAssignment","src":"4907:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4916:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"4919:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4912:3:8"},"nodeType":"YulFunctionCall","src":"4912:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4907:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"4887:3:8","statements":[]},"src":"4883:713:8"},{"nodeType":"YulAssignment","src":"5605:14:8","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"5613:6:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5605:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4541:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4552:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4560:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4571:4:8","type":""}],"src":"4399:1226:8"},{"body":{"nodeType":"YulBlock","src":"5711:103:8","statements":[{"body":{"nodeType":"YulBlock","src":"5757:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5766:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5769:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5759:6:8"},"nodeType":"YulFunctionCall","src":"5759:12:8"},"nodeType":"YulExpressionStatement","src":"5759:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5732:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5741:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5728:3:8"},"nodeType":"YulFunctionCall","src":"5728:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5753:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5724:3:8"},"nodeType":"YulFunctionCall","src":"5724:32:8"},"nodeType":"YulIf","src":"5721:52:8"},{"nodeType":"YulAssignment","src":"5782:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5798:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5792:5:8"},"nodeType":"YulFunctionCall","src":"5792:16:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5782:6:8"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5677:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5688:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5700:6:8","type":""}],"src":"5630:184:8"},{"body":{"nodeType":"YulBlock","src":"5851:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5868:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5875:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5880:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5871:3:8"},"nodeType":"YulFunctionCall","src":"5871:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5861:6:8"},"nodeType":"YulFunctionCall","src":"5861:31:8"},"nodeType":"YulExpressionStatement","src":"5861:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5908:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5911:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5901:6:8"},"nodeType":"YulFunctionCall","src":"5901:15:8"},"nodeType":"YulExpressionStatement","src":"5901:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5932:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5935:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5925:6:8"},"nodeType":"YulFunctionCall","src":"5925:15:8"},"nodeType":"YulExpressionStatement","src":"5925:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5819:127:8"},{"body":{"nodeType":"YulBlock","src":"5998:167:8","statements":[{"nodeType":"YulAssignment","src":"6008:47:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6031:1:8","type":"","value":"7"},{"name":"x","nodeType":"YulIdentifier","src":"6034:1:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6020:10:8"},"nodeType":"YulFunctionCall","src":"6020:16:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6049:1:8","type":"","value":"7"},{"name":"y","nodeType":"YulIdentifier","src":"6052:1:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6038:10:8"},"nodeType":"YulFunctionCall","src":"6038:16:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6016:3:8"},"nodeType":"YulFunctionCall","src":"6016:39:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6008:4:8"}]},{"body":{"nodeType":"YulBlock","src":"6137:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6139:16:8"},"nodeType":"YulFunctionCall","src":"6139:18:8"},"nodeType":"YulExpressionStatement","src":"6139:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6074:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6084:18:8","type":"","value":"0x7fffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6080:3:8"},"nodeType":"YulFunctionCall","src":"6080:23:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6070:3:8"},"nodeType":"YulFunctionCall","src":"6070:34:8"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6110:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"6116:18:8","type":"","value":"0x7fffffffffffffff"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"6106:3:8"},"nodeType":"YulFunctionCall","src":"6106:29:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6067:2:8"},"nodeType":"YulFunctionCall","src":"6067:69:8"},"nodeType":"YulIf","src":"6064:95:8"}]},"name":"checked_sub_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5980:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"5983:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5989:4:8","type":""}],"src":"5951:214:8"},{"body":{"nodeType":"YulBlock","src":"6221:186:8","statements":[{"nodeType":"YulAssignment","src":"6231:20:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6246:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6249:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6242:3:8"},"nodeType":"YulFunctionCall","src":"6242:9:8"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6231:7:8"}]},{"body":{"nodeType":"YulBlock","src":"6298:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6300:16:8"},"nodeType":"YulFunctionCall","src":"6300:18:8"},"nodeType":"YulExpressionStatement","src":"6300:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6271:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"6274:1:8","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6267:3:8"},"nodeType":"YulFunctionCall","src":"6267:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6281:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6288:3:8","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"6293:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6284:3:8"},"nodeType":"YulFunctionCall","src":"6284:11:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6278:2:8"},"nodeType":"YulFunctionCall","src":"6278:18:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6263:3:8"},"nodeType":"YulFunctionCall","src":"6263:34:8"},"nodeType":"YulIf","src":"6260:60:8"},{"body":{"nodeType":"YulBlock","src":"6379:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6381:16:8"},"nodeType":"YulFunctionCall","src":"6381:18:8"},"nodeType":"YulExpressionStatement","src":"6381:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6349:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6342:6:8"},"nodeType":"YulFunctionCall","src":"6342:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6356:1:8"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6364:7:8"},{"name":"x","nodeType":"YulIdentifier","src":"6373:1:8"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"6359:4:8"},"nodeType":"YulFunctionCall","src":"6359:16:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6353:2:8"},"nodeType":"YulFunctionCall","src":"6353:23:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6339:2:8"},"nodeType":"YulFunctionCall","src":"6339:38:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6332:6:8"},"nodeType":"YulFunctionCall","src":"6332:46:8"},"nodeType":"YulIf","src":"6329:72:8"}]},"name":"checked_mul_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6200:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6203:1:8","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6209:7:8","type":""}],"src":"6170:237:8"},{"body":{"nodeType":"YulBlock","src":"6444:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6461:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6468:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6473:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6464:3:8"},"nodeType":"YulFunctionCall","src":"6464:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6454:6:8"},"nodeType":"YulFunctionCall","src":"6454:31:8"},"nodeType":"YulExpressionStatement","src":"6454:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6501:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6504:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6494:6:8"},"nodeType":"YulFunctionCall","src":"6494:15:8"},"nodeType":"YulExpressionStatement","src":"6494:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6525:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6528:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6518:6:8"},"nodeType":"YulFunctionCall","src":"6518:15:8"},"nodeType":"YulExpressionStatement","src":"6518:15:8"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6412:127:8"},{"body":{"nodeType":"YulBlock","src":"6589:148:8","statements":[{"body":{"nodeType":"YulBlock","src":"6612:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6614:16:8"},"nodeType":"YulFunctionCall","src":"6614:18:8"},"nodeType":"YulExpressionStatement","src":"6614:18:8"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6609:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6602:6:8"},"nodeType":"YulFunctionCall","src":"6602:9:8"},"nodeType":"YulIf","src":"6599:35:8"},{"body":{"nodeType":"YulBlock","src":"6685:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6687:16:8"},"nodeType":"YulFunctionCall","src":"6687:18:8"},"nodeType":"YulExpressionStatement","src":"6687:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6653:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6660:3:8","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"6665:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6656:3:8"},"nodeType":"YulFunctionCall","src":"6656:11:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6650:2:8"},"nodeType":"YulFunctionCall","src":"6650:18:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6673:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6680:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6676:3:8"},"nodeType":"YulFunctionCall","src":"6676:6:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6670:2:8"},"nodeType":"YulFunctionCall","src":"6670:13:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6646:3:8"},"nodeType":"YulFunctionCall","src":"6646:38:8"},"nodeType":"YulIf","src":"6643:64:8"},{"nodeType":"YulAssignment","src":"6716:15:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6726:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6729:1:8"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"6721:4:8"},"nodeType":"YulFunctionCall","src":"6721:10:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6716:1:8"}]}]},"name":"checked_div_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6574:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6577:1:8","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6583:1:8","type":""}],"src":"6544:193:8"},{"body":{"nodeType":"YulBlock","src":"6794:116:8","statements":[{"nodeType":"YulAssignment","src":"6804:20:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6819:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6822:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6815:3:8"},"nodeType":"YulFunctionCall","src":"6815:9:8"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6804:7:8"}]},{"body":{"nodeType":"YulBlock","src":"6882:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6884:16:8"},"nodeType":"YulFunctionCall","src":"6884:18:8"},"nodeType":"YulExpressionStatement","src":"6884:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6853:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6846:6:8"},"nodeType":"YulFunctionCall","src":"6846:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6860:1:8"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6867:7:8"},{"name":"x","nodeType":"YulIdentifier","src":"6876:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6863:3:8"},"nodeType":"YulFunctionCall","src":"6863:15:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6857:2:8"},"nodeType":"YulFunctionCall","src":"6857:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6843:2:8"},"nodeType":"YulFunctionCall","src":"6843:37:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6836:6:8"},"nodeType":"YulFunctionCall","src":"6836:45:8"},"nodeType":"YulIf","src":"6833:71:8"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6773:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6776:1:8","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6782:7:8","type":""}],"src":"6742:168:8"},{"body":{"nodeType":"YulBlock","src":"6961:74:8","statements":[{"body":{"nodeType":"YulBlock","src":"6984:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6986:16:8"},"nodeType":"YulFunctionCall","src":"6986:18:8"},"nodeType":"YulExpressionStatement","src":"6986:18:8"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6981:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6974:6:8"},"nodeType":"YulFunctionCall","src":"6974:9:8"},"nodeType":"YulIf","src":"6971:35:8"},{"nodeType":"YulAssignment","src":"7015:14:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7024:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"7027:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7020:3:8"},"nodeType":"YulFunctionCall","src":"7020:9:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7015:1:8"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6946:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6949:1:8","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6955:1:8","type":""}],"src":"6915:120:8"},{"body":{"nodeType":"YulBlock","src":"7088:77:8","statements":[{"nodeType":"YulAssignment","src":"7098:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7109:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"7112:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7105:3:8"},"nodeType":"YulFunctionCall","src":"7105:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7098:3:8"}]},{"body":{"nodeType":"YulBlock","src":"7137:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7139:16:8"},"nodeType":"YulFunctionCall","src":"7139:18:8"},"nodeType":"YulExpressionStatement","src":"7139:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7129:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"7132:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7126:2:8"},"nodeType":"YulFunctionCall","src":"7126:10:8"},"nodeType":"YulIf","src":"7123:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7071:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"7074:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7080:3:8","type":""}],"src":"7040:125:8"},{"body":{"nodeType":"YulBlock","src":"7213:93:8","statements":[{"body":{"nodeType":"YulBlock","src":"7249:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7251:16:8"},"nodeType":"YulFunctionCall","src":"7251:18:8"},"nodeType":"YulExpressionStatement","src":"7251:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7229:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7240:3:8","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"7245:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7236:3:8"},"nodeType":"YulFunctionCall","src":"7236:11:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7226:2:8"},"nodeType":"YulFunctionCall","src":"7226:22:8"},"nodeType":"YulIf","src":"7223:48:8"},{"nodeType":"YulAssignment","src":"7280:20:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7291:1:8","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"7294:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7287:3:8"},"nodeType":"YulFunctionCall","src":"7287:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7280:3:8"}]}]},"name":"negate_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7195:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7205:3:8","type":""}],"src":"7170:136:8"},{"body":{"nodeType":"YulBlock","src":"7360:79:8","statements":[{"nodeType":"YulAssignment","src":"7370:17:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7382:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"7385:1:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7378:3:8"},"nodeType":"YulFunctionCall","src":"7378:9:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7370:4:8"}]},{"body":{"nodeType":"YulBlock","src":"7411:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7413:16:8"},"nodeType":"YulFunctionCall","src":"7413:18:8"},"nodeType":"YulExpressionStatement","src":"7413:18:8"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7402:4:8"},{"name":"x","nodeType":"YulIdentifier","src":"7408:1:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7399:2:8"},"nodeType":"YulFunctionCall","src":"7399:11:8"},"nodeType":"YulIf","src":"7396:37:8"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7342:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"7345:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7351:4:8","type":""}],"src":"7311:128:8"},{"body":{"nodeType":"YulBlock","src":"7635:14:8","statements":[{"nodeType":"YulAssignment","src":"7637:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"7644:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7637:3:8"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7619:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7627:3:8","type":""}],"src":"7444:205:8"},{"body":{"nodeType":"YulBlock","src":"7805:177:8","statements":[{"nodeType":"YulAssignment","src":"7815:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7827:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7838:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:8"},"nodeType":"YulFunctionCall","src":"7823:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7815:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7857:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"7868:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7850:6:8"},"nodeType":"YulFunctionCall","src":"7850:25:8"},"nodeType":"YulExpressionStatement","src":"7850:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7895:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7906:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7891:3:8"},"nodeType":"YulFunctionCall","src":"7891:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7922:1:8","type":"","value":"7"},{"name":"value1","nodeType":"YulIdentifier","src":"7925:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7911:10:8"},"nodeType":"YulFunctionCall","src":"7911:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7884:6:8"},"nodeType":"YulFunctionCall","src":"7884:49:8"},"nodeType":"YulExpressionStatement","src":"7884:49:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7953:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7964:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7949:3:8"},"nodeType":"YulFunctionCall","src":"7949:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"7969:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7942:6:8"},"nodeType":"YulFunctionCall","src":"7942:34:8"},"nodeType":"YulExpressionStatement","src":"7942:34:8"}]},"name":"abi_encode_tuple_t_int256_t_int64_t_uint256__to_t_int256_t_int64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7758:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7769:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7777:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7785:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7796:4:8","type":""}],"src":"7654:328:8"},{"body":{"nodeType":"YulBlock","src":"8161:170:8","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8178:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8189:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8171:6:8"},"nodeType":"YulFunctionCall","src":"8171:21:8"},"nodeType":"YulExpressionStatement","src":"8171:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8212:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8223:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:8"},"nodeType":"YulFunctionCall","src":"8208:18:8"},{"kind":"number","nodeType":"YulLiteral","src":"8228:2:8","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8201:6:8"},"nodeType":"YulFunctionCall","src":"8201:30:8"},"nodeType":"YulExpressionStatement","src":"8201:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8251:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8262:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8247:3:8"},"nodeType":"YulFunctionCall","src":"8247:18:8"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"8267:22:8","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8240:6:8"},"nodeType":"YulFunctionCall","src":"8240:50:8"},"nodeType":"YulExpressionStatement","src":"8240:50:8"},{"nodeType":"YulAssignment","src":"8299:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8311:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8322:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8307:3:8"},"nodeType":"YulFunctionCall","src":"8307:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8299:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8138:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8152:4:8","type":""}],"src":"7987:344:8"},{"body":{"nodeType":"YulBlock","src":"8489:177:8","statements":[{"nodeType":"YulAssignment","src":"8499:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8511:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8522:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:8"},"nodeType":"YulFunctionCall","src":"8507:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8499:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8541:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"8552:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8534:6:8"},"nodeType":"YulFunctionCall","src":"8534:25:8"},"nodeType":"YulExpressionStatement","src":"8534:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8579:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8590:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8575:3:8"},"nodeType":"YulFunctionCall","src":"8575:18:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8606:1:8","type":"","value":"7"},{"name":"value1","nodeType":"YulIdentifier","src":"8609:6:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"8595:10:8"},"nodeType":"YulFunctionCall","src":"8595:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8568:6:8"},"nodeType":"YulFunctionCall","src":"8568:49:8"},"nodeType":"YulExpressionStatement","src":"8568:49:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8637:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8648:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8633:3:8"},"nodeType":"YulFunctionCall","src":"8633:18:8"},{"name":"value2","nodeType":"YulIdentifier","src":"8653:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8626:6:8"},"nodeType":"YulFunctionCall","src":"8626:34:8"},"nodeType":"YulExpressionStatement","src":"8626:34:8"}]},"name":"abi_encode_tuple_t_uint256_t_int64_t_uint256__to_t_uint256_t_int64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8442:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8453:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8461:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8469:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8480:4:8","type":""}],"src":"8336:330:8"},{"body":{"nodeType":"YulBlock","src":"8772:76:8","statements":[{"nodeType":"YulAssignment","src":"8782:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8794:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8805:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8790:3:8"},"nodeType":"YulFunctionCall","src":"8790:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8782:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8824:9:8"},{"name":"value0","nodeType":"YulIdentifier","src":"8835:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8817:6:8"},"nodeType":"YulFunctionCall","src":"8817:25:8"},"nodeType":"YulExpressionStatement","src":"8817:25:8"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8741:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8752:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8763:4:8","type":""}],"src":"8671:177:8"},{"body":{"nodeType":"YulBlock","src":"8912:116:8","statements":[{"nodeType":"YulAssignment","src":"8922:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8937:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8931:5:8"},"nodeType":"YulFunctionCall","src":"8931:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8922:5:8"}]},{"body":{"nodeType":"YulBlock","src":"9006:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9015:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9018:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9008:6:8"},"nodeType":"YulFunctionCall","src":"9008:12:8"},"nodeType":"YulExpressionStatement","src":"9008:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8966:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8977:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"8984:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8973:3:8"},"nodeType":"YulFunctionCall","src":"8973:30:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8963:2:8"},"nodeType":"YulFunctionCall","src":"8963:41:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8956:6:8"},"nodeType":"YulFunctionCall","src":"8956:49:8"},"nodeType":"YulIf","src":"8953:69:8"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8891:6:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8902:5:8","type":""}],"src":"8853:175:8"},{"body":{"nodeType":"YulBlock","src":"9091:106:8","statements":[{"nodeType":"YulAssignment","src":"9101:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9116:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9110:5:8"},"nodeType":"YulFunctionCall","src":"9110:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9101:5:8"}]},{"body":{"nodeType":"YulBlock","src":"9175:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9184:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9187:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9177:6:8"},"nodeType":"YulFunctionCall","src":"9177:12:8"},"nodeType":"YulExpressionStatement","src":"9177:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9145:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9163:1:8","type":"","value":"3"},{"name":"value","nodeType":"YulIdentifier","src":"9166:5:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"9152:10:8"},"nodeType":"YulFunctionCall","src":"9152:20:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9142:2:8"},"nodeType":"YulFunctionCall","src":"9142:31:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9135:6:8"},"nodeType":"YulFunctionCall","src":"9135:39:8"},"nodeType":"YulIf","src":"9132:59:8"}]},"name":"abi_decode_int32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9070:6:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9081:5:8","type":""}],"src":"9033:164:8"},{"body":{"nodeType":"YulBlock","src":"9305:752:8","statements":[{"body":{"nodeType":"YulBlock","src":"9352:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9361:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9364:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9354:6:8"},"nodeType":"YulFunctionCall","src":"9354:12:8"},"nodeType":"YulExpressionStatement","src":"9354:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9326:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9335:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9322:3:8"},"nodeType":"YulFunctionCall","src":"9322:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"9347:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9318:3:8"},"nodeType":"YulFunctionCall","src":"9318:33:8"},"nodeType":"YulIf","src":"9315:53:8"},{"nodeType":"YulVariableDeclaration","src":"9377:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9397:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9391:5:8"},"nodeType":"YulFunctionCall","src":"9391:9:8"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9381:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9409:34:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9431:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9439:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9427:3:8"},"nodeType":"YulFunctionCall","src":"9427:16:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9413:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"9526:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9547:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9554:3:8","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9559:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9550:3:8"},"nodeType":"YulFunctionCall","src":"9550:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9540:6:8"},"nodeType":"YulFunctionCall","src":"9540:31:8"},"nodeType":"YulExpressionStatement","src":"9540:31:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9591:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9594:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9584:6:8"},"nodeType":"YulFunctionCall","src":"9584:15:8"},"nodeType":"YulExpressionStatement","src":"9584:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9619:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9622:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9612:6:8"},"nodeType":"YulFunctionCall","src":"9612:15:8"},"nodeType":"YulExpressionStatement","src":"9612:15:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9461:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"9473:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9458:2:8"},"nodeType":"YulFunctionCall","src":"9458:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9497:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9509:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9494:2:8"},"nodeType":"YulFunctionCall","src":"9494:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9455:2:8"},"nodeType":"YulFunctionCall","src":"9455:62:8"},"nodeType":"YulIf","src":"9452:185:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9653:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9657:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9646:6:8"},"nodeType":"YulFunctionCall","src":"9646:22:8"},"nodeType":"YulExpressionStatement","src":"9646:22:8"},{"nodeType":"YulVariableDeclaration","src":"9677:29:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9696:9:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9690:5:8"},"nodeType":"YulFunctionCall","src":"9690:16:8"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9681:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"9758:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9767:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9770:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9760:6:8"},"nodeType":"YulFunctionCall","src":"9760:12:8"},"nodeType":"YulExpressionStatement","src":"9760:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9728:5:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9746:1:8","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"9749:5:8"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"9735:10:8"},"nodeType":"YulFunctionCall","src":"9735:20:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9725:2:8"},"nodeType":"YulFunctionCall","src":"9725:31:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9718:6:8"},"nodeType":"YulFunctionCall","src":"9718:39:8"},"nodeType":"YulIf","src":"9715:59:8"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9790:6:8"},{"name":"value","nodeType":"YulIdentifier","src":"9798:5:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9783:6:8"},"nodeType":"YulFunctionCall","src":"9783:21:8"},"nodeType":"YulExpressionStatement","src":"9783:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9824:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9832:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9820:3:8"},"nodeType":"YulFunctionCall","src":"9820:15:8"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9870:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9881:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9866:3:8"},"nodeType":"YulFunctionCall","src":"9866:18:8"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"9837:28:8"},"nodeType":"YulFunctionCall","src":"9837:48:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9813:6:8"},"nodeType":"YulFunctionCall","src":"9813:73:8"},"nodeType":"YulExpressionStatement","src":"9813:73:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9906:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9914:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9902:3:8"},"nodeType":"YulFunctionCall","src":"9902:15:8"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9951:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9962:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9947:3:8"},"nodeType":"YulFunctionCall","src":"9947:18:8"}],"functionName":{"name":"abi_decode_int32_fromMemory","nodeType":"YulIdentifier","src":"9919:27:8"},"nodeType":"YulFunctionCall","src":"9919:47:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9895:6:8"},"nodeType":"YulFunctionCall","src":"9895:72:8"},"nodeType":"YulExpressionStatement","src":"9895:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9987:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9995:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9983:3:8"},"nodeType":"YulFunctionCall","src":"9983:15:8"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10010:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10021:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:8"},"nodeType":"YulFunctionCall","src":"10006:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10000:5:8"},"nodeType":"YulFunctionCall","src":"10000:25:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9976:6:8"},"nodeType":"YulFunctionCall","src":"9976:50:8"},"nodeType":"YulExpressionStatement","src":"9976:50:8"},{"nodeType":"YulAssignment","src":"10035:16:8","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"10045:6:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10035:6:8"}]}]},"name":"abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9271:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9282:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9294:6:8","type":""}],"src":"9202:855:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Function not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_ShortPosition_$1313_memory_ptr__to_t_struct$_ShortPosition_$1313_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), signextend(7, mload(add(value0, 0x20))))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), iszero(iszero(mload(add(value0, 0x60)))))\n    }\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_int256_t_int64_t_int256__to_t_int256_t_int64_t_int256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_int64_t_uint256_t_bool__to_t_uint256_t_int64_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_int64_t_uint64__to_t_int64_t_uint64__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(7, value0))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IPyth_$409__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, value1)), 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let rel_offset_of_tail := calldataload(srcPtr)\n            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value0), not(30)))) { revert(0, 0) }\n            let value := add(rel_offset_of_tail, value0)\n            let length := calldataload(value)\n            let value_1 := add(value, _1)\n            if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n            if sgt(value_1, sub(calldatasize(), length)) { revert(0, 0) }\n            tail_2 := abi_encode_bytes_calldata(value_1, length, tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_int64(x, y) -> diff\n    {\n        diff := sub(signextend(7, x), signextend(7, y))\n        if or(slt(diff, not(0x7fffffffffffffff)), sgt(diff, 0x7fffffffffffffff)) { panic_error_0x11() }\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_int256_t_int64_t_uint256__to_t_int256_t_int64_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_int64_t_uint256__to_t_uint256_t_int64_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Price_$450_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_int32_fromMemory(add(headStart, 64)))\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        value0 := memPtr\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1304":[{"length":32,"start":772},{"length":32,"start":1168},{"length":32,"start":1288},{"length":32,"start":1466},{"length":32,"start":2782},{"length":32,"start":2959},{"length":32,"start":3327},{"length":32,"start":3516}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86E1CE5E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD47EED45 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD47EED45 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x47E JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x86E1CE5E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x93B57F99 EQ PUSH2 0x3AC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x55F57510 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x7CC1F867 EQ PUSH2 0x2F4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x16C19739 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2EB99760 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x36198EB9 EQ PUSH2 0x212 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x7 SIGNEXTEND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 PUSH1 0x7 SIGNEXTEND SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x7 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0xA4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH32 0x0 PUSH32 0xFF61491A931112DDF1BD8147CD1B641375F79F5825126D665480874634FD0ACE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x7 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0xED9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF2FCAF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0x53F SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7D7F926B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEF9E5E28 SWAP1 DUP4 SWAP1 PUSH2 0x5F3 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x62F PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x1 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x649 SWAP1 DUP4 SWAP1 PUSH1 0x7 SIGNEXTEND PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP3 POP PUSH1 0x0 SWAP2 SIGNEXTEND PUSH2 0x665 DUP4 PUSH2 0x2710 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x6E0 JUMPI DUP7 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x6B2 SWAP1 PUSH1 0xC8 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6CA JUMPI DUP1 SWAP2 POP JUMPDEST DUP9 SLOAD PUSH2 0x6D7 SWAP1 DUP4 SWAP1 PUSH2 0x1202 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP4 PUSH2 0x1215 JUMP JUMPDEST DUP9 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x6FF JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x70F JUMP JUMPDEST DUP8 SLOAD PUSH2 0x70C SWAP1 DUP3 SWAP1 PUSH2 0x1231 JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x3 DUP8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x76A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP6 CALLVALUE GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 CALLER PUSH2 0x7A3 DUP9 CALLVALUE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x8F36BF8AD209B778C198AC14AC833B260F63CC14EF9DD9A6DFEDEF1106491592 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP POP POP POP POP POP PUSH2 0x85E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF2FCAF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP4 POP PUSH1 0x0 SWAP1 PUSH2 0x8C5 SWAP1 DUP6 SWAP1 PUSH1 0x7 SIGNEXTEND PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP3 POP SWAP1 SIGNEXTEND PUSH2 0x8DF DUP3 PUSH2 0x2710 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP5 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x929 JUMPI DUP2 PUSH2 0x92B JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP SELFBALANCE DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xA54 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x0 PUSH2 0xF30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA68 PUSH2 0xED9 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A23D825 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDD1BC8B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0xB15 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE GT PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7D7F926B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEF9E5E28 SWAP1 DUP4 SWAP1 PUSH2 0xBC8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xC04 PUSH2 0xD80 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xC13 DUP4 CALLVALUE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x7 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP5 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP1 DUP9 ADD DUP3 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP11 MSTORE SWAP1 DUP13 SWAP1 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP7 MLOAD SWAP4 DUP11 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE DUP6 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH32 0x91931FB6FDB7B87E2E5137745805E8584A7047067DBF59A30BCD96DDAF3F9875 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x85E PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD47EED45 SWAP1 PUSH2 0xD36 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0xFF61491A931112DDF1BD8147CD1B641375F79F5825126D665480874634FD0ACE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x96834AD3 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x7 SIGNEXTEND SGT PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E0942D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xEA3 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0xED6 DUP2 PUSH2 0xF30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x40 PUSH1 0x5 DUP6 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP1 DUP5 ADD DUP7 DUP5 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x10F8 JUMPI DUP7 DUP5 SUB PUSH1 0x3F NOT ADD DUP4 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD DUP6 DUP2 ADD SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E4 DUP7 DUP3 DUP5 PUSH2 0x1040 JUMP JUMPDEST SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1088 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH8 0x7FFFFFFFFFFFFFFF NOT DUP2 SLT PUSH8 0x7FFFFFFFFFFFFFFF DUP3 SGT OR ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x117F JUMPI PUSH2 0x117F PUSH2 0x111E JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B8 JUMPI PUSH2 0x11B8 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D2 PUSH2 0x111E JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11FD JUMPI PUSH2 0x11FD PUSH2 0x1193 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x122A JUMPI PUSH2 0x122A PUSH2 0x111E JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0x111E JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x12D9 PUSH1 0x20 DUP5 ADD PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12EA PUSH1 0x40 DUP5 ADD PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xD8 0x24 SWAP10 0xB6 0xA9 DUP9 CALL 0xD6 NUMBER PUSH5 0x7B94B20BA2 MULMOD RETURNDATASIZE SWAP8 SWAP11 0xAC 0xDF PUSH13 0x68A671EE0692AC952564736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"469:9087:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9519:28;;-1:-1:-1;;;9519:28:7;;216:2:8;9519:28:7;;;198:21:8;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:8;;;267:48;332:18;;9519:28:7;;;;;;;;7450:128;;;;;;;;;;-1:-1:-1;7450:128:7;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7556:15:7;;;;;:9;:15;;;;;;;;;7549:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7450:128;;;;;;;879:13:8;;861:32;;963:4;951:17;;;945:24;942:1;931:39;909:20;;;902:69;1027:4;1015:17;;;1009:24;987:20;;;980:54;1104:4;1092:17;;;1086:24;1079:32;1072:40;1050:20;;;1043:70;;;;848:3;833:19;;652:467;7450:128:7;;;;;;;;4029:2336;;;;;;:::i;:::-;;:::i;:::-;;6638:651;;;;;;;;;;-1:-1:-1;6638:651:7;;;;;:::i;:::-;;:::i;:::-;;;;1949:25:8;;;2021:1;2010:21;;;;2005:2;1990:18;;1983:49;2048:18;;;2041:34;1937:2;1922:18;6638:651:7;1755:326:8;8819:429:7;;;;;;;;;;-1:-1:-1;8819:429:7;;;;;:::i;:::-;;:::i;862:50::-;;;;;;;;;;-1:-1:-1;862:50:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:25:8;;;2564:1;2553:21;;;;2548:2;2533:18;;2526:49;2591:18;;;2584:34;2661:14;2654:22;2649:2;2634:18;;2627:50;2479:3;2464:19;862:50:7;2271:412:8;2293:101:0;;;;;;;;;;;;;:::i;8421:267:7:-;;;;;;;;;;-1:-1:-1;8593:21:7;8636:4;1146:66;8421:267;;;2890:25:8;;;-1:-1:-1;;;;;2951:32:8;;;2946:2;2931:18;;2924:60;3000:18;;;2993:34;2878:2;2863:18;8421:267:7;2688:345:8;2807:1092:7;;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;3202:32:8;;;3184:51;;3172:2;3157:18;1638:85:0;3038:203:8;7752:128:7;;;;;;;;;;-1:-1:-1;7752:128:7;;;;;:::i;:::-;-1:-1:-1;;;;;7851:15:7;7816:16;7851:15;;;:9;:15;;;;;:22;;;;;;7752:128;;;;3411:14:8;;3404:22;3386:41;;3374:2;3359:18;7752:128:7;3246:187:8;8056:147:7;;;;;;;;;;-1:-1:-1;8056:147:7;;;;;:::i;:::-;;:::i;:::-;;;3584:25:8;;;3572:2;3557:18;8056:147:7;3438:177:8;2248:439:7;;;;;;;;;;;;;:::i;:::-;;;;3817:1:8;3806:21;;;;3788:40;;3876:18;3864:31;;;3859:2;3844:18;;3837:59;3761:18;2248:439:7;3620:282:8;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;532:27:7:-;;;;;;;;;;;;;;;4029:2336;2500:21:2;:19;:21::i;:::-;4166:10:7::1;4123:30;4156:21:::0;;;:9:::1;:21;::::0;;;;4192:15:::1;::::0;::::1;::::0;::::1;;4187:47;;4216:18;;-1:-1:-1::0;;;4216:18:7::1;;;;;;;;;;;4187:47;4302:34;::::0;-1:-1:-1;;;4302:34:7;;4285:14:::1;::::0;-1:-1:-1;;;;;4302:4:7::1;:17;::::0;::::1;::::0;:34:::1;::::0;4320:15;;;;4302:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4285:51;;4362:9;4350;:21;4346:57;;;4380:23;;-1:-1:-1::0;;;4380:23:7::1;;;;;;;;;;;4346:57;4457:56;::::0;-1:-1:-1;;;4457:56:7;;-1:-1:-1;;;;;4457:4:7::1;:21;::::0;::::1;::::0;4486:9;;4457:56:::1;::::0;4497:15;;;;4457:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4582:18;4606:17;:15;:17::i;:::-;-1:-1:-1::0;4736:19:7::1;::::0;::::1;::::0;4581:42;;-1:-1:-1;4717:16:7::1;::::0;4736:34:::1;::::0;4581:42;;4736:19:::1;;:34;:::i;:::-;4825:19;::::0;::::1;::::0;4717:53:::1;::::0;;::::1;::::0;-1:-1:-1;4780:20:7::1;::::0;4825:19:::1;4804:17;4717:53:::0;4816:5:::1;4804:17;:::i;:::-;4803:41;;;;:::i;:::-;4780:64;;4870:10;4937:5;4920:13;4891:8;:25;;;4884:49;;;;:::i;:::-;4883:59;;;;:::i;:::-;4870:72;;5011:19;5054:1:::0;5048:3:::1;:7;5044:664;;;5187:25:::0;;5148:3;;5123:14:::1;::::0;5240:3:::1;::::0;5187:49:::1;::::0;1356:3:::1;::::0;5187:49:::1;:::i;:::-;5186:57;;;;:::i;:::-;5166:77;;5270:9;5261:6;:18;5257:75;;;5308:9;5299:18;;5257:75;5359:25:::0;;:34:::1;::::0;5387:6;;5359:34:::1;:::i;:::-;5345:48;;5057:347;;5044:664;;;5470:12;5493:4;5494:3:::0;5493:4:::1;:::i;:::-;5524:25:::0;;5470:28;;-1:-1:-1;5516:33:7;::::1;5512:186;;5583:1;5569:15;;5512:186;;;5651:25:::0;;:32:::1;::::0;5679:4;;5651:32:::1;:::i;:::-;5637:46;;5512:186;5410:298;5044:664;5761:15;::::0;::::1;:23:::0;;-1:-1:-1;;5761:23:7::1;::::0;;5869:15;;5865:164:::1;;5919:48;::::0;5901:12:::1;::::0;5927:10:::1;::::0;5951:11;;5901:12;5919:48;5901:12;5919:48;5951:11;5927:10;5919:48:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:67;;;5986:7;5981:37;;6002:16;;-1:-1:-1::0;;;6002:16:7::1;;;;;;;;;;;5981:37;5886:143;5865:164;6112:9;6100;:21;6096:180;;;6138:12;6164:10;6188:21;6200:9:::0;6188::::1;:21;:::i;:::-;6156:58;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6137:77;;;6233:7;6228:37;;6249:16;;-1:-1:-1::0;;;6249:16:7::1;;;;;;;;;;;6228:37;6123:153;6096:180;6299:59;::::0;;1949:25:8;;;2021:1;2010:21;;;2005:2;1990:18;;1983:49;6342:15:7::1;2048:18:8::0;;;2041:34;6299:59:7;;6311:10:::1;::::0;6299:59:::1;::::0;;;;;1937:2:8;6299:59:7;;::::1;4113:2252;;;;;;;2542:20:2::0;1857:1;3068:7;:21;2888:208;2542:20;4029:2336:7;;:::o;6638:651::-;-1:-1:-1;;;;;6789:15:7;;6692:10;6789:15;;;:9;:15;;;;;6819;;;;6692:10;;;;6819:15;;6814:47;;6843:18;;-1:-1:-1;;;6843:18:7;;;;;;;;;;;6814:47;6950:17;:15;:17::i;:::-;-1:-1:-1;7030:19:7;;;;6931:36;;-1:-1:-1;7011:16:7;;7030:34;;6931:36;;7030:19;;:34;:::i;:::-;7112:19;;;;7011:53;;;;;-1:-1:-1;7112:19:7;;7091:17;7011:53;7103:5;7091:17;:::i;:::-;7090:41;;;;:::i;:::-;7074:57;;7217:5;7200:13;7171:8;:25;;;7164:49;;;;:::i;:::-;7163:59;;;;:::i;:::-;7157:65;;7241:41;;6638:651;;;;;:::o;8819:429::-;1531:13:0;:11;:13::i;:::-;8891:22:7::1;8916:11:::0;;:44:::1;;8954:6;8916:44;;;8930:21;8916:44;8891:69;;8996:21;8978:14;:39;;8970:72;;;::::0;-1:-1:-1;;;8970:72:7;;8189:2:8;8970:72:7::1;::::0;::::1;8171:21:8::0;8228:2;8208:18;;;8201:30;-1:-1:-1;;;8247:18:8;;;8240:50;8307:18;;8970:72:7::1;7987:344:8::0;8970:72:7::1;9062:12;9088:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;9088:7:7::1;-1:-1:-1::0;;;;;9080:21:7::1;9109:14;9080:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9061:67;;;9143:7;9138:37;;9159:16;;-1:-1:-1::0;;;9159:16:7::1;;;;;;;;;;;9138:37;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;-1:-1:-1;;;;;9199:42:7::1;;9226:14;9199:42;;;;3584:25:8::0;;3572:2;3557:18;;3438:177;9199:42:7::1;;;;;;;;8881:367;;8819:429:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2807:1092:7:-;2500:21:2;:19;:21::i;:::-;1418:11:7::1;2904:9;:26;2900:63;;;2939:24;;-1:-1:-1::0;;;2939:24:7::1;;;;;;;;;;;2900:63;2987:10;2977:21;::::0;;;:9:::1;:21;::::0;;;;:28:::1;;::::0;::::1;;2973:64;;;3014:23;;-1:-1:-1::0;;;3014:23:7::1;;;;;;;;;;;2973:64;3105:34;::::0;-1:-1:-1;;;3105:34:7;;3088:14:::1;::::0;-1:-1:-1;;;;;3105:4:7::1;:17;::::0;::::1;::::0;:34:::1;::::0;3123:15;;;;3105:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3088:51;;3166:9;3153;:22;3149:58;;3184:23;;-1:-1:-1::0;;;3184:23:7::1;;;;;;;;;;;3149:58;3261:56;::::0;-1:-1:-1;;;3261:56:7;;-1:-1:-1;;;;;3261:4:7::1;:21;::::0;::::1;::::0;3290:9;;3261:56:::1;::::0;3301:15;;;;3261:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3386:18;3410:17;:15;:17::i;:::-;-1:-1:-1::0;3385:42:7;-1:-1:-1;3502:24:7::1;3529:21;3541:9:::0;3529::::1;:21;:::i;:::-;3619:177;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;3744:15:::1;3619:177:::0;;;;;;3781:4:::1;3619:177:::0;;;;;;;3605:10:::1;-1:-1:-1::0;3595:21:7;;;:9:::1;:21:::0;;;;;;;:201;;;;;;;;::::1;::::0;;-1:-1:-1;;3595:201:7::1;;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;3595:201:7::1;::::0;::::1;;::::0;;;::::1;::::0;;;3820:72;;1949:25:8;;;1990:18;;;1983:49;;;;2048:18;;;2041:34;;;;3619:177:7;;-1:-1:-1;3605:10:7;3820:72:::1;::::0;1922:18:8;3820:72:7::1;;;;;;;2890:1009;;;2542:20:2::0;1857:1;3068:7;:21;2888:208;8056:147:7;8162:34;;-1:-1:-1;;;8162:34:7;;8135:8;;-1:-1:-1;;;;;8162:4:7;:17;;;;:34;;8180:15;;;;8162:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8155:41;;8056:147;;;;;:::o;2248:439::-;2374:37;;-1:-1:-1;;;2374:37:7;;1146:66;2374:37;;;3584:25:8;2296:11:7;;;;;;2374:4;-1:-1:-1;;;;;2374:19:7;;;;3557:18:8;;2374:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2337:74;;2453:1;2434:9;:15;;;:20;;;2430:47;;2463:14;;-1:-1:-1;;;2463:14:7;;;;;;;;;;;2430:47;1293:3;2509:9;:21;;;2491:15;:39;;;;:::i;:::-;:67;2487:120;;;2581:15;;-1:-1:-1;;;2581:15:7;;;;;;;;;;;2487:120;2633:15;;2657:21;;;;;2633:15;;2657:21;;-1:-1:-1;2248:439:7;-1:-1:-1;2248:439:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3184:51:8::0;3157:18;;2672:31:0::1;3038:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2575:307:2:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:2;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;3184:51:8;3157:18;;1901:40:0;3038:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;361:286:8:-;420:6;473:2;461:9;452:7;448:23;444:32;441:52;;;489:1;486;479:12;441:52;515:23;;-1:-1:-1;;;;;567:31:8;;557:42;;547:70;;613:1;610;603:12;547:70;636:5;361:286;-1:-1:-1;;;361:286:8:o;1124:626::-;1221:6;1229;1282:2;1270:9;1261:7;1257:23;1253:32;1250:52;;;1298:1;1295;1288:12;1250:52;1338:9;1325:23;1367:18;1408:2;1400:6;1397:14;1394:34;;;1424:1;1421;1414:12;1394:34;1462:6;1451:9;1447:22;1437:32;;1507:7;1500:4;1496:2;1492:13;1488:27;1478:55;;1529:1;1526;1519:12;1478:55;1569:2;1556:16;1595:2;1587:6;1584:14;1581:34;;;1611:1;1608;1601:12;1581:34;1664:7;1659:2;1649:6;1646:1;1642:14;1638:2;1634:23;1630:32;1627:45;1624:65;;;1685:1;1682;1675:12;1624:65;1716:2;1708:11;;;;;1738:6;;-1:-1:-1;1124:626:8;;-1:-1:-1;;;;1124:626:8:o;2086:180::-;2145:6;2198:2;2186:9;2177:7;2173:23;2169:32;2166:52;;;2214:1;2211;2204:12;2166:52;-1:-1:-1;2237:23:8;;2086:180;-1:-1:-1;2086:180:8:o;4128:266::-;4216:6;4211:3;4204:19;4268:6;4261:5;4254:4;4249:3;4245:14;4232:43;-1:-1:-1;4320:1:8;4295:16;;;4313:4;4291:27;;;4284:38;;;;4376:2;4355:15;;;-1:-1:-1;;4351:29:8;4342:39;;;4338:50;;4128:266::o;4399:1226::-;4600:2;4652:21;;;4625:18;;;4708:22;;;-1:-1:-1;;4761:2:8;4810:1;4806:14;;;4791:30;;4787:39;;;4746:18;;4849:6;-1:-1:-1;4883:713:8;4897:6;4894:1;4891:13;4883:713;;;4962:22;;;-1:-1:-1;;4958:36:8;4946:49;;5034:20;;5109:14;5105:27;;;-1:-1:-1;;5101:41:8;5077:66;;5067:94;;5157:1;5154;5147:12;5067:94;5187:31;;5292:14;;;;5245:19;5333:18;5322:30;;5319:50;;;5365:1;5362;5355:12;5319:50;5418:6;5402:14;5398:27;5389:7;5385:41;5382:61;;;5439:1;5436;5429:12;5382:61;5466:50;5509:6;5501;5492:7;5466:50;:::i;:::-;5456:60;-1:-1:-1;;;5574:12:8;;;;5539:15;;;;4919:1;4912:9;4883:713;;;-1:-1:-1;5613:6:8;;4399:1226;-1:-1:-1;;;;;;;4399:1226:8:o;5630:184::-;5700:6;5753:2;5741:9;5732:7;5728:23;5724:32;5721:52;;;5769:1;5766;5759:12;5721:52;-1:-1:-1;5792:16:8;;5630:184;-1:-1:-1;5630:184:8:o;5819:127::-;5880:10;5875:3;5871:20;5868:1;5861:31;5911:4;5908:1;5901:15;5935:4;5932:1;5925:15;5951:214;6049:1;6038:16;;;6020;;;;6016:39;-1:-1:-1;;6070:34:8;;6116:18;6106:29;;6067:69;6064:95;;;6139:18;;:::i;6170:237::-;6242:9;;;6209:7;6267:9;;-1:-1:-1;;;6278:18:8;;6263:34;6260:60;;;6300:18;;:::i;:::-;6373:1;6364:7;6359:16;6356:1;6353:23;6349:1;6342:9;6339:38;6329:72;;6381:18;;:::i;6412:127::-;6473:10;6468:3;6464:20;6461:1;6454:31;6504:4;6501:1;6494:15;6528:4;6525:1;6518:15;6544:193;6583:1;6609;6599:35;;6614:18;;:::i;:::-;-1:-1:-1;;;6650:18:8;;-1:-1:-1;;6670:13:8;;6646:38;6643:64;;;6687:18;;:::i;:::-;-1:-1:-1;6721:10:8;;6544:193::o;6742:168::-;6815:9;;;6846;;6863:15;;;6857:22;;6843:37;6833:71;;6884:18;;:::i;6915:120::-;6955:1;6981;6971:35;;6986:18;;:::i;:::-;-1:-1:-1;7020:9:8;;6915:120::o;7040:125::-;7105:9;;;7126:10;;;7123:36;;;7139:18;;:::i;7170:136::-;7205:3;-1:-1:-1;;;7226:22:8;;7223:48;;7251:18;;:::i;:::-;-1:-1:-1;7291:1:8;7287:13;;7170:136::o;7311:128::-;7378:9;;;7399:11;;;7396:37;;;7413:18;;:::i;8853:175::-;8931:13;;8984:18;8973:30;;8963:41;;8953:69;;9018:1;9015;9008:12;8953:69;8853:175;;;:::o;9033:164::-;9110:13;;9163:1;9152:20;;;9142:31;;9132:59;;9187:1;9184;9177:12;9202:855;9294:6;9347:3;9335:9;9326:7;9322:23;9318:33;9315:53;;;9364:1;9361;9354:12;9315:53;9397:2;9391:9;9439:3;9431:6;9427:16;9509:6;9497:10;9494:22;9473:18;9461:10;9458:34;9455:62;9452:185;;;9559:10;9554:3;9550:20;9547:1;9540:31;9594:4;9591:1;9584:15;9622:4;9619:1;9612:15;9452:185;9653:2;9646:22;9690:16;;9746:1;9735:20;;;9725:31;;9715:59;;9770:1;9767;9760:12;9715:59;9783:21;;9837:48;9881:2;9866:18;;9837:48;:::i;:::-;9832:2;9824:6;9820:15;9813:73;9919:47;9962:2;9951:9;9947:18;9919:47;:::i;:::-;9914:2;9906:6;9902:15;9895:72;10021:2;10010:9;10006:18;10000:25;9995:2;9987:6;9983:15;9976:50;10045:6;10035:16;;;9202:855;;;;:::o"},"methodIdentifiers":{"closeShort(bytes[])":"2eb99760","emergencyWithdraw(uint256)":"5312ea8e","getContractInfo()":"7cc1f867","getCurrentPrice()":"eb91d37e","getPosition(address)":"16c19739","getUpdateFee(bytes[])":"d47eed45","hasActivePosition(address)":"93b57f99","openShort(bytes[])":"86e1ce5e","owner()":"8da5cb5b","positions(address)":"55f57510","pyth()":"f98d06f0","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","viewPnL(address)":"36198eb9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientUpdateFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoActivePosition\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooStale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"pnl\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"exitPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShortClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShortOpened\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"}],\"name\":\"closeShort\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pythContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"entryPrice\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct SimpleShortContract.ShortPosition\",\"name\":\"position\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasActivePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasPosition\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"}],\"name\":\"openShort\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"entryPrice\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"viewPnL\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"pnl\",\"type\":\"int256\"},{\"internalType\":\"int64\",\"name\":\"currentPrice\",\"type\":\"int64\"},{\"internalType\":\"int256\",\"name\":\"pnlPercentage\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A simple ETH shorting contract using Pyth Network price feeds\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"closeShort(bytes[])\":{\"details\":\"Close short position and calculate P&L\",\"params\":{\"priceUpdateData\":\"Pyth price update data\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdraw function (owner only)\",\"params\":{\"amount\":\"Amount to withdraw (0 for all)\"}},\"getContractInfo()\":{\"details\":\"Get contract statistics\",\"returns\":{\"priceId\":\"ETH/USD price feed ID\",\"pythContract\":\"Address of Pyth contract\",\"totalBalance\":\"Total ETH balance in contract\"}},\"getCurrentPrice()\":{\"details\":\"Get current ETH price with validation\",\"returns\":{\"price\":\"Current ETH/USD price (8 decimals)\",\"timestamp\":\"Price publish timestamp\"}},\"getPosition(address)\":{\"details\":\"Get position details for a user\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"position\":\"The user's position details\"}},\"getUpdateFee(bytes[])\":{\"details\":\"Get the required update fee for price updates\",\"params\":{\"priceUpdateData\":\"Pyth price update data\"},\"returns\":{\"fee\":\"Required fee in wei\"}},\"hasActivePosition(address)\":{\"details\":\"Check if user has an active position\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"hasPosition\":\"True if user has active position\"}},\"openShort(bytes[])\":{\"details\":\"Open a short position on ETH\",\"params\":{\"priceUpdateData\":\"Pyth price update data\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"viewPnL(address)\":{\"details\":\"View current P&L without closing position\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"currentPrice\":\"Current ETH price\",\"pnl\":\"Current profit/loss in wei\",\"pnlPercentage\":\"P&L as percentage (basis points)\"}}},\"title\":\"SimpleShortContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Users can open short positions on ETH and profit from price decreases\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleShortContract.sol\":\"SimpleShortContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"contracts/SimpleShortContract.sol\":{\"keccak256\":\"0x65231b1147968bab22acc5386365c4b7864f0f7e7364b8c1597ba7a4fd0274ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://932c0d72088dc23c3f398d0d8c978ba3de9b8d8290325fce5ada0005894427c5\",\"dweb:/ipfs/QmRzNZiLbTDm9NZ6TtQANKLhbxmS49XAHWYqMBmKAJAkBD\"]}},\"version\":1}"}}}}}